[
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Exercise 3: Processing and Visualizing Flow Data",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if the packages below are installed into the R environment. If they are, then they will be launched into R.\n\npacman::p_load(tmap, sf, DT, stplanr,\n               performance,\n               ggpubr, tidyverse)\n\n\n\n\nWe will be using three data sets for this exercise. Data were retrieved for the following:\n\nPassenger Volume by Origin Destination Bus Stops data set for the month of October- Aspatial data\nBus Stop. - Geospatial data that provides the location of bus stop\nMPSZ-2019 - Geospatial data that provides the sub-zone boundary of URA Master Plan 2019.\n\nIn this exercise, we are interested to build an OD matrix with the above data sets.\n\n\nThe code chunk below uses st_read() of sf package to import the 1st data set into R. The imported shapefile will be simple features object of sf.\n\nodbus <- read_csv(\"data/aspatial/origin_destination_bus_202310.csv\")\nglimpse(odbus)\n\nRows: 5,694,297\nColumns: 7\n$ YEAR_MONTH          <chr> \"2023-10\", \"2023-10\", \"2023-10\", \"2023-10\", \"2023-…\n$ DAY_TYPE            <chr> \"WEEKENDS/HOLIDAY\", \"WEEKDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       <dbl> 16, 16, 14, 14, 17, 17, 17, 7, 14, 14, 10, 20, 20,…\n$ PT_TYPE             <chr> \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      <chr> \"04168\", \"04168\", \"80119\", \"80119\", \"44069\", \"2028…\n$ DESTINATION_PT_CODE <chr> \"10051\", \"10051\", \"90079\", \"90079\", \"17229\", \"2014…\n$ TOTAL_TRIPS         <dbl> 3, 5, 3, 5, 4, 1, 24, 2, 1, 7, 3, 2, 5, 1, 1, 1, 1…\n\n\n\n\n\nAs identified, we will be using two geospatial data.\n\n\nThe code chunk below uses st_read() of sf package to import the busstop into R. The imported shapefile will be simple features object of sf.\n\nbusstop <- st_read(dsn = \"data/geospatial\",\n                   layer = \"BusStop\") %>%\n  st_transform(crs = 3414)\n\nReading layer `BusStop' from data source \n  `/Users/smu/Rworkshop/jiawenoh/ISSS624/Hands-on_Ex/Hands-on_Ex03/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\n\n\n\n\nThen, we will use the same approach to import MPSZ-2019 into R.\n\nmpsz <- st_read(dsn = \"data/geospatial\",\n                   layer = \"MPSZ-2019\") %>%\n  st_transform(crs = 3414)\n\nReading layer `MPSZ-2019' from data source \n  `/Users/smu/Rworkshop/jiawenoh/ISSS624/Hands-on_Ex/Hands-on_Ex03/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#data-extraction",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#data-extraction",
    "title": "Exercise 3: Processing and Visualizing Flow Data",
    "section": "2.1 Data Extraction",
    "text": "2.1 Data Extraction\nWe are interested in the commuting flows on Weekday between 6 to 9 o’clock. As such, we will run the following code :\n\n\nShow the code\nodbus6_9 <- odbus %>%\n  filter(DAY_TYPE == \"WEEKDAY\",\n         between(TIME_PER_HOUR, 6, 9)) %>%\n  group_by(ORIGIN_PT_CODE,\n           DESTINATION_PT_CODE) %>%\n  summarise(TRIPS = sum(TOTAL_TRIPS))\n\n\n\n\n\n\n\n\nTip\n\n\n\nInstead of doing pipe on two filters, we could add in additional conditions in `filter()\n\n\nFor future use, we could save the output in rds format and re-import into the R environment.\n\nwrite_rds(odbus6_9, \"data/rds/odbus6_9.rds\")\nodbus6_9 <- read_rds(\"data/rds/odbus6_9.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#geospatial-data-wrangling",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#geospatial-data-wrangling",
    "title": "Exercise 3: Processing and Visualizing Flow Data",
    "section": "2.2 Geospatial Data Wrangling",
    "text": "2.2 Geospatial Data Wrangling\n\n2.2.1 Combine busstop and mpsz\nNext, we will populate the planning subzone code of mpsz sf data frame into busstop sf data frame through st_intersection() for point and polygon overlay. Note: the output will be a point sf object.\n\n\nShow the code\nbusstop_mpsz <- st_intersection(busstop, mpsz) %>%\n  select(BUS_STOP_N, SUBZONE_C) %>%\n  st_drop_geometry()\n\n\nSimilarly, we can save the data:\n\nwrite_rds(busstop_mpsz, \"data/rds/busstop_mpsz.rds\")  \n\n\n\n2.2.2 Append busstop_mpsz onto odbus6_9\nWe will be performing a left_join() to append the subzone code onto odbus6_9 data frame. To ensure that there is no duplicate, we can use unique() to retain the distinct records.\n\n\nShow the code\nod_data <- left_join(odbus6_9 , busstop_mpsz,\n            by = c(\"ORIGIN_PT_CODE\" = \"BUS_STOP_N\")) %>%\n  rename(ORIGIN_BS = ORIGIN_PT_CODE,\n         ORIGIN_SZ = SUBZONE_C,\n         DESTIN_BS = DESTINATION_PT_CODE) %>%\n  unique() %>%\n  ungroup()\n\n\n\n\n2.2.3 Update od_data frame with MPSZ\nNext, we will update od_data data frame with the planning subzone codes.\n\n\nShow the code\nod_data <- left_join(od_data , busstop_mpsz,\n            by = c(\"DESTIN_BS\" = \"BUS_STOP_N\")) %>%\n  unique() %>%\n  ungroup()\n\n\nThen, we will remove NA and sum the trips.\n\n\nShow the code\nod_data <- od_data %>%\n  rename(DESTIN_SZ = SUBZONE_C) %>%\n  drop_na() %>%\n  group_by(ORIGIN_SZ, DESTIN_SZ) %>%\n  summarise(MORNING_PEAK = sum(TRIPS))\n\n#save output\nwrite_rds(od_data, \"data/rds/od_data.rds\")\nod_data <- read_rds(\"data/rds/od_data.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/data/geospatial/MPSZ-2019.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/data/geospatial/MPSZ-2019.html",
    "title": "",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02a.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02a.html",
    "title": "Exercise 2A: Spatial Weights and Applications",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if sf, spdep, tmap, tidyverse , and knitr packages are installed into the R environment. If they are, then they will be launched into R.\n\npacman::p_load(sf, spdep, tmap, tidyverse, knitr)\n\n\n\n\nWe will be using two data sets for this exercise. Data were retrieved on 19th Nov 2023. They are :\n\nHunan country boundary layer*. (data is in ESRI shapefile format) - Geospatial data\nHunan_2012.csv*. (data is in csv file) - Attribute table\n\n\n\nThe code chunk below uses st_read() of sf package to import the 1st data set into R. The imported shapefile will be simple features object of sf.\n\nhunan <- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `/Users/smu/Rworkshop/jiawenoh/ISSS624/Hands-on_Ex/Hands-on_Ex02/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n\n\nNext, we will import the 2nd dataset (csv) into R. We will use read_csv() of readr package. The output is in R dataframe class.\n\nhunan2012 <- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\n\n\n\nAfter importing, we will update the attribute table of hunan’s Spatial Polygons Data Frame with the attribute fields of hunan2012 dataframe. We will performed a left_join() with the aid of dplyr package.\n\nhunan <- left_join(hunan,hunan2012) %>%\n  select(1:4,7,15)\n\nWe will be joining both tables by County. By doing the left_join, we will combined the 8 variables from hunan, with 29 variables from hunan2012 and uses select() to filter for the variables that we are interested in."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02a.html#computing-queen-contiguity-based-neighbors",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02a.html#computing-queen-contiguity-based-neighbors",
    "title": "Exercise 2A: Spatial Weights and Applications",
    "section": "3.1 Computing (QUEEN) contiguity based neighbors",
    "text": "3.1 Computing (QUEEN) contiguity based neighbors\nThe code chunk below is used to compute Queen contiguity weight matrix.\n\nwm_q <- poly2nb(hunan, queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\nObservations:\n\nSummary report highlights 88 area units in Hunan.\n1 most connected region with 11 neighbors, and\n2 least connected regions with only 1 neighbor.\n\nFor each polygon in our polygon object, wm_q lists all neighboring polygons. E.g., to see the neighbors of the first polygon in the object, we could use the following code:\n\nwm_q[[1]]\n\n[1]  2  3  4 57 85\n\n\nFrom the output, we observed that polygon 1 have 5 neighbors. The respective polygons ID are stored in the hunan Spatial Polygons Data Frame Class.\nTo retrieve the country name of Polygon ID = 1, we can use the following code:\n\nhunan$County[1]\n\n[1] \"Anxiang\"\n\n\nThe output shows that Polygon ID = 1 is Anxiang country. To know more about the five neighboring polygons that we have identified with, the below code chunk will be used:\n\nhunan$NAME_3[c(2,3,4,57,85)]\n\n[1] \"Hanshou\" \"Jinshi\"  \"Li\"      \"Nan\"     \"Taoyuan\"\n\n\nSimilarly, we are able to retrieve the GDPPC of these five countries by using the code chunk below:\n\nnb1 <- wm_q[[1]]\nnb1 <- hunan$GDPPC[nb1]\nnb1\n\n[1] 20981 34592 24473 21311 22879\n\n\nAdditionally, we can display the complete weight matrix by using str() . For the purpose of this exercise, we will add [0:10] to display the first 10 list instead of the full 88.\n\nstr(wm_q[0:10])\n\nList of 10\n $ : int [1:5] 2 3 4 57 85\n $ : int [1:5] 1 57 58 78 85\n $ : int [1:4] 1 4 5 85\n $ : int [1:4] 1 3 5 6\n $ : int [1:4] 3 4 6 85\n $ : int [1:5] 4 5 69 75 85\n $ : int [1:4] 67 71 74 84\n $ : int [1:7] 9 46 47 56 78 80 86\n $ : int [1:6] 8 66 68 78 84 86\n $ : int [1:8] 16 17 19 20 22 70 72 73"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02a.html#creating-rook-contiguity-based-neighbors",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02a.html#creating-rook-contiguity-based-neighbors",
    "title": "Exercise 2A: Spatial Weights and Applications",
    "section": "3.2 Creating (ROOK) contiguity based neighbors",
    "text": "3.2 Creating (ROOK) contiguity based neighbors\nThe code chunk below will be used to compute Rook contiguity weight matrix.\n\nwm_r <- poly2nb(hunan, queen=FALSE)\nsummary(wm_r)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 440 \nPercentage nonzero weights: 5.681818 \nAverage number of links: 5 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 10 \n 2  2 12 20 21 14 11  3  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 10 links\n\n\nObservations:\n\nSummary report highlights 88 area units in Hunan.\nSimilar to section 3.1 in terms of area units and least connected regions.\nDiffers in the most connected area as Rook shows 10 neighbors whereas Queen shows 11 neighbors."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02a.html#visualising-contiguity-weights",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02a.html#visualising-contiguity-weights",
    "title": "Exercise 2A: Spatial Weights and Applications",
    "section": "3.3 Visualising contiguity weights",
    "text": "3.3 Visualising contiguity weights\nWe will be using sf package to get the latitude and longitude of the polygon centroids which allow us to take a point and display a line to each neighboring point. To do so, we would require the coordinates in a separate data frame, and apply a mapping function. The mapping function applies a given function to each element of a vector and returns a vector of the same length.\nOur input vector will be geometry column of us.bound while our function will be st_centroid. Additionally, we will be using map_dbl variation of map from the purrr package.\nTo get our longitude value, we map the st_centroid function over the geometry column of us.bound and access the longitude value through double bracket notation [[]] and 1 which allows us to get the first value in each centroid and the longitude.\n\nlongitude <- map_dbl(hunan$geometry, ~st_centroid(.x)[[1]])\n\nSimilarly, we use the same approach to get latitude. However, we will replace 1 with 2.\n\nlatitude <- map_dbl(hunan$geometry, ~st_centroid(.x)[[2]])\n\nWith longitude and latitude, we can combine them through cbind() to put longitude and latitude into the same object and use head() to check the first few observations.\n\ncoords <- cbind(longitude, latitude)\nhead(coords)\n\n     longitude latitude\n[1,]  112.1531 29.44362\n[2,]  112.0372 28.86489\n[3,]  111.8917 29.47107\n[4,]  111.7031 29.74499\n[5,]  111.6138 29.49258\n[6,]  111.0341 29.79863"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02a.html#plotting-contiguity-based-neighbors-map",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02a.html#plotting-contiguity-based-neighbors-map",
    "title": "Exercise 2A: Spatial Weights and Applications",
    "section": "3.4 Plotting Contiguity based neighbors map",
    "text": "3.4 Plotting Contiguity based neighbors map\nWe will be plotting the contiguity based neighbors map for Queen, and Rock. Ideally, we are able to plot individually, or combined them together.\n\nQueenRookQueen and Rook\n\n\n\n\nShow the code\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_q, coords, pch = 19, cex = 0.6, add = TRUE, col= \"red\")\n\n\n\n\n\n\n\n\n\nShow the code\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_r, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")\n\n\n\n\n\n\n\n\n\nShow the code\npar(mfrow=c(1,2))\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_q, coords, pch = 19, cex = 0.6, add = TRUE, col= \"red\", main=\"Queen Contiguity\") \n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_r, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\", main=\"Rook Contiguity\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02a.html#spatial-leg-with-row-standarized-weights",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02a.html#spatial-leg-with-row-standarized-weights",
    "title": "Exercise 2A: Spatial Weights and Applications",
    "section": "7.1 Spatial leg with row-standarized weights",
    "text": "7.1 Spatial leg with row-standarized weights\n\nProcessOutput\n\n\nStep 1: Compute average neighbor GDPP value for each polygon. Often, these values are referred to as spatially lagged values.\n\nGDPPC.lag <- lag.listw(rswm_q, hunan$GDPPC)\nGDPPC.lag\n\n [1] 24847.20 22724.80 24143.25 27737.50 27270.25 21248.80 43747.00 33582.71\n [9] 45651.17 32027.62 32671.00 20810.00 25711.50 30672.33 33457.75 31689.20\n[17] 20269.00 23901.60 25126.17 21903.43 22718.60 25918.80 20307.00 20023.80\n[25] 16576.80 18667.00 14394.67 19848.80 15516.33 20518.00 17572.00 15200.12\n[33] 18413.80 14419.33 24094.50 22019.83 12923.50 14756.00 13869.80 12296.67\n[41] 15775.17 14382.86 11566.33 13199.50 23412.00 39541.00 36186.60 16559.60\n[49] 20772.50 19471.20 19827.33 15466.80 12925.67 18577.17 14943.00 24913.00\n[57] 25093.00 24428.80 17003.00 21143.75 20435.00 17131.33 24569.75 23835.50\n[65] 26360.00 47383.40 55157.75 37058.00 21546.67 23348.67 42323.67 28938.60\n[73] 25880.80 47345.67 18711.33 29087.29 20748.29 35933.71 15439.71 29787.50\n[81] 18145.00 21617.00 29203.89 41363.67 22259.09 44939.56 16902.00 16930.00\n\n\nStep 2: Append spatially lag GDPPC values onto hunan sf data frame\n\nlag.list <- list(hunan$NAME_3, lag.listw(rswm_q, hunan$GDPPC))\nlag.res <- as.data.frame(lag.list)\ncolnames(lag.res) <- c(\"NAME_3\", \"lag GDPPC\")\nhunan <- left_join(hunan,lag.res)\n\nStep 3: Verify data frame\n\nhead(hunan)\n\nSimple feature collection with 6 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 110.4922 ymin: 28.61762 xmax: 112.3013 ymax: 30.12812\nGeodetic CRS:  WGS 84\n   NAME_2  ID_3  NAME_3   ENGTYPE_3  County GDPPC lag GDPPC\n1 Changde 21098 Anxiang      County Anxiang 23667  24847.20\n2 Changde 21100 Hanshou      County Hanshou 20981  22724.80\n3 Changde 21101  Jinshi County City  Jinshi 34592  24143.25\n4 Changde 21102      Li      County      Li 24473  27737.50\n5 Changde 21103   Linli      County   Linli 25554  27270.25\n6 Changde 21104  Shimen      County  Shimen 27137  21248.80\n                        geometry\n1 POLYGON ((112.0625 29.75523...\n2 POLYGON ((112.2288 29.11684...\n3 POLYGON ((111.8927 29.6013,...\n4 POLYGON ((111.3731 29.94649...\n5 POLYGON ((111.6324 29.76288...\n6 POLYGON ((110.8825 30.11675...\n\n\n\n\n\n\nShow the code\ngdppc <- qtm(hunan, \"GDPPC\")\nlag_gdppc <- qtm(hunan, \"lag GDPPC\")\ntmap_arrange(gdppc, lag_gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02a.html#spatial-lag-as-sum-of-neighboring-values",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02a.html#spatial-lag-as-sum-of-neighboring-values",
    "title": "Exercise 2A: Spatial Weights and Applications",
    "section": "7.2 Spatial lag as sum of neighboring values",
    "text": "7.2 Spatial lag as sum of neighboring values\n\nProcessOutput\n\n\nTo begin, we can calculate spatial lag as a sum of neighboring values by assigning binary weights. This requires us to go back to our neighbors list, then apply a function that will assign binary weights, then we use glist = in the nb2listw() function to explicitly assign these weights.\nStep 1: apply lapply() function to assign a value of 1 for each neighbor\nStep 2: apply nb2listw() function to explicitly assign these weights.\n\nb_weights <- lapply(wm_q, function(x) 0*x + 1)\nb_weights2 <- nb2listw(wm_q, \n                       glist = b_weights, \n                       style = \"B\")\nb_weights2\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1    S2\nB 88 7744 448 896 10224\n\n\nStep 3: use lag.listw() to compute a lag variable from our weight and GDPPC.\n\nlag_sum <- list(hunan$NAME_3, lag.listw(b_weights2, hunan$GDPPC))\nlag.res <- as.data.frame(lag_sum)\ncolnames(lag.res) <- c(\"NAME_3\", \"lag_sum GDPPC\")\n\nStep 4: examine the result\n\nlag_sum\n\n[[1]]\n [1] \"Anxiang\"       \"Hanshou\"       \"Jinshi\"        \"Li\"           \n [5] \"Linli\"         \"Shimen\"        \"Liuyang\"       \"Ningxiang\"    \n [9] \"Wangcheng\"     \"Anren\"         \"Guidong\"       \"Jiahe\"        \n[13] \"Linwu\"         \"Rucheng\"       \"Yizhang\"       \"Yongxing\"     \n[17] \"Zixing\"        \"Changning\"     \"Hengdong\"      \"Hengnan\"      \n[21] \"Hengshan\"      \"Leiyang\"       \"Qidong\"        \"Chenxi\"       \n[25] \"Zhongfang\"     \"Huitong\"       \"Jingzhou\"      \"Mayang\"       \n[29] \"Tongdao\"       \"Xinhuang\"      \"Xupu\"          \"Yuanling\"     \n[33] \"Zhijiang\"      \"Lengshuijiang\" \"Shuangfeng\"    \"Xinhua\"       \n[37] \"Chengbu\"       \"Dongan\"        \"Dongkou\"       \"Longhui\"      \n[41] \"Shaodong\"      \"Suining\"       \"Wugang\"        \"Xinning\"      \n[45] \"Xinshao\"       \"Shaoshan\"      \"Xiangxiang\"    \"Baojing\"      \n[49] \"Fenghuang\"     \"Guzhang\"       \"Huayuan\"       \"Jishou\"       \n[53] \"Longshan\"      \"Luxi\"          \"Yongshun\"      \"Anhua\"        \n[57] \"Nan\"           \"Yuanjiang\"     \"Jianghua\"      \"Lanshan\"      \n[61] \"Ningyuan\"      \"Shuangpai\"     \"Xintian\"       \"Huarong\"      \n[65] \"Linxiang\"      \"Miluo\"         \"Pingjiang\"     \"Xiangyin\"     \n[69] \"Cili\"          \"Chaling\"       \"Liling\"        \"Yanling\"      \n[73] \"You\"           \"Zhuzhou\"       \"Sangzhi\"       \"Yueyang\"      \n[77] \"Qiyang\"        \"Taojiang\"      \"Shaoyang\"      \"Lianyuan\"     \n[81] \"Hongjiang\"     \"Hengyang\"      \"Guiyang\"       \"Changsha\"     \n[85] \"Taoyuan\"       \"Xiangtan\"      \"Dao\"           \"Jiangyong\"    \n\n[[2]]\n [1] 124236 113624  96573 110950 109081 106244 174988 235079 273907 256221\n[11]  98013 104050 102846  92017 133831 158446 141883 119508 150757 153324\n[21] 113593 129594 142149 100119  82884  74668  43184  99244  46549  20518\n[31] 140576 121601  92069  43258 144567 132119  51694  59024  69349  73780\n[41]  94651 100680  69398  52798 140472 118623 180933  82798  83090  97356\n[51]  59482  77334  38777 111463  74715 174391 150558 122144  68012  84575\n[61] 143045  51394  98279  47671  26360 236917 220631 185290  64640  70046\n[71] 126971 144693 129404 284074 112268 203611 145238 251536 108078 238300\n[81] 108870 108085 262835 248182 244850 404456  67608  33860\n\n\nStep 5: Append the lag_sum GDPPC into hunan sf data frame\n\nhunan <- left_join(hunan, lag.res)\n\n\n\n\n\nShow the code\ngdppc <- qtm(hunan, \"GDPPC\")\nlag_sum_gdppc <- qtm(hunan, \"lag_sum GDPPC\")\ntmap_arrange(gdppc, lag_sum_gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02a.html#spatial-window-average",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02a.html#spatial-window-average",
    "title": "Exercise 2A: Spatial Weights and Applications",
    "section": "7.3 Spatial window average",
    "text": "7.3 Spatial window average\nThe spatial window average uses row-standardized weights and includes the diagonal element.\n\nProcessOutput\n\n\nStep 1: add diagonal element to the neighbor list by using include.self() from spdep\n\nwm_qs <- include.self(wm_q)\n\nStep 2: Check neighbor list of area [1]\n\nwm_qs[[1]]\n\n[1]  1  2  3  4 57 85\n\n\nStep 3: Obtain weights with nb2listw()\n\nwm_qs <- nb2listw(wm_qs)\nwm_qs\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 30.90265 357.5308\n\n\nStep 4: create lag variable from our weight structure and GDPPC variable\n\nlag_w_avg_gpdpc <- lag.listw(wm_qs, \n                             hunan$GDPPC)\nlag_w_avg_gpdpc\n\n [1] 24650.50 22434.17 26233.00 27084.60 26927.00 22230.17 47621.20 37160.12\n [9] 49224.71 29886.89 26627.50 22690.17 25366.40 25825.75 30329.00 32682.83\n[17] 25948.62 23987.67 25463.14 21904.38 23127.50 25949.83 20018.75 19524.17\n[25] 18955.00 17800.40 15883.00 18831.33 14832.50 17965.00 17159.89 16199.44\n[33] 18764.50 26878.75 23188.86 20788.14 12365.20 15985.00 13764.83 11907.43\n[41] 17128.14 14593.62 11644.29 12706.00 21712.29 43548.25 35049.00 16226.83\n[49] 19294.40 18156.00 19954.75 18145.17 12132.75 18419.29 14050.83 23619.75\n[57] 24552.71 24733.67 16762.60 20932.60 19467.75 18334.00 22541.00 26028.00\n[65] 29128.50 46569.00 47576.60 36545.50 20838.50 22531.00 42115.50 27619.00\n[73] 27611.33 44523.29 18127.43 28746.38 20734.50 33880.62 14716.38 28516.22\n[81] 18086.14 21244.50 29568.80 48119.71 22310.75 43151.60 17133.40 17009.33\n\n\nStep 5: convert lag variable listw object into a dataframe by using as.data.frame()\n\nlag.list.wm_qs <- list(hunan$NAME_3, lag.listw(wm_qs, hunan$GDPPC))\nlag_wm_qs.res <- as.data.frame(lag.list.wm_qs)\ncolnames(lag_wm_qs.res) <- c(\"NAME_3\", \"lag_window_avg GDPPC\")\n\nStep 6: append lag_window_avg GDPPC values onto hunan sf data frame using left_join()\n\nhunan <- left_join(hunan, lag_wm_qs.res)\n\nStep 7: compare values of lag GDPPC and Spatial window average by using kable() of Knitr package\n\nhunan %>%\n  select(\"County\", \"lag GDPPC\", \"lag_window_avg GDPPC\") %>%\n  kable()\n\n\n\n\n\n\n\n\n\n\nCounty\nlag GDPPC\nlag_window_avg GDPPC\ngeometry\n\n\n\n\nAnxiang\n24847.20\n24650.50\nPOLYGON ((112.0625 29.75523…\n\n\nHanshou\n22724.80\n22434.17\nPOLYGON ((112.2288 29.11684…\n\n\nJinshi\n24143.25\n26233.00\nPOLYGON ((111.8927 29.6013,…\n\n\nLi\n27737.50\n27084.60\nPOLYGON ((111.3731 29.94649…\n\n\nLinli\n27270.25\n26927.00\nPOLYGON ((111.6324 29.76288…\n\n\nShimen\n21248.80\n22230.17\nPOLYGON ((110.8825 30.11675…\n\n\nLiuyang\n43747.00\n47621.20\nPOLYGON ((113.9905 28.5682,…\n\n\nNingxiang\n33582.71\n37160.12\nPOLYGON ((112.7181 28.38299…\n\n\nWangcheng\n45651.17\n49224.71\nPOLYGON ((112.7914 28.52688…\n\n\nAnren\n32027.62\n29886.89\nPOLYGON ((113.1757 26.82734…\n\n\nGuidong\n32671.00\n26627.50\nPOLYGON ((114.1799 26.20117…\n\n\nJiahe\n20810.00\n22690.17\nPOLYGON ((112.4425 25.74358…\n\n\nLinwu\n25711.50\n25366.40\nPOLYGON ((112.5914 25.55143…\n\n\nRucheng\n30672.33\n25825.75\nPOLYGON ((113.6759 25.87578…\n\n\nYizhang\n33457.75\n30329.00\nPOLYGON ((113.2621 25.68394…\n\n\nYongxing\n31689.20\n32682.83\nPOLYGON ((113.3169 26.41843…\n\n\nZixing\n20269.00\n25948.62\nPOLYGON ((113.7311 26.16259…\n\n\nChangning\n23901.60\n23987.67\nPOLYGON ((112.6144 26.60198…\n\n\nHengdong\n25126.17\n25463.14\nPOLYGON ((113.1056 27.21007…\n\n\nHengnan\n21903.43\n21904.38\nPOLYGON ((112.7599 26.98149…\n\n\nHengshan\n22718.60\n23127.50\nPOLYGON ((112.607 27.4689, …\n\n\nLeiyang\n25918.80\n25949.83\nPOLYGON ((112.9996 26.69276…\n\n\nQidong\n20307.00\n20018.75\nPOLYGON ((111.7818 27.0383,…\n\n\nChenxi\n20023.80\n19524.17\nPOLYGON ((110.2624 28.21778…\n\n\nZhongfang\n16576.80\n18955.00\nPOLYGON ((109.9431 27.72858…\n\n\nHuitong\n18667.00\n17800.40\nPOLYGON ((109.9419 27.10512…\n\n\nJingzhou\n14394.67\n15883.00\nPOLYGON ((109.8186 26.75842…\n\n\nMayang\n19848.80\n18831.33\nPOLYGON ((109.795 27.98008,…\n\n\nTongdao\n15516.33\n14832.50\nPOLYGON ((109.9294 26.46561…\n\n\nXinhuang\n20518.00\n17965.00\nPOLYGON ((109.227 27.43733,…\n\n\nXupu\n17572.00\n17159.89\nPOLYGON ((110.7189 28.30485…\n\n\nYuanling\n15200.12\n16199.44\nPOLYGON ((110.9652 28.99895…\n\n\nZhijiang\n18413.80\n18764.50\nPOLYGON ((109.8818 27.60661…\n\n\nLengshuijiang\n14419.33\n26878.75\nPOLYGON ((111.5307 27.81472…\n\n\nShuangfeng\n24094.50\n23188.86\nPOLYGON ((112.263 27.70421,…\n\n\nXinhua\n22019.83\n20788.14\nPOLYGON ((111.3345 28.19642…\n\n\nChengbu\n12923.50\n12365.20\nPOLYGON ((110.4455 26.69317…\n\n\nDongan\n14756.00\n15985.00\nPOLYGON ((111.4531 26.86812…\n\n\nDongkou\n13869.80\n13764.83\nPOLYGON ((110.6622 27.37305…\n\n\nLonghui\n12296.67\n11907.43\nPOLYGON ((110.985 27.65983,…\n\n\nShaodong\n15775.17\n17128.14\nPOLYGON ((111.9054 27.40254…\n\n\nSuining\n14382.86\n14593.62\nPOLYGON ((110.389 27.10006,…\n\n\nWugang\n11566.33\n11644.29\nPOLYGON ((110.9878 27.03345…\n\n\nXinning\n13199.50\n12706.00\nPOLYGON ((111.0736 26.84627…\n\n\nXinshao\n23412.00\n21712.29\nPOLYGON ((111.6013 27.58275…\n\n\nShaoshan\n39541.00\n43548.25\nPOLYGON ((112.5391 27.97742…\n\n\nXiangxiang\n36186.60\n35049.00\nPOLYGON ((112.4549 28.05783…\n\n\nBaojing\n16559.60\n16226.83\nPOLYGON ((109.7015 28.82844…\n\n\nFenghuang\n20772.50\n19294.40\nPOLYGON ((109.5239 28.19206…\n\n\nGuzhang\n19471.20\n18156.00\nPOLYGON ((109.8968 28.74034…\n\n\nHuayuan\n19827.33\n19954.75\nPOLYGON ((109.5647 28.61712…\n\n\nJishou\n15466.80\n18145.17\nPOLYGON ((109.8375 28.4696,…\n\n\nLongshan\n12925.67\n12132.75\nPOLYGON ((109.6337 29.62521…\n\n\nLuxi\n18577.17\n18419.29\nPOLYGON ((110.1067 28.41835…\n\n\nYongshun\n14943.00\n14050.83\nPOLYGON ((110.0003 29.29499…\n\n\nAnhua\n24913.00\n23619.75\nPOLYGON ((111.6034 28.63716…\n\n\nNan\n25093.00\n24552.71\nPOLYGON ((112.3232 29.46074…\n\n\nYuanjiang\n24428.80\n24733.67\nPOLYGON ((112.4391 29.1791,…\n\n\nJianghua\n17003.00\n16762.60\nPOLYGON ((111.6461 25.29661…\n\n\nLanshan\n21143.75\n20932.60\nPOLYGON ((112.2286 25.61123…\n\n\nNingyuan\n20435.00\n19467.75\nPOLYGON ((112.0715 26.09892…\n\n\nShuangpai\n17131.33\n18334.00\nPOLYGON ((111.8864 26.11957…\n\n\nXintian\n24569.75\n22541.00\nPOLYGON ((112.2578 26.0796,…\n\n\nHuarong\n23835.50\n26028.00\nPOLYGON ((112.9242 29.69134…\n\n\nLinxiang\n26360.00\n29128.50\nPOLYGON ((113.5502 29.67418…\n\n\nMiluo\n47383.40\n46569.00\nPOLYGON ((112.9902 29.02139…\n\n\nPingjiang\n55157.75\n47576.60\nPOLYGON ((113.8436 29.06152…\n\n\nXiangyin\n37058.00\n36545.50\nPOLYGON ((112.9173 28.98264…\n\n\nCili\n21546.67\n20838.50\nPOLYGON ((110.8822 29.69017…\n\n\nChaling\n23348.67\n22531.00\nPOLYGON ((113.7666 27.10573…\n\n\nLiling\n42323.67\n42115.50\nPOLYGON ((113.5673 27.94346…\n\n\nYanling\n28938.60\n27619.00\nPOLYGON ((113.9292 26.6154,…\n\n\nYou\n25880.80\n27611.33\nPOLYGON ((113.5879 27.41324…\n\n\nZhuzhou\n47345.67\n44523.29\nPOLYGON ((113.2493 28.02411…\n\n\nSangzhi\n18711.33\n18127.43\nPOLYGON ((110.556 29.40543,…\n\n\nYueyang\n29087.29\n28746.38\nPOLYGON ((113.343 29.61064,…\n\n\nQiyang\n20748.29\n20734.50\nPOLYGON ((111.5563 26.81318…\n\n\nTaojiang\n35933.71\n33880.62\nPOLYGON ((112.0508 28.67265…\n\n\nShaoyang\n15439.71\n14716.38\nPOLYGON ((111.5013 27.30207…\n\n\nLianyuan\n29787.50\n28516.22\nPOLYGON ((111.6789 28.02946…\n\n\nHongjiang\n18145.00\n18086.14\nPOLYGON ((110.1441 27.47513…\n\n\nHengyang\n21617.00\n21244.50\nPOLYGON ((112.7144 26.98613…\n\n\nGuiyang\n29203.89\n29568.80\nPOLYGON ((113.0811 26.04963…\n\n\nChangsha\n41363.67\n48119.71\nPOLYGON ((112.9421 28.03722…\n\n\nTaoyuan\n22259.09\n22310.75\nPOLYGON ((112.0612 29.32855…\n\n\nXiangtan\n44939.56\n43151.60\nPOLYGON ((113.0426 27.8942,…\n\n\nDao\n16902.00\n17133.40\nPOLYGON ((111.498 25.81679,…\n\n\nJiangyong\n16930.00\n17009.33\nPOLYGON ((111.3659 25.39472…\n\n\n\n\n\n\n\nPlot lap_gdppc and w_ave_gdppc maps by using qtm() of tmap package\n\n\nShow the code\nw_avg_gdppc <- qtm(hunan, \"lag_window_avg GDPPC\")\ntmap_arrange(lag_gdppc, w_avg_gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02a.html#spatial-window-sum",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02a.html#spatial-window-sum",
    "title": "Exercise 2A: Spatial Weights and Applications",
    "section": "7.4 Spatial window sum",
    "text": "7.4 Spatial window sum\nThe spatial window sum is the counter part of the window average, but without using row- standardized weights.\n\nProcessOutput\n\n\nStep 1: add diagonal element to the neighbor list by using include.self() from spdep\n\nwm_qs <- include.self(wm_q)\nwm_qs\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\n\nStep 2: Assign binary weights to the neighbor structure that includes the diagonal element\n\nb_weights <- lapply(wm_qs, function(x) 0*x + 1)\nb_weights[1]\n\n[[1]]\n[1] 1 1 1 1 1 1\n\n\nStep 3: Explicitly assign weight values by using nb2listw() and glist()\n\nb_weights2 <- nb2listw(wm_qs, \n                       glist = b_weights, \n                       style = \"B\")\nb_weights2\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn  S0   S1    S2\nB 88 7744 536 1072 14160\n\n\nStep 4: compute lag variable with lag.listw()\n\nw_sum_gdppc <- list(hunan$NAME_3, lag.listw(b_weights2, hunan$GDPPC))\nw_sum_gdppc\n\n[[1]]\n [1] \"Anxiang\"       \"Hanshou\"       \"Jinshi\"        \"Li\"           \n [5] \"Linli\"         \"Shimen\"        \"Liuyang\"       \"Ningxiang\"    \n [9] \"Wangcheng\"     \"Anren\"         \"Guidong\"       \"Jiahe\"        \n[13] \"Linwu\"         \"Rucheng\"       \"Yizhang\"       \"Yongxing\"     \n[17] \"Zixing\"        \"Changning\"     \"Hengdong\"      \"Hengnan\"      \n[21] \"Hengshan\"      \"Leiyang\"       \"Qidong\"        \"Chenxi\"       \n[25] \"Zhongfang\"     \"Huitong\"       \"Jingzhou\"      \"Mayang\"       \n[29] \"Tongdao\"       \"Xinhuang\"      \"Xupu\"          \"Yuanling\"     \n[33] \"Zhijiang\"      \"Lengshuijiang\" \"Shuangfeng\"    \"Xinhua\"       \n[37] \"Chengbu\"       \"Dongan\"        \"Dongkou\"       \"Longhui\"      \n[41] \"Shaodong\"      \"Suining\"       \"Wugang\"        \"Xinning\"      \n[45] \"Xinshao\"       \"Shaoshan\"      \"Xiangxiang\"    \"Baojing\"      \n[49] \"Fenghuang\"     \"Guzhang\"       \"Huayuan\"       \"Jishou\"       \n[53] \"Longshan\"      \"Luxi\"          \"Yongshun\"      \"Anhua\"        \n[57] \"Nan\"           \"Yuanjiang\"     \"Jianghua\"      \"Lanshan\"      \n[61] \"Ningyuan\"      \"Shuangpai\"     \"Xintian\"       \"Huarong\"      \n[65] \"Linxiang\"      \"Miluo\"         \"Pingjiang\"     \"Xiangyin\"     \n[69] \"Cili\"          \"Chaling\"       \"Liling\"        \"Yanling\"      \n[73] \"You\"           \"Zhuzhou\"       \"Sangzhi\"       \"Yueyang\"      \n[77] \"Qiyang\"        \"Taojiang\"      \"Shaoyang\"      \"Lianyuan\"     \n[81] \"Hongjiang\"     \"Hengyang\"      \"Guiyang\"       \"Changsha\"     \n[85] \"Taoyuan\"       \"Xiangtan\"      \"Dao\"           \"Jiangyong\"    \n\n[[2]]\n [1] 147903 134605 131165 135423 134635 133381 238106 297281 344573 268982\n[11] 106510 136141 126832 103303 151645 196097 207589 143926 178242 175235\n[21] 138765 155699 160150 117145 113730  89002  63532 112988  59330  35930\n[31] 154439 145795 112587 107515 162322 145517  61826  79925  82589  83352\n[41] 119897 116749  81510  63530 151986 174193 210294  97361  96472 108936\n[51]  79819 108871  48531 128935  84305 188958 171869 148402  83813 104663\n[61] 155742  73336 112705  78084  58257 279414 237883 219273  83354  90124\n[71] 168462 165714 165668 311663 126892 229971 165876 271045 117731 256646\n[81] 126603 127467 295688 336838 267729 431516  85667  51028\n\n\nStep 6: convert lag variable listw object into a dataframe by using as.data.frame()\n\nw_sum_gdppc.res <- as.data.frame(w_sum_gdppc)\ncolnames(w_sum_gdppc.res) <- c(\"NAME_3\", \"w_sum GDPPC\")\n\nStep 7: append w_sum GDPPC values into hunan sf data frame by using left_join()\n\nhunan <- left_join(hunan, w_sum_gdppc.res)\n\nStep 8: compare values of lag GDPPC and Spatial window average, kable() of Knitr package is used to prepare a table\n\nhunan %>%\n  select(\"County\", \"lag_sum GDPPC\", \"w_sum GDPPC\") %>%\n  kable()\n\n\n\n\n\n\n\n\n\n\nCounty\nlag_sum GDPPC\nw_sum GDPPC\ngeometry\n\n\n\n\nAnxiang\n124236\n147903\nPOLYGON ((112.0625 29.75523…\n\n\nHanshou\n113624\n134605\nPOLYGON ((112.2288 29.11684…\n\n\nJinshi\n96573\n131165\nPOLYGON ((111.8927 29.6013,…\n\n\nLi\n110950\n135423\nPOLYGON ((111.3731 29.94649…\n\n\nLinli\n109081\n134635\nPOLYGON ((111.6324 29.76288…\n\n\nShimen\n106244\n133381\nPOLYGON ((110.8825 30.11675…\n\n\nLiuyang\n174988\n238106\nPOLYGON ((113.9905 28.5682,…\n\n\nNingxiang\n235079\n297281\nPOLYGON ((112.7181 28.38299…\n\n\nWangcheng\n273907\n344573\nPOLYGON ((112.7914 28.52688…\n\n\nAnren\n256221\n268982\nPOLYGON ((113.1757 26.82734…\n\n\nGuidong\n98013\n106510\nPOLYGON ((114.1799 26.20117…\n\n\nJiahe\n104050\n136141\nPOLYGON ((112.4425 25.74358…\n\n\nLinwu\n102846\n126832\nPOLYGON ((112.5914 25.55143…\n\n\nRucheng\n92017\n103303\nPOLYGON ((113.6759 25.87578…\n\n\nYizhang\n133831\n151645\nPOLYGON ((113.2621 25.68394…\n\n\nYongxing\n158446\n196097\nPOLYGON ((113.3169 26.41843…\n\n\nZixing\n141883\n207589\nPOLYGON ((113.7311 26.16259…\n\n\nChangning\n119508\n143926\nPOLYGON ((112.6144 26.60198…\n\n\nHengdong\n150757\n178242\nPOLYGON ((113.1056 27.21007…\n\n\nHengnan\n153324\n175235\nPOLYGON ((112.7599 26.98149…\n\n\nHengshan\n113593\n138765\nPOLYGON ((112.607 27.4689, …\n\n\nLeiyang\n129594\n155699\nPOLYGON ((112.9996 26.69276…\n\n\nQidong\n142149\n160150\nPOLYGON ((111.7818 27.0383,…\n\n\nChenxi\n100119\n117145\nPOLYGON ((110.2624 28.21778…\n\n\nZhongfang\n82884\n113730\nPOLYGON ((109.9431 27.72858…\n\n\nHuitong\n74668\n89002\nPOLYGON ((109.9419 27.10512…\n\n\nJingzhou\n43184\n63532\nPOLYGON ((109.8186 26.75842…\n\n\nMayang\n99244\n112988\nPOLYGON ((109.795 27.98008,…\n\n\nTongdao\n46549\n59330\nPOLYGON ((109.9294 26.46561…\n\n\nXinhuang\n20518\n35930\nPOLYGON ((109.227 27.43733,…\n\n\nXupu\n140576\n154439\nPOLYGON ((110.7189 28.30485…\n\n\nYuanling\n121601\n145795\nPOLYGON ((110.9652 28.99895…\n\n\nZhijiang\n92069\n112587\nPOLYGON ((109.8818 27.60661…\n\n\nLengshuijiang\n43258\n107515\nPOLYGON ((111.5307 27.81472…\n\n\nShuangfeng\n144567\n162322\nPOLYGON ((112.263 27.70421,…\n\n\nXinhua\n132119\n145517\nPOLYGON ((111.3345 28.19642…\n\n\nChengbu\n51694\n61826\nPOLYGON ((110.4455 26.69317…\n\n\nDongan\n59024\n79925\nPOLYGON ((111.4531 26.86812…\n\n\nDongkou\n69349\n82589\nPOLYGON ((110.6622 27.37305…\n\n\nLonghui\n73780\n83352\nPOLYGON ((110.985 27.65983,…\n\n\nShaodong\n94651\n119897\nPOLYGON ((111.9054 27.40254…\n\n\nSuining\n100680\n116749\nPOLYGON ((110.389 27.10006,…\n\n\nWugang\n69398\n81510\nPOLYGON ((110.9878 27.03345…\n\n\nXinning\n52798\n63530\nPOLYGON ((111.0736 26.84627…\n\n\nXinshao\n140472\n151986\nPOLYGON ((111.6013 27.58275…\n\n\nShaoshan\n118623\n174193\nPOLYGON ((112.5391 27.97742…\n\n\nXiangxiang\n180933\n210294\nPOLYGON ((112.4549 28.05783…\n\n\nBaojing\n82798\n97361\nPOLYGON ((109.7015 28.82844…\n\n\nFenghuang\n83090\n96472\nPOLYGON ((109.5239 28.19206…\n\n\nGuzhang\n97356\n108936\nPOLYGON ((109.8968 28.74034…\n\n\nHuayuan\n59482\n79819\nPOLYGON ((109.5647 28.61712…\n\n\nJishou\n77334\n108871\nPOLYGON ((109.8375 28.4696,…\n\n\nLongshan\n38777\n48531\nPOLYGON ((109.6337 29.62521…\n\n\nLuxi\n111463\n128935\nPOLYGON ((110.1067 28.41835…\n\n\nYongshun\n74715\n84305\nPOLYGON ((110.0003 29.29499…\n\n\nAnhua\n174391\n188958\nPOLYGON ((111.6034 28.63716…\n\n\nNan\n150558\n171869\nPOLYGON ((112.3232 29.46074…\n\n\nYuanjiang\n122144\n148402\nPOLYGON ((112.4391 29.1791,…\n\n\nJianghua\n68012\n83813\nPOLYGON ((111.6461 25.29661…\n\n\nLanshan\n84575\n104663\nPOLYGON ((112.2286 25.61123…\n\n\nNingyuan\n143045\n155742\nPOLYGON ((112.0715 26.09892…\n\n\nShuangpai\n51394\n73336\nPOLYGON ((111.8864 26.11957…\n\n\nXintian\n98279\n112705\nPOLYGON ((112.2578 26.0796,…\n\n\nHuarong\n47671\n78084\nPOLYGON ((112.9242 29.69134…\n\n\nLinxiang\n26360\n58257\nPOLYGON ((113.5502 29.67418…\n\n\nMiluo\n236917\n279414\nPOLYGON ((112.9902 29.02139…\n\n\nPingjiang\n220631\n237883\nPOLYGON ((113.8436 29.06152…\n\n\nXiangyin\n185290\n219273\nPOLYGON ((112.9173 28.98264…\n\n\nCili\n64640\n83354\nPOLYGON ((110.8822 29.69017…\n\n\nChaling\n70046\n90124\nPOLYGON ((113.7666 27.10573…\n\n\nLiling\n126971\n168462\nPOLYGON ((113.5673 27.94346…\n\n\nYanling\n144693\n165714\nPOLYGON ((113.9292 26.6154,…\n\n\nYou\n129404\n165668\nPOLYGON ((113.5879 27.41324…\n\n\nZhuzhou\n284074\n311663\nPOLYGON ((113.2493 28.02411…\n\n\nSangzhi\n112268\n126892\nPOLYGON ((110.556 29.40543,…\n\n\nYueyang\n203611\n229971\nPOLYGON ((113.343 29.61064,…\n\n\nQiyang\n145238\n165876\nPOLYGON ((111.5563 26.81318…\n\n\nTaojiang\n251536\n271045\nPOLYGON ((112.0508 28.67265…\n\n\nShaoyang\n108078\n117731\nPOLYGON ((111.5013 27.30207…\n\n\nLianyuan\n238300\n256646\nPOLYGON ((111.6789 28.02946…\n\n\nHongjiang\n108870\n126603\nPOLYGON ((110.1441 27.47513…\n\n\nHengyang\n108085\n127467\nPOLYGON ((112.7144 26.98613…\n\n\nGuiyang\n262835\n295688\nPOLYGON ((113.0811 26.04963…\n\n\nChangsha\n248182\n336838\nPOLYGON ((112.9421 28.03722…\n\n\nTaoyuan\n244850\n267729\nPOLYGON ((112.0612 29.32855…\n\n\nXiangtan\n404456\n431516\nPOLYGON ((113.0426 27.8942,…\n\n\nDao\n67608\n85667\nPOLYGON ((111.498 25.81679,…\n\n\nJiangyong\n33860\n51028\nPOLYGON ((111.3659 25.39472…\n\n\n\n\n\n\n\nPlot lap_sum GDPPC and w_sum_gdppc maps by using qtm() of tmap package\n\n\nShow the code\nw_sum_gdppc <- qtm(hunan, \"w_sum GDPPC\")\ntmap_arrange(lag_sum_gdppc, w_sum_gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02c.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02c.html",
    "title": "Exercise 2C: Local Measures of Spatial Autocorrelation",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if sf, spdep, tmap, and tidyverse packages are installed into the R environment. If they are, then they will be launched into R.\n\npacman::p_load(sf, spdep, tmap, tidyverse)\n\n\n\n\nWe will be using two data sets for this exercise. Data were retrieved on 19th Nov 2023. They are :\n\nHunan country boundary layer*. (data is in ESRI shapefile format) - Geospatial data\nHunan_2012.csv*. (data is in csv file) - Attribute table\n\nIn this exercise, we are interested to examine the spatial pattern of GDPPC (a.k.a GPD per Capital) of Hunan Provice, People Republic of China.\n\n\nThe code chunk below uses st_read() of sf package to import the 1st data set into R. The imported shapefile will be simple features object of sf.\n\nhunan <- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `/Users/smu/Rworkshop/jiawenoh/ISSS624/Hands-on_Ex/Hands-on_Ex02/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n\n\nNext, we will import the 2nd dataset (csv) into R. We will use read_csv() of readr package. The output is in R dataframe class.\n\nhunan2012 <- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\n\n\n\nAfter importing, we will update the attribute table of hunan’s Spatial Polygons Data Frame with the attribute fields of hunan2012 dataframe. We will performed a left_join() with the aid of dplyr package.\n\nhunan <- left_join(hunan,hunan2012) %>%\n  select(1:4,7,15)\n\nWe will be joining both tables by County. By doing the left_join, we will combined the 8 variables from hunan, with 29 variables from hunan2012 and uses select() to filter for the variables that we are interested in.\n\n\n\nAfter joining, we will do a quick visualization. We will be using the qtm() of tmap package to prepare a basemap and a choropleth map to see the distribution of GDPPC 2012.\n\n\nShow the code\nequal <- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\")\n\nquantile <- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\")\n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02c.html#step-1-append-local-morans-i-with-spdf",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02c.html#step-1-append-local-morans-i-with-spdf",
    "title": "Exercise 2C: Local Measures of Spatial Autocorrelation",
    "section": "Step 1: Append Local Moran’s I with SPDF",
    "text": "Step 1: Append Local Moran’s I with SPDF\n\nhunan.localMI <- cbind(hunan,localMI) %>%\n  rename(Pr.Ii = Pr.z....E.Ii..)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02c.html#step-2-map-local-morans-i-values",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02c.html#step-2-map-local-morans-i-values",
    "title": "Exercise 2C: Local Measures of Spatial Autocorrelation",
    "section": "Step 2: Map local Moran’s I values",
    "text": "Step 2: Map local Moran’s I values\nUsing choropleth mapping function of tmap package, we can plot the local Moran’s I values:\n\n\nShow the code\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          palette = \"RdBu\",\n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02c.html#step-3-map-local-morans-i-p-values",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02c.html#step-3-map-local-morans-i-p-values",
    "title": "Exercise 2C: Local Measures of Spatial Autocorrelation",
    "section": "Step 3: Map local Moran’s I p-values",
    "text": "Step 3: Map local Moran’s I p-values\nAs seen above, Ii contains both positive and negative values. Thus, it is useful for us to consider the p-values for each values.\n\n\nShow the code\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02c.html#step-4-optional-map-both-local-morans-i-values-and-p-values",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02c.html#step-4-optional-map-both-local-morans-i-values-and-p-values",
    "title": "Exercise 2C: Local Measures of Spatial Autocorrelation",
    "section": "Step 4 (Optional) : Map both local Moran’s I values and p-values",
    "text": "Step 4 (Optional) : Map both local Moran’s I values and p-values\nFor effective interpretation, we can plot both I-values and corresponding p-values next to one another.\n\n\nShow the code\nlocalMI.map <- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\", \n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\npvalue.map <- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(localMI.map, pvalue.map, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02c.html#step-1-vectorize",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02c.html#step-1-vectorize",
    "title": "Exercise 2C: Local Measures of Spatial Autocorrelation",
    "section": "Step 1: Vectorize",
    "text": "Step 1: Vectorize\n\nquadrant <- vector(mode=\"numeric\",length=nrow(localMI))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02c.html#step-2-derive-spatially-lagged-variable-of-interest-and-centers-it-around-its-mean",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02c.html#step-2-derive-spatially-lagged-variable-of-interest-and-centers-it-around-its-mean",
    "title": "Exercise 2C: Local Measures of Spatial Autocorrelation",
    "section": "Step 2: Derive Spatially lagged variable of interest and centers it around its mean",
    "text": "Step 2: Derive Spatially lagged variable of interest and centers it around its mean\n\nhunan$lag_GDPPC <- lag.listw(rswm_q, hunan$GDPPC)\nDV <- hunan$lag_GDPPC - mean(hunan$lag_GDPPC)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02c.html#step-3-center-the-local-morans-around-the-mean",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02c.html#step-3-center-the-local-morans-around-the-mean",
    "title": "Exercise 2C: Local Measures of Spatial Autocorrelation",
    "section": "Step 3: Center the local Moran’s around the mean",
    "text": "Step 3: Center the local Moran’s around the mean\n\nLM_I <- localMI[,1] - mean(localMI[,1])"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02c.html#step-4-set-statistical-significance-level-for-the-local-moran",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02c.html#step-4-set-statistical-significance-level-for-the-local-moran",
    "title": "Exercise 2C: Local Measures of Spatial Autocorrelation",
    "section": "Step 4: Set statistical significance level for the local Moran",
    "text": "Step 4: Set statistical significance level for the local Moran\n\nsignif <- 0.05"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02c.html#step-5-define-the-quadrants",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02c.html#step-5-define-the-quadrants",
    "title": "Exercise 2C: Local Measures of Spatial Autocorrelation",
    "section": "Step 5: Define the quadrants",
    "text": "Step 5: Define the quadrants\n1 = low-low 2 = low - high 3 = high - low 4 = high - high\n\nquadrant[DV <0 & LM_I>0] <- 1\nquadrant[DV >0 & LM_I<0] <- 2\nquadrant[DV <0 & LM_I<0] <- 3  \nquadrant[DV >0 & LM_I>0] <- 4"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02c.html#step-6-place-non-significant-moran-in-category-0",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02c.html#step-6-place-non-significant-moran-in-category-0",
    "title": "Exercise 2C: Local Measures of Spatial Autocorrelation",
    "section": "Step 6: Place non-significant Moran in Category 0",
    "text": "Step 6: Place non-significant Moran in Category 0\n\nquadrant[localMI[,5]>signif] <- 0"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02c.html#final-output",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02c.html#final-output",
    "title": "Exercise 2C: Local Measures of Spatial Autocorrelation",
    "section": "Final Output:",
    "text": "Final Output:\n\nquadrant <- vector(mode=\"numeric\",length=nrow(localMI))\nhunan$lag_GDPPC <- lag.listw(rswm_q, hunan$GDPPC)\nDV <- hunan$lag_GDPPC - mean(hunan$lag_GDPPC)     \nLM_I <- localMI[,1]   \nsignif <- 0.05       \nquadrant[DV <0 & LM_I>0] <- 1\nquadrant[DV >0 & LM_I<0] <- 2\nquadrant[DV <0 & LM_I<0] <- 3  \nquadrant[DV >0 & LM_I>0] <- 4    \nquadrant[localMI[,5]>signif] <- 0"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02c.html#deriving-the-centriod",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02c.html#deriving-the-centriod",
    "title": "Exercise 2C: Local Measures of Spatial Autocorrelation",
    "section": "1.1 Deriving the centriod",
    "text": "1.1 Deriving the centriod\nBefore making our connectivity graph, we will need to associate each polygon. We will use a mapping function to get the longitude, latitude and thereafter, combine them together.\n\n#get longitude\nlongitude <- map_dbl(hunan$geometry, ~st_centroid(.x)[[1]])\n\n#get latitude\nlatitude <- map_dbl(hunan$geometry, ~st_centroid(.x)[[2]])\n\n#combine\ncoords <- cbind(longitude, latitude)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02c.html#determine-the-cut-off-distance",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02c.html#determine-the-cut-off-distance",
    "title": "Exercise 2C: Local Measures of Spatial Autocorrelation",
    "section": "1.2 Determine the cut-off distance",
    "text": "1.2 Determine the cut-off distance\nWe need to determine the upper list for distance band by :\n\nReturn a matrix with the indices of points belonging to the set of the k nearest neighbours of each other by using knearneigh() of spdep.\nConvert the knn object returned by knearneigh() into a neighbours list of class nb with a list of integer vectors containing neighbour region number ids by using knn2nb().\nReturn the length of neighbour relationship edges by using nbdists() of spdep. The function returns in the units of the coordinates if the coordinates are projected, in km otherwise.\nRemove the list structure of the returned object by using unlist().\n\n\n\nShow the code\n#coords <- coordinates(hunan)\nk1 <- knn2nb(knearneigh(coords))\nk1dists <- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.79   32.57   38.01   39.07   44.52   61.79 \n\n\nAs seen above, the max distance is 61.79km. We can infer that all units will have at least one neighbour."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02c.html#compute-fixed-distance-weight-matrix",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02c.html#compute-fixed-distance-weight-matrix",
    "title": "Exercise 2C: Local Measures of Spatial Autocorrelation",
    "section": "1.3 Compute fixed distance weight matrix",
    "text": "1.3 Compute fixed distance weight matrix\nWe will compute the distance weight matrix by using dnearneigh():\n\n\nShow the code\n#compute distance weight matrix \nwm_d62 <- dnearneigh(coords, 0, 62, longlat = TRUE)\nwm_d62\n\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \n\n\nNext, nb2listw() is used to convert the nb object into spatial weights object.\n\n\nShow the code\nwm62_lw <- nb2listw(wm_d62, style = 'B')\nsummary(wm62_lw)\n\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \nLink number distribution:\n\n 1  2  3  4  5  6 \n 6 15 14 26 20  7 \n6 least connected regions:\n6 15 30 32 56 65 with 1 link\n7 most connected regions:\n21 28 35 45 50 52 82 with 6 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1   S2\nB 88 7744 324 648 5440"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02c.html#compute-adaptive-distance-weight-matrix",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02c.html#compute-adaptive-distance-weight-matrix",
    "title": "Exercise 2C: Local Measures of Spatial Autocorrelation",
    "section": "1.4 Compute adaptive distance weight matrix",
    "text": "1.4 Compute adaptive distance weight matrix\n\nknn <- knn2nb(knearneigh(coords, k=8))\nknn\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\n\n\nNext, nb2listw() is used to convert the nb object into spatial weights object.\n\n\nShow the code\nknn_lw <- nb2listw(knn, style = 'B')\nsummary(knn_lw)\n\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\nLink number distribution:\n\n 8 \n88 \n88 least connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n88 most connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0   S1    S2\nB 88 7744 704 1300 23014"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02c.html#gi-statistics-using-fixed-distance",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02c.html#gi-statistics-using-fixed-distance",
    "title": "Exercise 2C: Local Measures of Spatial Autocorrelation",
    "section": "Gi Statistics using fixed distance",
    "text": "Gi Statistics using fixed distance\nNotably, the output of localG() is a vector of G or Gstar values, with attributes gstari set to TRUE or FALSE. The Gi stats represents the z-score where greater values represent a greater intensity of clustering and the direction (positive or negative) indicates high or low clusters.\n\n\nShow the code\nfips <- order(hunan$County)\ngi.fixed <- localG(hunan$GDPPC, wm62_lw)\ngi.fixed \n\n\n [1]  0.436075843 -0.265505650 -0.073033665  0.413017033  0.273070579\n [6] -0.377510776  2.863898821  2.794350420  5.216125401  0.228236603\n[11]  0.951035346 -0.536334231  0.176761556  1.195564020 -0.033020610\n[16]  1.378081093 -0.585756761 -0.419680565  0.258805141  0.012056111\n[21] -0.145716531 -0.027158687 -0.318615290 -0.748946051 -0.961700582\n[26] -0.796851342 -1.033949773 -0.460979158 -0.885240161 -0.266671512\n[31] -0.886168613 -0.855476971 -0.922143185 -1.162328599  0.735582222\n[36] -0.003358489 -0.967459309 -1.259299080 -1.452256513 -1.540671121\n[41] -1.395011407 -1.681505286 -1.314110709 -0.767944457 -0.192889342\n[46]  2.720804542  1.809191360 -1.218469473 -0.511984469 -0.834546363\n[51] -0.908179070 -1.541081516 -1.192199867 -1.075080164 -1.631075961\n[56] -0.743472246  0.418842387  0.832943753 -0.710289083 -0.449718820\n[61] -0.493238743 -1.083386776  0.042979051  0.008596093  0.136337469\n[66]  2.203411744  2.690329952  4.453703219 -0.340842743 -0.129318589\n[71]  0.737806634 -1.246912658  0.666667559  1.088613505 -0.985792573\n[76]  1.233609606 -0.487196415  1.626174042 -1.060416797  0.425361422\n[81] -0.837897118 -0.314565243  0.371456331  4.424392623 -0.109566928\n[86]  1.364597995 -1.029658605 -0.718000620\nattr(,\"internals\")\n               Gi      E(Gi)        V(Gi)        Z(Gi) Pr(z != E(Gi))\n [1,] 0.064192949 0.05747126 2.375922e-04  0.436075843   6.627817e-01\n [2,] 0.042300020 0.04597701 1.917951e-04 -0.265505650   7.906200e-01\n [3,] 0.044961480 0.04597701 1.933486e-04 -0.073033665   9.417793e-01\n [4,] 0.039475779 0.03448276 1.461473e-04  0.413017033   6.795941e-01\n [5,] 0.049767939 0.04597701 1.927263e-04  0.273070579   7.847990e-01\n [6,] 0.008825335 0.01149425 4.998177e-05 -0.377510776   7.057941e-01\n [7,] 0.050807266 0.02298851 9.435398e-05  2.863898821   4.184617e-03\n [8,] 0.083966739 0.04597701 1.848292e-04  2.794350420   5.200409e-03\n [9,] 0.115751554 0.04597701 1.789361e-04  5.216125401   1.827045e-07\n[10,] 0.049115587 0.04597701 1.891013e-04  0.228236603   8.194623e-01\n[11,] 0.045819180 0.03448276 1.420884e-04  0.951035346   3.415864e-01\n[12,] 0.049183846 0.05747126 2.387633e-04 -0.536334231   5.917276e-01\n[13,] 0.048429181 0.04597701 1.924532e-04  0.176761556   8.596957e-01\n[14,] 0.034733752 0.02298851 9.651140e-05  1.195564020   2.318667e-01\n[15,] 0.011262043 0.01149425 4.945294e-05 -0.033020610   9.736582e-01\n[16,] 0.065131196 0.04597701 1.931870e-04  1.378081093   1.681783e-01\n[17,] 0.027587075 0.03448276 1.385862e-04 -0.585756761   5.580390e-01\n[18,] 0.029409313 0.03448276 1.461397e-04 -0.419680565   6.747188e-01\n[19,] 0.061466754 0.05747126 2.383385e-04  0.258805141   7.957856e-01\n[20,] 0.057656917 0.05747126 2.371303e-04  0.012056111   9.903808e-01\n[21,] 0.066518379 0.06896552 2.820326e-04 -0.145716531   8.841452e-01\n[22,] 0.045599896 0.04597701 1.928108e-04 -0.027158687   9.783332e-01\n[23,] 0.030646753 0.03448276 1.449523e-04 -0.318615290   7.500183e-01\n[24,] 0.035635552 0.04597701 1.906613e-04 -0.748946051   4.538897e-01\n[25,] 0.032606647 0.04597701 1.932888e-04 -0.961700582   3.362000e-01\n[26,] 0.035001352 0.04597701 1.897172e-04 -0.796851342   4.255374e-01\n[27,] 0.012746354 0.02298851 9.812587e-05 -1.033949773   3.011596e-01\n[28,] 0.061287917 0.06896552 2.773884e-04 -0.460979158   6.448136e-01\n[29,] 0.014277403 0.02298851 9.683314e-05 -0.885240161   3.760271e-01\n[30,] 0.009622875 0.01149425 4.924586e-05 -0.266671512   7.897221e-01\n[31,] 0.014258398 0.02298851 9.705244e-05 -0.886168613   3.755267e-01\n[32,] 0.005453443 0.01149425 4.986245e-05 -0.855476971   3.922871e-01\n[33,] 0.043283712 0.05747126 2.367109e-04 -0.922143185   3.564539e-01\n[34,] 0.020763514 0.03448276 1.393165e-04 -1.162328599   2.451020e-01\n[35,] 0.081261843 0.06896552 2.794398e-04  0.735582222   4.619850e-01\n[36,] 0.057419907 0.05747126 2.338437e-04 -0.003358489   9.973203e-01\n[37,] 0.013497133 0.02298851 9.624821e-05 -0.967459309   3.333145e-01\n[38,] 0.019289310 0.03448276 1.455643e-04 -1.259299080   2.079223e-01\n[39,] 0.025996272 0.04597701 1.892938e-04 -1.452256513   1.464303e-01\n[40,] 0.016092694 0.03448276 1.424776e-04 -1.540671121   1.233968e-01\n[41,] 0.035952614 0.05747126 2.379439e-04 -1.395011407   1.630124e-01\n[42,] 0.031690963 0.05747126 2.350604e-04 -1.681505286   9.266481e-02\n[43,] 0.018750079 0.03448276 1.433314e-04 -1.314110709   1.888090e-01\n[44,] 0.015449080 0.02298851 9.638666e-05 -0.767944457   4.425202e-01\n[45,] 0.065760689 0.06896552 2.760533e-04 -0.192889342   8.470456e-01\n[46,] 0.098966900 0.05747126 2.326002e-04  2.720804542   6.512325e-03\n[47,] 0.085415780 0.05747126 2.385746e-04  1.809191360   7.042128e-02\n[48,] 0.038816536 0.05747126 2.343951e-04 -1.218469473   2.230456e-01\n[49,] 0.038931873 0.04597701 1.893501e-04 -0.511984469   6.086619e-01\n[50,] 0.055098610 0.06896552 2.760948e-04 -0.834546363   4.039732e-01\n[51,] 0.033405005 0.04597701 1.916312e-04 -0.908179070   3.637836e-01\n[52,] 0.043040784 0.06896552 2.829941e-04 -1.541081516   1.232969e-01\n[53,] 0.011297699 0.02298851 9.615920e-05 -1.192199867   2.331829e-01\n[54,] 0.040968457 0.05747126 2.356318e-04 -1.075080164   2.823388e-01\n[55,] 0.023629663 0.04597701 1.877170e-04 -1.631075961   1.028743e-01\n[56,] 0.006281129 0.01149425 4.916619e-05 -0.743472246   4.571958e-01\n[57,] 0.063918654 0.05747126 2.369553e-04  0.418842387   6.753313e-01\n[58,] 0.070325003 0.05747126 2.381374e-04  0.832943753   4.048765e-01\n[59,] 0.025947288 0.03448276 1.444058e-04 -0.710289083   4.775249e-01\n[60,] 0.039752578 0.04597701 1.915656e-04 -0.449718820   6.529132e-01\n[61,] 0.049934283 0.05747126 2.334965e-04 -0.493238743   6.218439e-01\n[62,] 0.030964195 0.04597701 1.920248e-04 -1.083386776   2.786368e-01\n[63,] 0.058129184 0.05747126 2.343319e-04  0.042979051   9.657182e-01\n[64,] 0.046096514 0.04597701 1.932637e-04  0.008596093   9.931414e-01\n[65,] 0.012459080 0.01149425 5.008051e-05  0.136337469   8.915545e-01\n[66,] 0.091447733 0.05747126 2.377744e-04  2.203411744   2.756574e-02\n[67,] 0.049575872 0.02298851 9.766513e-05  2.690329952   7.138140e-03\n[68,] 0.107907212 0.04597701 1.933581e-04  4.453703219   8.440175e-06\n[69,] 0.019616151 0.02298851 9.789454e-05 -0.340842743   7.332220e-01\n[70,] 0.032923393 0.03448276 1.454032e-04 -0.129318589   8.971056e-01\n[71,] 0.030317663 0.02298851 9.867859e-05  0.737806634   4.606320e-01\n[72,] 0.019437582 0.03448276 1.455870e-04 -1.246912658   2.124295e-01\n[73,] 0.055245460 0.04597701 1.932838e-04  0.666667559   5.049845e-01\n[74,] 0.074278054 0.05747126 2.383538e-04  1.088613505   2.763244e-01\n[75,] 0.013269580 0.02298851 9.719982e-05 -0.985792573   3.242349e-01\n[76,] 0.049407829 0.03448276 1.463785e-04  1.233609606   2.173484e-01\n[77,] 0.028605749 0.03448276 1.455139e-04 -0.487196415   6.261191e-01\n[78,] 0.039087662 0.02298851 9.801040e-05  1.626174042   1.039126e-01\n[79,] 0.031447120 0.04597701 1.877464e-04 -1.060416797   2.889550e-01\n[80,] 0.064005294 0.05747126 2.359641e-04  0.425361422   6.705732e-01\n[81,] 0.044606529 0.05747126 2.357330e-04 -0.837897118   4.020885e-01\n[82,] 0.063700493 0.06896552 2.801427e-04 -0.314565243   7.530918e-01\n[83,] 0.051142205 0.04597701 1.933560e-04  0.371456331   7.102977e-01\n[84,] 0.102121112 0.04597701 1.610278e-04  4.424392623   9.671399e-06\n[85,] 0.021901462 0.02298851 9.843172e-05 -0.109566928   9.127528e-01\n[86,] 0.064931813 0.04597701 1.929430e-04  1.364597995   1.723794e-01\n[87,] 0.031747344 0.04597701 1.909867e-04 -1.029658605   3.031703e-01\n[88,] 0.015893319 0.02298851 9.765131e-05 -0.718000620   4.727569e-01\nattr(,\"cluster\")\n [1] Low  Low  High High High High High High High Low  Low  High Low  Low  Low \n[16] High High High High Low  High High Low  Low  High Low  Low  Low  Low  Low \n[31] Low  Low  Low  High Low  Low  Low  Low  Low  Low  High Low  Low  Low  Low \n[46] High High Low  Low  Low  Low  High Low  Low  Low  Low  Low  High Low  Low \n[61] Low  Low  Low  High High High Low  High Low  Low  High Low  High High Low \n[76] High Low  Low  Low  Low  Low  Low  High High Low  High Low  Low \nLevels: Low High\nattr(,\"gstari\")\n[1] FALSE\nattr(,\"call\")\nlocalG(x = hunan$GDPPC, listw = wm62_lw)\nattr(,\"class\")\n[1] \"localG\"\n\n\nNext, we will join the Gi values to their corresponding hunan sf data frame by using the code chunk below by converting the output vector (gi.fixed) into r matrix object by using as.matrix(). Then, cbind() to join hunan data and gi.fixed matrix to produce a new Spatial Polygon Data Frame called hunan.gi.\nLastly, it will be rename to gstat_fixed by using rename().\n\nhunan.gi <- cbind(hunan, as.matrix(gi.fixed)) %>%\n  rename(gstat_fixed = as.matrix.gi.fixed.)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02c.html#fixed-distance-weights",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02c.html#fixed-distance-weights",
    "title": "Exercise 2C: Local Measures of Spatial Autocorrelation",
    "section": "fixed distance weights",
    "text": "fixed distance weights\n\n\nShow the code\ngdppc <- qtm(hunan, \"GDPPC\")\n\nGimap <-tm_shape(hunan.gi) +\n  tm_fill(col = \"gstat_fixed\", \n          style = \"pretty\",\n          palette=\"-RdBu\",\n          title = \"local Gi\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, Gimap, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02c.html#adaptive-distance-weights",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02c.html#adaptive-distance-weights",
    "title": "Exercise 2C: Local Measures of Spatial Autocorrelation",
    "section": "adaptive distance weights",
    "text": "adaptive distance weights\n\n\nShow the code\n# compute the Gi value \nfips <- order(hunan$County)\ngi.adaptive <- localG(hunan$GDPPC, knn_lw)\nhunan.gi <- cbind(hunan, as.matrix(gi.adaptive)) %>%\n  rename(gstat_adaptive = as.matrix.gi.adaptive.)\n\n\ngdppc<- qtm(hunan, \"GDPPC\")\n\nGimap <- tm_shape(hunan.gi) + \n  tm_fill(col = \"gstat_adaptive\", \n          style = \"pretty\", \n          palette=\"-RdBu\", \n          title = \"local Gi\") + \n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, \n             Gimap, \n             asp=1, \n             ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02b.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02b.html",
    "title": "Exercise 2B: Global Measures of Spatial Autocorrelation",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if sf, spdep, tmap, and tidyverse packages are installed into the R environment. If they are, then they will be launched into R.\n\npacman::p_load(sf, spdep, tmap, tidyverse)\n\n\n\n\nWe will be using two data sets for this exercise. Data were retrieved on 19th Nov 2023. They are :\n\nHunan country boundary layer*. (data is in ESRI shapefile format) - Geospatial data\nHunan_2012.csv*. (data is in csv file) - Attribute table\n\nIn this exercise, we are interested to examine the spatial pattern of GDPPC (a.k.a GPD per Capital) of Hunan Provice, People Republic of China.\n\n\nThe code chunk below uses st_read() of sf package to import the 1st data set into R. The imported shapefile will be simple features object of sf.\n\nhunan <- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `/Users/smu/Rworkshop/jiawenoh/ISSS624/Hands-on_Ex/Hands-on_Ex02/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n\n\nNext, we will import the 2nd dataset (csv) into R. We will use read_csv() of readr package. The output is in R dataframe class.\n\nhunan2012 <- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\n\n\n\nAfter importing, we will update the attribute table of hunan’s Spatial Polygons Data Frame with the attribute fields of hunan2012 dataframe. We will performed a left_join() with the aid of dplyr package.\n\nhunan <- left_join(hunan,hunan2012) %>%\n  select(1:4,7,15)\n\nWe will be joining both tables by County. By doing the left_join, we will combined the 8 variables from hunan, with 29 variables from hunan2012 and uses select() to filter for the variables that we are interested in.\n\n\n\nAfter joining, we will do a quick visualization. We will be using the qtm() of tmap package to prepare a basemap and a choropleth map to see the distribution of GDPPC 2012.\n\n\nShow the code\nequal <- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\")\n\nquantile <- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\")\n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02b.html#computing-contiguity-spatial-weights",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02b.html#computing-contiguity-spatial-weights",
    "title": "Exercise 2B: Global Measures of Spatial Autocorrelation",
    "section": "2.1 Computing Contiguity Spatial Weights",
    "text": "2.1 Computing Contiguity Spatial Weights\nTo begin with, we are require to construct a spatial weights of the study area. The spatial weights is used to define the neighborhood relationships between the geographical units (i.e. county) in the study area. We will be using poly2nb() of spdep package to compute QUEEN contiguity weight matrices for the study area.\n\nwm_q <- poly2nb(hunan, \n                queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\nObservations:\n\nSummary report highlights 88 area units in Hunan.\n1 most connected region with 11 neighbors, and\n2 least connected regions with only 1 neighbor."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02b.html#row-standardised-weights-matrix",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02b.html#row-standardised-weights-matrix",
    "title": "Exercise 2B: Global Measures of Spatial Autocorrelation",
    "section": "2.2 Row-standardised weights matrix",
    "text": "2.2 Row-standardised weights matrix\nNext, we would need to assign weights to each neighboring polygon. Weights are assigned based on the fraction of 1/#no.of neighbors to each neighboring country then summing the weighted income values.\nFor the example below, we will used style = ‘W’ option (note: there are robust options available). By adding ’Zero.police = TRUE’, we are allowing list of non-neighbors.\n\nrswm_q <- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n\n\n\n\n\n\n\n\nNote about nb2listw()\n\n\n\n\n\nnb2listw() has two major arguments, namely style and zero.policy.\nThere are 6 Styles, namely:\n\n“W” : row standardize (sum over all links to n)\n“B” : basic binary coding\n“C” : globally standardised (sum over all links to n)\n“U” : is equal to C divided by the number of neighbors (sum over all links to unity)\n“minmax” : the min, and max\n“S” : variance-stabilizing coding scheme\n\nThe default setting for zero.policy:\n\n‘NULL’ : (default), uses global option value\n‘TRUE’ : permit the weights list to be formed with zero-length weights vectors\n‘FALSE’ : stop with error for any empty neighbors sets\n\nRefer here for more information."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02b.html#morans-i-statistics-test",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02b.html#morans-i-statistics-test",
    "title": "Exercise 2B: Global Measures of Spatial Autocorrelation",
    "section": "2.3 Moran’s I Statistics test",
    "text": "2.3 Moran’s I Statistics test\nThere are two tests that we could perform. In this section, we will cover the Moran’s I test. We will be using moran.test() of spdep to perform the statistical test.\n\nMoran’s I TestMonte Carlo Moran’s IVisualisation\n\n\nWe will perform Moran’s I statistical testing using moran.test() of spdep:\n\n\nShow the code\nmoran.test(hunan$GDPPC, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n\n    Moran I test under randomisation\n\ndata:  hunan$GDPPC  \nweights: rswm_q    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\nAs observed, we can reject the null hypothesis (Ho) as the p-value is smaller than the alpha value.\n\n\nWe will perform permutation test for Moran’s statistic by using moran.mc() of spdep. A total of 1000 simulation will be performed:\n\n\nShow the code\nset.seed(1234)\nbperm= moran.mc(hunan$GDPPC, \n                listw=rswm_q, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\nAs observed, we can reject the null hypothesis (Ho) as the p-value is smaller than the alpha value.\n\n\nWe will be examining the simulated Moran’s I test statistic by plotting the distribution of the statistical values through a histogram:\n\n\nShow the code\n#print mean\ncat('The mean is:', mean(bperm$res[1:999]),'\\n')\n\n\nThe mean is: -0.01504572 \n\n\nShow the code\n#print variance\ncat('The variance is:', var(bperm$res[1:999]), '\\n')\n\n\nThe variance is: 0.004371574 \n\n\nShow the code\n#print summary\ncat('Summary Report\\n')\n\n\nSummary Report\n\n\nShow the code\nsummary(bperm$res[1:999])\n\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.18339 -0.06168 -0.02125 -0.01505  0.02611  0.27593 \n\n\n\n\nShow the code\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\")\nabline(v=0, \n       col=\"red\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02b.html#gearys-statistics-test",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02b.html#gearys-statistics-test",
    "title": "Exercise 2B: Global Measures of Spatial Autocorrelation",
    "section": "2.4 Geary’s Statistics Test",
    "text": "2.4 Geary’s Statistics Test\nIn this section, we will cover the Geary’s C test. We will be using geary.test() of spdep to perform the statistical test.\n\nGeary’s C TestMonte Carlo Geary’s CVisualisation\n\n\nWe will perform Geary’s C statistical testing using geary.test() of spdep:\n\n\nShow the code\ngeary.test(hunan$GDPPC, listw=rswm_q)\n\n\n\n    Geary C test under randomisation\n\ndata:  hunan$GDPPC \nweights: rswm_q \n\nGeary C statistic standard deviate = 3.6108, p-value = 0.0001526\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n        0.6907223         1.0000000         0.0073364 \n\n\n\n\nWe will perform permutation test for Geary’s statistic by using geary.mc() of spdep. A total of 1000 simulation will be performed:\n\n\nShow the code\nset.seed(1234)\ngperm=geary.mc(hunan$GDPPC, \n               listw=rswm_q, \n               nsim=999)\ngperm\n\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  hunan$GDPPC \nweights: rswm_q \nnumber of simulations + 1: 1000 \n\nstatistic = 0.69072, observed rank = 1, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n\nWe will be examining the simulated Geary’s C test statistic by plotting the distribution of the statistical values through a histogram:\n\n\nShow the code\n#print mean\ncat('The mean is:', mean(gperm$res[1:999]),'\\n')\n\n\nThe mean is: 1.004402 \n\n\nShow the code\n#print variance\ncat('The variance is:', var(gperm$res[1:999]), '\\n')\n\n\nThe variance is: 0.007436493 \n\n\nShow the code\n#print summary\ncat('Summary Report\\n')\n\n\nSummary Report\n\n\nShow the code\nsummary(gperm$res[1:999])\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7142  0.9502  1.0052  1.0044  1.0595  1.2722 \n\n\n\n\nShow the code\nhist(bperm$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\")\nabline(v=1, col=\"red\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02b.html#compute-morans-i-correlogram",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02b.html#compute-morans-i-correlogram",
    "title": "Exercise 2B: Global Measures of Spatial Autocorrelation",
    "section": "3.1 Compute Moran’s I correlogram",
    "text": "3.1 Compute Moran’s I correlogram\nThe global spatial autocorrelation used in Moran’s I. For the graph, we will use plot() of base graph.\n\n\nShow the code\nMI_corr <- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n\n\n\n\n\nTo get a better interpretation of the output, we can examine the full analysis by printing the results.\n\nprint(MI_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (88)  0.3007500  -0.0114943  0.0043484           4.7351       2.189e-06 ***\n2 (88)  0.2060084  -0.0114943  0.0020962           4.7505       2.029e-06 ***\n3 (88)  0.0668273  -0.0114943  0.0014602           2.0496        0.040400 *  \n4 (88)  0.0299470  -0.0114943  0.0011717           1.2107        0.226015    \n5 (88) -0.1530471  -0.0114943  0.0012440          -4.0134       5.984e-05 ***\n6 (88) -0.1187070  -0.0114943  0.0016791          -2.6164        0.008886 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02b.html#compute-gearys-c-correlogram",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02b.html#compute-gearys-c-correlogram",
    "title": "Exercise 2B: Global Measures of Spatial Autocorrelation",
    "section": "3.2 Compute Geary’s C correlogram",
    "text": "3.2 Compute Geary’s C correlogram\nThe global spatial autocorrelation used in Geary’s C. For the graph, we will use plot() of base graph.\n\n\nShow the code\nGC_corr <- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nplot(GC_corr)\n\n\n\n\n\nTo get a better analysis,\n\nprint(GC_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (88) 0.6907223   1.0000000 0.0073364          -3.6108       0.0003052 ***\n2 (88) 0.7630197   1.0000000 0.0049126          -3.3811       0.0007220 ***\n3 (88) 0.9397299   1.0000000 0.0049005          -0.8610       0.3892612    \n4 (88) 1.0098462   1.0000000 0.0039631           0.1564       0.8757128    \n5 (88) 1.2008204   1.0000000 0.0035568           3.3673       0.0007592 ***\n6 (88) 1.0773386   1.0000000 0.0058042           1.0151       0.3100407    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Exercise 1A: Geospatial Data Wrangling",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if sf and tidyverse packages are installed into the R environment. If they are, then they will be launched into R.\n\npacman::p_load(sf, tidyverse)\n\n\n\n\nIn this section, the following data will be imported into R through st_read() of sf package:\n\nMP14_SUBZONE_WEB_PL , a polygon feature layer in ESRI shapefile format\nCyclingPath , a line feature layer in ESRI shapefile format, and\nPreSchool , a point feature layer in kml file format.\n\n\n\nThe code chunk below uses st_read() of sf package to import MP14_SUBZONE_WEB_PL:\n\nmpsz = st_read(dsn = \"data/geospatial\", \n                  layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/smu/Rworkshop/jiawenoh/ISSS624/Hands-on_Ex/Hands-on_Ex01/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nIt can be observed that there are a total of 323 multipolygon features and 15 fields in mpsz simple feature data frame. mpsz is in svy21 projected coordinates systems.\n\n\n\nThe code chunk below uses st_read() of sf package to import CyclingPath shapefile:\n\ncyclingpath = st_read(dsn = \"data/geospatial\", \n                         layer = \"CyclingPathGazette\")\n\nReading layer `CyclingPathGazette' from data source \n  `/Users/smu/Rworkshop/jiawenoh/ISSS624/Hands-on_Ex/Hands-on_Ex01/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 2558 features and 2 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 11854.32 ymin: 28347.98 xmax: 42626.09 ymax: 48948.15\nProjected CRS: SVY21\n\n\nIt can be observed that there are a total of 2,558 features and 2 fields in cyclingpath linestring feature data frame. It is in svy21 projected coordinates systems.\n\n\n\nThe code chunk below will be used to import the kml (pre-schools-location-kml) into R:\n\npreschool = st_read(\"data/geospatial/PreSchoolsLocation.kml\")\n\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `/Users/smu/Rworkshop/jiawenoh/ISSS624/Hands-on_Ex/Hands-on_Ex01/data/geospatial/PreSchoolsLocation.kml' \n  using driver `KML'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\nIt can be observed that there are a total of 2,290 features and 2 fields in preschool point feature data frame. It is a wgs84 coordinates systems."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-st_geometry",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-st_geometry",
    "title": "Exercise 1A: Geospatial Data Wrangling",
    "section": "2.1 Working with st_geometry()",
    "text": "2.1 Working with st_geometry()\nBy using mpsz$geom or mpsz[[1]], we can retrieve the geometry list-column which only display basic information of the feature class, such as type of geometry, geographic extent of the features and the coordinate system of the data.\n\nst_geometry(mpsz)\n\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 5 geometries:"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-glimpse",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-glimpse",
    "title": "Exercise 1A: Geospatial Data Wrangling",
    "section": "2.2 Working with glimpse ()",
    "text": "2.2 Working with glimpse ()\nBy using glimpse() of dplyr, we are able to learn more about the associated attribution information in the data frame. It reveals the data type of each fields (e.g., FMEL-UPD_D is in data data type, and X_ADDR is a double-precision values)\n\nglimpse(mpsz)\n\nRows: 323\nColumns: 16\n$ OBJECTID   <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ SUBZONE_NO <int> 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, 2, 2, …\n$ SUBZONE_N  <chr> \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERSON HIL…\n$ SUBZONE_C  <chr> \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BMSZ07\",…\n$ CA_IND     <chr> \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\",…\n$ PLN_AREA_N <chr> \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT MERAH\",…\n$ PLN_AREA_C <chr> \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\", \"SR\", \"QT\", \"QT\",…\n$ REGION_N   <chr> \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENT…\n$ REGION_C   <chr> \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",…\n$ INC_CRC    <chr> \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13E0E5\",…\n$ FMEL_UPD_D <date> 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05…\n$ X_ADDR     <dbl> 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 25358.82,…\n$ Y_ADDR     <dbl> 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 29991.38,…\n$ SHAPE_Leng <dbl> 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 4428.913,…\n$ SHAPE_Area <dbl> 1630379.27, 559816.25, 160807.50, 595428.89, 387429.44, 103…\n$ geometry   <MULTIPOLYGON [m]> MULTIPOLYGON (((31495.56 30..., MULTIPOLYGON (…"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-head",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-head",
    "title": "Exercise 1A: Geospatial Data Wrangling",
    "section": "2.3 Working with head()",
    "text": "2.3 Working with head()\nInstead of printing the complete information, head() allow users to select the numbers of record to display (i.e., the n argument)\n\nhead(mpsz, n=5)\n\nSimple feature collection with 5 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 25867.68 ymin: 28369.47 xmax: 32362.39 ymax: 30435.54\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n    Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1 29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2 29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3 29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4 29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5 30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30..."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#assigning-epsg-code-to-a-simple-feature-data-frame",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#assigning-epsg-code-to-a-simple-feature-data-frame",
    "title": "Exercise 1A: Geospatial Data Wrangling",
    "section": "4.1 Assigning EPSG code to a simple feature data frame",
    "text": "4.1 Assigning EPSG code to a simple feature data frame\nIn the code chunk below, it illustrates the coordinate system of mpsz simple feature data frame by using st_crs() of sf package:\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\nAs seen from the result, the EPSG code is inaccurate. Instead of showing 3414 (svg21), it displays 9001 (last row). This is a common issue that could happen in the process of importing geospatial data into R. The coordinate system of the source data could be missing or wrongly assigned.\nIn order to rectify the EPSG code, we will use the st_set_crs() of sf package:\n\nmpsz3414 <- st_transform(mpsz, 3414)\n\nTo validate, we will used the code chunk below:\n\nst_crs(mpsz3414)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#transforming-the-project-of-preschool-from-wgs84-to-svy21",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#transforming-the-project-of-preschool-from-wgs84-to-svy21",
    "title": "Exercise 1A: Geospatial Data Wrangling",
    "section": "4.2 Transforming the project of preschool from wgs84 to svy21",
    "text": "4.2 Transforming the project of preschool from wgs84 to svy21\nNotably, it is common for us to transform original data from geographic coordinate system to projected coordinate system as the geographic coordinate system is not appropriate if the analysis requires distance and/or area measurements.\nWe performed the project transformation by using the code chunk below:\n\npreschool3414 <- st_transform(preschool, \n                              crs = 3414)\n\nTo display the first 5 geometries and content of the preschool3414 data frame, we will use head():\n\nhead(preschool3414, n=5)\n\nSimple feature collection with 5 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 24821.92 ymin: 31299.16 xmax: 28844.56 ymax: 46303.16\nz_range:       zmin: 0 zmax: 0\nProjected CRS: SVY21 / Singapore TM\n   Name\n1 kml_1\n2 kml_2\n3 kml_3\n4 kml_4\n5 kml_5\n                                                                                                                                                                                                                                                                                                                                                                                                Description\n1           <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>CENTRE_NAME</th> <td>CHILDREN'S COVE PRESCHOOL PTE.LTD.</td> </tr><tr bgcolor=\"\"> <th>CENTRE_CODE</th> <td>PT9390</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>498CC9FE48CC94D4</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20211201093631</td> </tr></table></center>\n2                    <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>CENTRE_NAME</th> <td>CHILDREN'S COVE PTE. LTD.</td> </tr><tr bgcolor=\"\"> <th>CENTRE_CODE</th> <td>PT8675</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>22877550804213FD</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20211201093631</td> </tr></table></center>\n3       <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>CENTRE_NAME</th> <td>CHILDREN'S VINEYARD PRESCHOOL PTE. LTD</td> </tr><tr bgcolor=\"\"> <th>CENTRE_CODE</th> <td>PT9308</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>B2FE90E44AD494E3</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20211201093631</td> </tr></table></center>\n4 <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>CENTRE_NAME</th> <td>CHILDTIME CARE & DEVELOPMENT CENTRE PTE.LTD.</td> </tr><tr bgcolor=\"\"> <th>CENTRE_CODE</th> <td>PT9122</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>1384CDC0D14B76A1</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20211201093631</td> </tr></table></center>\n5                               <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>CENTRE_NAME</th> <td>CHILTERN HOUSE</td> </tr><tr bgcolor=\"\"> <th>CENTRE_CODE</th> <td>PT2070</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>FB24EAA6E73B2723</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20211201093631</td> </tr></table></center>\n                       geometry\n1 POINT Z (25089.46 31299.16 0)\n2 POINT Z (27189.07 32792.54 0)\n3 POINT Z (28844.56 36773.76 0)\n4 POINT Z (24821.92 46303.16 0)\n5 POINT Z (28637.82 35038.49 0)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-aspatial-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-aspatial-data",
    "title": "Exercise 1A: Geospatial Data Wrangling",
    "section": "5.1 Importing the aspatial data",
    "text": "5.1 Importing the aspatial data\nFor the purpose of the exercise, we will be using the Singapore listing (listings.csv) as retrieved from AirBnb.\n\nlistings <- read_csv(\"data/aspatial/listings.csv\")\n\nTo ensure data accuracy, we will check if the data file have been imported correctly. The code chunk below uses list() of Base R instead of glimpse().\n\nlist(listings) \n\n[[1]]\n# A tibble: 3,483 × 18\n       id name      host_id host_name neighbourhood_group neighbourhood latitude\n    <dbl> <chr>       <dbl> <chr>     <chr>               <chr>            <dbl>\n 1  71609 Villa in…  367042 Belinda   East Region         Tampines          1.35\n 2  71896 Home in …  367042 Belinda   East Region         Tampines          1.35\n 3  71903 Home in …  367042 Belinda   East Region         Tampines          1.35\n 4 275343 Rental u… 1439258 Kay       Central Region      Bukit Merah       1.29\n 5 275344 Rental u… 1439258 Kay       Central Region      Bukit Merah       1.29\n 6 289234 Home in …  367042 Belinda   East Region         Tampines          1.34\n 7 294281 Rental u… 1521514 Elizabeth Central Region      Newton            1.31\n 8 324945 Rental u… 1439258 Kay       Central Region      Bukit Merah       1.29\n 9 330095 Rental u… 1439258 Kay       Central Region      Bukit Merah       1.29\n10 369141 Place to… 1521514 Elizabeth Central Region      Newton            1.31\n# ℹ 3,473 more rows\n# ℹ 11 more variables: longitude <dbl>, room_type <chr>, price <dbl>,\n#   minimum_nights <dbl>, number_of_reviews <dbl>, last_review <date>,\n#   reviews_per_month <dbl>, calculated_host_listings_count <dbl>,\n#   availability_365 <dbl>, number_of_reviews_ltm <dbl>, license <chr>\n\n\nObservations:\n\nTibble data frame consists of 3,483 rows and 18 columns\nUseful fields for our analysis : latitude and longitude (note: decimal degree format)\n\nAssumption:\n\nData is in wgs84 geographic coordinate system"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#creating-a-simple-feature-data-frame-from-an-aspatial-data-frame",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#creating-a-simple-feature-data-frame-from-an-aspatial-data-frame",
    "title": "Exercise 1A: Geospatial Data Wrangling",
    "section": "5.2 Creating a simple feature data frame from an aspatial data frame",
    "text": "5.2 Creating a simple feature data frame from an aspatial data frame\nIn the code chunk below, we will be using st_as_sf() of sf package to convert listing data frame into a simple feature data frame:\n\nlistings_sf <- st_as_sf(listings, \n                       coords = c(\"longitude\", \"latitude\"),\n                       crs=4326) %>%\n  st_transform(crs = 3414)\n\n\n\n\n\n\n\nNote\n\n\n\ncoords : to provide x-coordinates, y-coordinates\ncrs : to provide the coordinates system in EPSG format.\nEPSG: 4326 is wgs84 Geographic Coordinate System\nEPSG : 3414 is Singapore SVY21 Projected Coordinate System.\nFor more information, do refer to epsg.io\n\n\nTo examine the content of our newly created simple feature data frame:\n\nglimpse(listings_sf)\n\nRows: 3,483\nColumns: 17\n$ id                             <dbl> 71609, 71896, 71903, 275343, 275344, 28…\n$ name                           <chr> \"Villa in Singapore · ★4.44 · 2 bedroom…\n$ host_id                        <dbl> 367042, 367042, 367042, 1439258, 143925…\n$ host_name                      <chr> \"Belinda\", \"Belinda\", \"Belinda\", \"Kay\",…\n$ neighbourhood_group            <chr> \"East Region\", \"East Region\", \"East Reg…\n$ neighbourhood                  <chr> \"Tampines\", \"Tampines\", \"Tampines\", \"Bu…\n$ room_type                      <chr> \"Private room\", \"Private room\", \"Privat…\n$ price                          <dbl> 150, 80, 80, 55, 69, 220, 85, 75, 45, 7…\n$ minimum_nights                 <dbl> 92, 92, 92, 60, 60, 92, 92, 60, 60, 92,…\n$ number_of_reviews              <dbl> 20, 24, 47, 22, 17, 12, 133, 18, 6, 81,…\n$ last_review                    <date> 2020-01-17, 2019-10-13, 2020-01-09, 20…\n$ reviews_per_month              <dbl> 0.14, 0.16, 0.31, 0.17, 0.12, 0.09, 0.9…\n$ calculated_host_listings_count <dbl> 5, 5, 5, 52, 52, 5, 7, 52, 52, 7, 7, 1,…\n$ availability_365               <dbl> 89, 89, 89, 275, 274, 89, 365, 365, 365…\n$ number_of_reviews_ltm          <dbl> 0, 0, 0, 0, 3, 0, 0, 1, 3, 0, 0, 0, 0, …\n$ license                        <chr> NA, NA, NA, \"S0399\", \"S0399\", NA, NA, \"…\n$ geometry                       <POINT [m]> POINT (41972.5 36390.05), POINT (…\n\n\nObservation:\n\nInstead of longitude and latitude, a new column called geometry has been added into the data frame."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#buffering",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#buffering",
    "title": "Exercise 1A: Geospatial Data Wrangling",
    "section": "6.1 Buffering",
    "text": "6.1 Buffering\nThe scenario: The authority is planning to upgrade the exiting cycling path. To do so, they need to acquire 5 metres of reserved land on the both sides of the current cycling path.\nThe task: To determine the extend of the land need to be acquired and their total area.\nThe solution:\nIn the code chunk below, we will be using st_buffer() of sf package is used to compute the 5-meter buffers around cycling paths.\n\nbuffer_cycling <- st_buffer(cyclingpath, \n                               dist=5, nQuadSegs = 30)\n\nThen, we calculate the area of the buffers:\n\nbuffer_cycling$AREA <- st_area(buffer_cycling)\n\nLastly, we use sum() of Base R to derive the total land involved\n\nsum(buffer_cycling$AREA)\n\n1774367 [m^2]"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#point-in-polygon-count",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#point-in-polygon-count",
    "title": "Exercise 1A: Geospatial Data Wrangling",
    "section": "6.2 Point-in-polygon count",
    "text": "6.2 Point-in-polygon count\nThe scenario: A pre-school service group want to find out the numbers of pre-schools in each Planning Subzone.\nThe solution:\nThe code chunk below performs two operations at one go. Firstly, identify pre-schools located inside each Planning Subzone by using st_intersects(). Next, length() of Base R is used to calculate numbers of pre-schools that fall inside each planning subzone.\n\nmpsz3414$`PreSch Count`<- lengths(st_intersects(mpsz3414, preschool3414))\n\n\n\n\n\n\n\nWarning\n\n\n\nBe careful and do not be confuse with st_intersection() !\n\n\nWe can check the summary statistics of the newly derieved Presch Count Field by using summary() as shown in the code chunk below:\n\nsummary(mpsz3414$`PreSch Count`)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    4.00    7.09   10.00   72.00 \n\n\nTo list the planning subzone with the most number of pre-school, the top_n() of dplyr package is used as shown in the code chunk below:\n\ntop_n(mpsz3414, 1, `PreSch Count`)\n\nSimple feature collection with 1 feature and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 39655.33 ymin: 35966 xmax: 42940.57 ymax: 38622.37\nProjected CRS: SVY21 / Singapore TM\n  OBJECTID SUBZONE_NO     SUBZONE_N SUBZONE_C CA_IND PLN_AREA_N PLN_AREA_C\n1      189          2 TAMPINES EAST    TMSZ02      N   TAMPINES         TM\n     REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR SHAPE_Leng\n1 EAST REGION       ER 21658EAAF84F4D8D 2014-12-05 41122.55 37392.39   10180.62\n  SHAPE_Area                       geometry PreSch Count\n1    4339824 MULTIPOLYGON (((42196.76 38...           72\n\n\nThe solution:\nStep 1: Use st_area() of sf package to derive the area of each planning subzone\n\nmpsz3414$Area <- mpsz3414 %>%\n  st_area()\n\nStep 2: Apply mutate() of dplyr package to compute the density\n\nmpsz3414 <- mpsz3414 %>%\n  mutate(`PreSch Density` = `PreSch Count`/Area * 1000000)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-histogram",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-histogram",
    "title": "Exercise 1A: Geospatial Data Wrangling",
    "section": "7.1 Plotting Histogram",
    "text": "7.1 Plotting Histogram\nTo observe the distribution of PreSch Density, a histogram is insightful. We can used hist() of R graphics or ggplot2 to plot.\n\n7.1.1 Histogram using hist()\n\n\nShow the code\nhist(mpsz3414$`PreSch Density`)\n\n\n\n\n\nDespite the easy syntax, the output is far from ideal as it limits further customization.\n\n\n7.1.2 Histogram using ggplot2()\n\n\nShow the code\nggplot(data=mpsz3414, \n       aes(x= as.numeric(`PreSch Density`)))+\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  labs(title = \"Are pre-school even distributed in Singapore?\",\n       subtitle= \"There are many planning sub-zones with a single pre-school, on the other hand, \\nthere are two planning sub-zones with at least 20 pre-schools\",\n      x = \"Pre-school density (per km sq)\",\n      y = \"Frequency\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-scatterplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-scatterplot",
    "title": "Exercise 1A: Geospatial Data Wrangling",
    "section": "7.2 Plotting Scatterplot",
    "text": "7.2 Plotting Scatterplot\nTo observe the relationship between Pre-school Density and Pre-school count, a scatterplot could be ideal.\n\n\nShow the code\nggplot(data=mpsz3414, \n       aes(y = `PreSch Count`, \n           x= as.numeric(`PreSch Density`)))+\n  geom_point(color=\"black\", \n             fill=\"light blue\") +\n  xlim(0, 40) +\n  ylim(0, 40) +\n  labs(title = \"\",\n      x = \"Pre-school density (per km sq)\",\n      y = \"Pre-school count\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01b.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01b.html",
    "title": "Exercise 1B: Choropleth Mapping",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if sf , tmap, and tidyverse packages are installed into the R environment. If they are, then they will be launched into R.\n\npacman::p_load(sf, tmap, tidyverse)\n\nNote: readr, tidyr, and dplyr are part of tidyverse package\n\n\n\nIn this section, the following data will be imported into R through st_read() of sf package to create the choropleth map:\n\nMP14_SUBZONE_WEB_PL, in ESRI shapefile format, retrieved from data.gov.sg\nrespopagsex2010to2020.csv - Singapore Residents by Planning Area/Subzone, Age Group, Sex, and Type of Dwelling, June 2011-2020, retrieved from Department of Statistics, Singapore.\n\n\n\nWe will be using st_read() function of sf package to import MP14_SUBZONE_WEB_PL shapefile into R as a simple feature data frame called mpsz.\n\nmpsz <- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/smu/Rworkshop/jiawenoh/ISSS624/Hands-on_Ex/Hands-on_Ex01/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n#to examine the content\nmpsz\n\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29...\n\n\n\n\n\nWe will be using read_csv() function of readr package to import respopagsex2010to2020.csv into R and save the file as a dataframe called popdata.\n\npopdata <- read_csv(\"data/aspatial/respopagesextod2011to2020.csv\")\n\n\n\n\nBefore we prepared for a thematic map, we would need to prepare a data table with year 2020 values. The data table should include the variables PA, SZ, YOUNG, ECONOMY ACTIVE, AGED, TOTAL, DEPENDENCY.\n\nYOUNG: age group 0 to 4 until age groyup 20 to 24,\nECONOMY ACTIVE: age group 25-29 until age group 60-64,\nAGED: age group 65 and above,\nTOTAL: all age group, and\nDEPENDENCY: the ratio between young and aged against economy active group\n\n\n\nThe following data wrangling and transformation functions will be used:\n\npivot_wider() of tidyr package, and\nmutate(), filter(), group_by(), and select() of dplyr package\n\n\n\nShow the code\npopdata2020 <- popdata %>%\n  filter(Time == 2020) %>%\n  group_by(PA, SZ, AG) %>%\n  summarise(`POP` = sum(`Pop`)) %>%\n  ungroup()%>%\n  pivot_wider(names_from=AG, \n              values_from=POP) %>%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12])) %>%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+\nrowSums(.[13:15]))%>%\nmutate(`AGED`=rowSums(.[16:21])) %>%\nmutate(`TOTAL`=rowSums(.[3:21])) %>%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n/`ECONOMY ACTIVE`) %>%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)\n\n\n\n\n\nAfter the transformation, we will need to convert the values in PA and SZ fields to uppercase to standardize the fields. PA and SZ fields are made up of upper-and lowercase while SUBZONE_N and PLN_AREA_N are in uppercase.\n\npopdata2020 <- popdata2020 %>%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = funs(toupper)) %>%\n  filter(`ECONOMY ACTIVE` > 0)\n\nThereafter, left_join() of dplyr is used to join the geographical data and attribute table using planning subzone (e.g. SUBZONE_N and SZ as the common identifier)\n\nmpsz_pop2020 <- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\nBy using the code chunk below, we can write a .rds file to save data into R data format.\n\nwrite_rds(mpsz_pop2020, \"data/aspatial/mpszpop2020.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01b.html#plot-choropleth-map-using-qtm",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01b.html#plot-choropleth-map-using-qtm",
    "title": "Exercise 1B: Choropleth Mapping",
    "section": "2.1 Plot Choropleth map using qtm()",
    "text": "2.1 Plot Choropleth map using qtm()\nqtm() provides the quickest way to draw a choropleth map. It is concise and provides a good default visualization as seen in the code chunk below.\n\n\nShow the code\ntmap_mode(\"plot\")\nqtm(mpsz_pop2020, \n    fill = \"DEPENDENCY\")\n\n\n\n\n\nLearning points:\n\nTmap_mode()\n\n“Plot” is used to produce static map.\nView” is used to produce interactive mode\n\nfill argument is used to map the attribute (i.e., Dependency)\nHard to control the aesthetics of individual layers"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01b.html#plot-using-tmaps-elements",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01b.html#plot-using-tmaps-elements",
    "title": "Exercise 1B: Choropleth Mapping",
    "section": "2.2 Plot using tmap’s elements",
    "text": "2.2 Plot using tmap’s elements\nAlthough we are able to plot quickly and easily through qtm(), we are not able to draw a high quality cartographic choropleth map. As seen in the code chunk below, tmap’s drawing elements are used to add area patterns or graduated colors.\n\n2.2.1 Drawing a base map\nStep 1: To begin building the block of tmap, we will used tm_shape() to define the input data and tm_polygons() to draw the planning subzone polygons.\n\n\nShow the code\ntm_shape(mpsz_pop2020) +\n  tm_polygons()\n\n\n\n\n\n\n\n2.2.2 Use tm_polygons()\nStep 2: To show the geographical distribution of a selected variable by planning subzone, we will assign the target variable such as Dependency to tm_polygons(). Note: default color is Yl0rRd of ColorBrewer. By default, missing value will be shaded in grey.\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\")\n\n\n\n\n\n\n\n2.2.3 Use tm_fill() and tm_border()\nStep 2: Instead of using tm_polygons() in section 2.2.2, tm_fill() could be used as well. Notably, tm_polygons() is a wraper of tm_fill() and tm_borders(). tm_fill() shades the polygons by default colour scheme whereas tm_borders() add the borders of the shapefile.\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\")\n\n\n\n\n\nTo add boundary to the planning subzone, tm_borders() will be used.\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\") +\n  tm_borders(lwd = 0.1,  alpha = 1)\n\n\n\n\n\nLearning Points:\n\n‘alpha’ is used to define transparency (range from 0 to 1) with 1 as default (non-transparent)\n‘col’ refers to border color\n‘lwd’ refers to border line width. Default as 1.\n‘lty’ refers to border line type. Default as solid.\n\n\n\n2.2.4 Final Choropleth Map\nStep 3: After adding the base map, planning subzone, colors, borders, the code chunk below reveals the finalized output with functional choropleth map.\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01b.html#data-classification-methods-of-tmap",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01b.html#data-classification-methods-of-tmap",
    "title": "Exercise 1B: Choropleth Mapping",
    "section": "2.3 Data Classification Methods of tmap",
    "text": "2.3 Data Classification Methods of tmap\ntmap provides a total of 10 data classifications methods, namely- fixed, sd, equal, pretty (default), quantile, kmeans, hclust, bclust, fisher, and jenks. To define a data classification method, the style argument of tm_fill() or tm_polygons() will be used.\n\n2.3.1 Built-in classification methods\nThe code chunk below shows a quantile data classification that used 5 classes.\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\nBy changing the style, the distribution will look different. The code chunk below used equal data classification method.\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\nIn comparison, quantile method is evenly distributed. In addition, we observed that by increasing the number of classes, the graduated colors become more distinct.\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 20,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n2.3.2 Custome Break\nFor all the built-in styles, the category breaks are computed internally. In order to override these defaults, the breakpoints can be set explicitly by means of the breaks argument to the tm_fill(). It is important to note that, in tmap the breaks include a minimum and maximum. As a result, in order to end up with n categories, n+1 elements must be specified in the breaks option (the values must be in increasing order).\nBefore we get started, it is always a good practice to get some descriptive statistics on the variable before setting the break points. Code chunk below will be used to compute and display the descriptive statistics of DEPENDENCY field.\n\nsummary(mpsz_pop2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.1111  0.7147  0.7866  0.8585  0.8763 19.0000      92 \n\n\nWith reference to the results above, we set break point at 0.60, 0.70, 0.80, and 0.90. In addition, we also need to include a minimum and maximum, which we set at 0 and 100. Thus, our breaks vector is c(0, 0.60, 0.70, 0.80, 0.90, 1.00).\nWe will be able to plot the choropleth map by using the code chunk below:\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01b.html#color-scheme",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01b.html#color-scheme",
    "title": "Exercise 1B: Choropleth Mapping",
    "section": "2.4 Color Scheme",
    "text": "2.4 Color Scheme\ntmap supports color ramps either defined by the user or a set of predefined color ramps from the RColorBrewer package.\n\n2.4.1 RColorBrewer Package\nTo change the colour, we assign the preferred colour to palette argument of tm_fill() as shown in the code chunk below.\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"Blues\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\n- : reverse the color shading."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01b.html#map-layouts",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01b.html#map-layouts",
    "title": "Exercise 1B: Choropleth Mapping",
    "section": "2.5 Map Layouts",
    "text": "2.5 Map Layouts\nAs covered in previous section, the palette and break-points could affect how the map looks. Moreover, the combination of all map elements such as objects to be mapped, the title, the scale bar, the compass, margins and aspects ratios create a cohesive map.\n\n2.5.1 Map Legend\nIn tmap, several legend options are provided to change the placement, format and appearance of the legend.\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"jenks\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n2.5.2 Map Style\ntmap allows a wide variety of layout settings to be changed. They can be called by using tmap_style(). We will be using the classic style for the example below:\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"classic\")\n\n\n\n\n\n\n\n2.5.3 Cartographic Furniture\ntmap also also provides arguments to draw other map furniture such as compass, scale bar and grid lines. tm_compass(), tm_scale_bar() and tm_grid() are used to add compass, scale bar and grid lines onto the choropleth map in the code chunk below:\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n2.5.3.1. Reset Default Style\nIf needed, the code chunk below helps to reset the default style.\nOther available styles are: \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\" \n\ntmap_style(\"white\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01b.html#facet-maps",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01b.html#facet-maps",
    "title": "Exercise 1B: Choropleth Mapping",
    "section": "2.6 Facet Maps",
    "text": "2.6 Facet Maps\nMaps could be arrange side-by-side into multiple small maps, stacked vertically or horizontally. It enable the visualization of how spatial relationships changes with respect to another variable, such as time.\nIn tmap, small multiple maps can be plotted in three ways:\n\nby assigning multiple values to at least one of the asthetic arguments,\nby defining a group-by variable in tm_facets(), and\nby creating multiple stand-alone maps with tmap_arrange().\n\n\n2.6.1 Assign multiple values\nIn this example, small multiple choropleth maps are created by defining ncols in tm_fill() :\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\n\n\n\n\nLikewise, we could assign multiple values to at least one of the aesthetic arguments and highlight in different color.\n\n\nShow the code\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"AGED\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\",\"Greens\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"))\n\n\n\n\n\n\n\n2.6.2 Group-by variable in tm_facets()\nMultiple small choropleth maps are created by using tm_facets() as seen in the code below:\n\n\nShow the code\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE, \n            drop.shapes=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n2.6.3 Multiple stand-alone maps with tmap_arrange()\nMultiple small choropleth maps are created by creating multiple stand-alone maps with tmap_arrange() as seen in the code below:\n\n\nShow the code\nyoungmap <- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\nagedmap <- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01b.html#mapping-spatial-object-meeting-a-selection-criterion",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01b.html#mapping-spatial-object-meeting-a-selection-criterion",
    "title": "Exercise 1B: Choropleth Mapping",
    "section": "2.7 Mapping Spatial Object Meeting a Selection Criterion",
    "text": "2.7 Mapping Spatial Object Meeting a Selection Criterion\nInstead of creating multiple choropleth map, we can use selection function to map spatial objections meeting the selection criterion.\n\n\nShow the code\ntm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N==\"CENTRAL REGION\", ])+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 5.0,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS624 Applied Geospatial Analytics",
    "section": "",
    "text": "Welcome to my learning journey in ISSS624 Applied Geospatial Analytics . In this website, you will find my coursework prepared for this course."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html",
    "title": "Take Home Exercise 1",
    "section": "",
    "text": "The digitization of city-wide urban infrastructures such as buses,mass rapid transit enable collection of massive data sets on patterns such as human movement and behaviors within the city. In real-world practices, the use of these data are confined to simple tracking and mapping with GIS applications due to the lack of functions in conventional GIS.\n\n\nThis exercise aims to reveals the spatial and spatio-temporal mobility patterns of public bus passengers in Singapore using appropriate geovisualisation techniques and analysis. Also, we would explore the computation of Local Indicators of Spatial Association (LISA) Analysis\nThe original data set was downloaded on 18th November 2023 from LTA DataMall under Section 2.6 - Passenger Volume by Origin Destination Bus Stops. It records the number of trips by weekdays and weekends from origin to destination bus stops. For the purpose of this exercise, we will be using the August data - origin_destination_bus_202308.csv."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#install-r-packages",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#install-r-packages",
    "title": "Take Home Exercise 1",
    "section": "2.1 Install R packages",
    "text": "2.1 Install R packages\nThe code chunk below uses pacman:: p_load() to load and install the following libraries:\n\nmapview : Used to create interactive visualization of spatial data\nknitr: Used for dynamic report generation\npatchwork : Used to combine multiple ggplot graphs into the same graphic\nsf : Used for geospatial data handling\nspdep : Used to create spatial weights matrix objects\nsfdep : Used to integrate with 'sf' objects and the 'tidyverse'\ntidyverse: A collection of R packages use in everyday data analyses. It is able to support data science, data wrangling, and analysis\ntmap : Used for thematic mapping\n\n\npacman::p_load(mapview, knitr, patchwork, sf, spdep, sfdep, tidyverse, tmap)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#import-and-load-dataset",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#import-and-load-dataset",
    "title": "Take Home Exercise 1",
    "section": "2.2 Import and Load Dataset",
    "text": "2.2 Import and Load Dataset\nTwo data and a hexagon layer will be used for this study :\n\norigin_destination_bus_202308.csv : A csv file containing information about all the bus stops currently being serviced by bus, which includes bus stop identifier, and location coordinates.\nBus Stop Location . A geospatial file from LTA DataMall\nhexagon : A hexagon layer of 250m to replace the relative coarse and irregular Master Plan 2019 Planning Sub-Zone GIS data of URA\n\n\n2.2.1 Importing Aspatial data\nFirst, we will import the Passenger Volume by Origin Destination Bus Stops data set for August by using readr::read_csv() and store it in variable odbus. Also, we will be using glimpse() report to reveal the data type of each field.\nPoint to note: ORIGIN_PT_CODE and DESTINATION_PT_CODE are in <chr> format.\n\n\nShow the code\nodbus <- read_csv(\"data/aspatial/origin_destination_bus_202308.csv\")\nglimpse(odbus)\n\n\nRows: 5,709,512\nColumns: 7\n$ YEAR_MONTH          <chr> \"2023-08\", \"2023-08\", \"2023-08\", \"2023-08\", \"2023-…\n$ DAY_TYPE            <chr> \"WEEKDAY\", \"WEEKENDS/HOLIDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       <dbl> 16, 16, 14, 14, 17, 17, 17, 17, 7, 17, 14, 10, 10,…\n$ PT_TYPE             <chr> \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      <chr> \"04168\", \"04168\", \"80119\", \"80119\", \"44069\", \"4406…\n$ DESTINATION_PT_CODE <chr> \"10051\", \"10051\", \"90079\", \"90079\", \"17229\", \"1722…\n$ TOTAL_TRIPS         <dbl> 7, 2, 3, 10, 5, 4, 3, 22, 3, 3, 7, 1, 3, 1, 3, 1, …\n\n\n\n\n2.2.2 Importing Geospatial data\nThereafter, we will import the Bus Stops Location.\n\n2.2.2.1 Import Bus Stop data\nWe will be using sf::st_read() to import and sf::st_transform() to ensure that the projected coordinate system is in the right format before storing in variable busstop. Also, we will be using glimpse() report to reveal the data type of each field.\n\nbusstop <- st_read(dsn = \"data/geospatial\",layer = \"BusStop\") %>%\n    st_transform(crs = 3414)\n\nReading layer `BusStop' from data source \n  `/Users/smu/Rworkshop/jiawenoh/ISSS624/Take-Home_Ex/Take-Home_Ex01/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\n\nThe message above shows that there are a total of 5161 features and 3 fields in busstop point feature data frame and it is in SVY21 projected coordinates system.\n\nglimpse(busstop)\n\nRows: 5,161\nColumns: 4\n$ BUS_STOP_N <chr> \"22069\", \"32071\", \"44331\", \"96081\", \"11561\", \"66191\", \"2338…\n$ BUS_ROOF_N <chr> \"B06\", \"B23\", \"B01\", \"B05\", \"B05\", \"B03\", \"B02A\", \"B02\", \"B…\n$ LOC_DESC   <chr> \"OPP CEVA LOGISTICS\", \"AFT TRACK 13\", \"BLK 239\", \"GRACE IND…\n$ geometry   <POINT [m]> POINT (13576.31 32883.65), POINT (13228.59 44206.38),…\n\n\n\n\n\n\n\n\nNote about coordinates system\n\n\n\n\n\ncrs : to provide the coordinates system in EPSG format.\nEPSG: 4326 is wgs84 Geographic Coordinate System\nEPSG : 3414 is Singapore SVY21 Projected Coordinate System.\nFor more information, do refer to epsg.io"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#data-wrangling",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#data-wrangling",
    "title": "Take Home Exercise 1",
    "section": "2.3 Data Wrangling",
    "text": "2.3 Data Wrangling\nLooking at the section 2.2.1, we noticed a few problem:\n\nORIGIN_PT_CODE : is in <chr> format.\nDESTINATION_PT_CODE : is in <chr> format.\n\nWe will be using dplyr::mutate() to convert the <chr> data type to <fct> and store it in a new variable odbus_new.\n\n\nShow the code\nodbus_new <- odbus %>%\n mutate(ORIGIN_PT_CODE = as.factor(ORIGIN_PT_CODE),\n        DESTINATION_PT_CODE = as.factor(DESTINATION_PT_CODE))\n\nglimpse(odbus_new)\n\n\nRows: 5,709,512\nColumns: 7\n$ YEAR_MONTH          <chr> \"2023-08\", \"2023-08\", \"2023-08\", \"2023-08\", \"2023-…\n$ DAY_TYPE            <chr> \"WEEKDAY\", \"WEEKENDS/HOLIDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       <dbl> 16, 16, 14, 14, 17, 17, 17, 17, 7, 17, 14, 10, 10,…\n$ PT_TYPE             <chr> \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      <fct> 04168, 04168, 80119, 80119, 44069, 44069, 20281, 2…\n$ DESTINATION_PT_CODE <fct> 10051, 10051, 90079, 90079, 17229, 17229, 20141, 2…\n$ TOTAL_TRIPS         <dbl> 7, 2, 3, 10, 5, 4, 3, 22, 3, 3, 7, 1, 3, 1, 3, 1, …\n\n\nAdditionally, we confirmed that there are no missing values in the odbus_new data set.\n\nany(is.na(odbus_new))\n\n[1] FALSE\n\n\n\n2.3.1 Data Extraction\nIn this section, we will extract commuting flows based on the table below.\n\n\n\nPeak hour period\nBus tap on time\n\n\n\n\nWeekday morning peak\n6am to 9am\n\n\nWeekday afternoon peak\n5pm to 8pm\n\n\nWeekend/holiday morning peak\n11am to 2pm\n\n\nWeekend/holiday evening peak\n4pm to 7pm\n\n\n\nThe code is extracted in the following manner:\n\nfilter() is used to extract subset of data\nbetween() is used to express a range condition\ngroup_by() and summarise() are used to sum the total trips\narrange(desc()) to sort in descending order\nungroup() is used to end a definition, often use with group_by()\n\n\n\nShow the code\n#weekday morning peak \nwkd6_9 <- odbus_new %>%\n  filter(DAY_TYPE == \"WEEKDAY\",\n         between(TIME_PER_HOUR, 6, 9)) %>%\n  group_by(ORIGIN_PT_CODE) %>%\n  summarise(TRIPS = sum(TOTAL_TRIPS)) %>%\n  arrange(desc(TRIPS)) %>%\n  ungroup()\n\n#weekday afternoon peak \nwkd17_20 <- odbus_new %>%\n  filter(DAY_TYPE == \"WEEKDAY\",\n         between(TIME_PER_HOUR, 17, 20)) %>%\n  group_by(ORIGIN_PT_CODE) %>%\n  summarise(TRIPS = sum(TOTAL_TRIPS)) %>%\n  arrange(desc(TRIPS)) %>%\n  ungroup()\n\n#weekend/holiday morning peak \nwknd11_14 <- odbus_new %>%\n  filter(DAY_TYPE == \"WEEKENDS/HOLIDAY\",\n         between(TIME_PER_HOUR, 11, 14)) %>%\n  group_by(ORIGIN_PT_CODE) %>%\n  summarise(TRIPS = sum(TOTAL_TRIPS)) %>%\n  arrange(desc(TRIPS)) %>%\n  ungroup()\n\n#weekend/holiday afternoon peak \nwknd16_19 <- odbus_new %>%\n  filter(DAY_TYPE == \"WEEKENDS/HOLIDAY\",\n         between(TIME_PER_HOUR, 16, 19)) %>%\n  group_by(ORIGIN_PT_CODE) %>%\n  summarise(TRIPS = sum(TOTAL_TRIPS)) %>%\n  arrange(desc(TRIPS)) %>%\n  ungroup()\n\n\n\nWeekday (0600-0900)Weekday (1700-2000)Weekends/Holidays (1100-1400)Weekends/Holidays (1600-1900)\n\n\n\nkable(head(wkd6_9))\n\n\n\n\nORIGIN_PT_CODE\nTRIPS\n\n\n\n\n22009\n365871\n\n\n46009\n294601\n\n\n75009\n170187\n\n\n52009\n144079\n\n\n24009\n141698\n\n\n55509\n129362\n\n\n\n\n\n\n\n\nkable(head(wkd17_20))\n\n\n\n\nORIGIN_PT_CODE\nTRIPS\n\n\n\n\n22009\n536630\n\n\n46009\n457783\n\n\n75009\n352578\n\n\n59009\n315889\n\n\n84009\n227886\n\n\n52009\n224010\n\n\n\n\n\n\n\n\nkable(head(wknd11_14))\n\n\n\n\nORIGIN_PT_CODE\nTRIPS\n\n\n\n\n22009\n102210\n\n\n46009\n95185\n\n\n59009\n73678\n\n\n75009\n73479\n\n\n84009\n67932\n\n\n52009\n63651\n\n\n\n\n\n\n\n\nkable(head(wknd16_19))\n\n\n\n\nORIGIN_PT_CODE\nTRIPS\n\n\n\n\n22009\n143443\n\n\n46009\n118771\n\n\n75009\n97207\n\n\n59009\n88385\n\n\n84009\n74928\n\n\n52009\n70262\n\n\n\n\n\n\n\n\nThereafter, we will save a copy of the output in rds format and reload it into the environment.\n\n\nShow the code\n#weekday morning peak \nwrite_rds(wkd6_9, \"data/rds/wkd6_9.rds\")\nwkd6_9 <- read_rds(\"data/rds/wkd6_9.rds\")\n\n#weekday afternoon peak \nwrite_rds(wkd17_20, \"data/rds/wkd17_20.rds\")\nwkd17_20 <- read_rds(\"data/rds/wkd17_20.rds\")\n\n#weekend/holiday morning peak \nwrite_rds(wknd11_14, \"data/rds/wknd11_14.rds\")\nwknd11_14 <- read_rds(\"data/rds/wknd11_14.rds\")\n\n#weekend/holiday afternoon peak \nwrite_rds(wknd16_19, \"data/rds/wknd16_19.rds\")\nwknd16_19 <- read_rds(\"data/rds/wknd16_19.rds\")\n\n\n\n\n2.3.2 Combining Data\nBefore we proceed, we will used mapview() as a default visualization.\n\n\nShow the code\nmapview_check = mapview(busstop, cex = 3, alpha = .5, popup = NULL)\n\nmapview_check\n\n\n\n\n\n\nAs observed, there are 5 bus stops that are not within Singapore Map that includes Passenger Volume by Origin Destination Bus Stop. Although we are able to filter and remove bus stops that are not within the Singapore Boundary, it might be interesting to observe the community flows from Singapore to Johor Bahru. As such we will not remove these data points.\n\n2.3.2.1 Combine commuting flow into busstop\nAfter populating the commuting flow, we will combine it into busstop sf data frame. To ensure that all bus stops are distinct, we will be using dplyr:: mutate() to replace N/A to 0 and add unique() function into our code to keep distinct flows.\n\n\nShow the code\n#weekday morning peak \norigin_SZ_wkd6_9 <- left_join(busstop, wkd6_9,\n            by = c(\"BUS_STOP_N\" = \"ORIGIN_PT_CODE\")) %>%\n      mutate(TRIPS = ifelse(is.na(TRIPS), 0, TRIPS)) %>%\n  unique() %>%\n  ungroup()\n\n#weekday afternoon peak \norigin_SZ_wkd17_20 <- left_join(busstop, wkd17_20,\n            by = c(\"BUS_STOP_N\" = \"ORIGIN_PT_CODE\")) %>%\n      mutate(TRIPS = ifelse(is.na(TRIPS), 0, TRIPS)) %>%\n  unique() %>%\n  ungroup()\n\n#weekend/holiday morning peak \norigin_SZ_wknd11_14 <- left_join(busstop, wknd11_14,\n            by = c(\"BUS_STOP_N\" = \"ORIGIN_PT_CODE\")) %>%\n      mutate(TRIPS = ifelse(is.na(TRIPS), 0, TRIPS)) %>%\n  unique() %>%\n  ungroup()\n\n#weekend/holiday afternoon peak \norigin_SZ_wknd16_19 <- left_join(busstop, wknd16_19,\n            by = c(\"BUS_STOP_N\" = \"ORIGIN_PT_CODE\")) %>%\n      mutate(TRIPS = ifelse(is.na(TRIPS), 0, TRIPS)) %>%\n  unique() %>%\n  ungroup()\n\n\n\n\n2.3.2.2 Create Hexagon Layer\nHexagons are the densest way to pack circles in tessellation and reduce edge effects. With reference to Urban Data Palette, we will create honeycomb grid through the following steps:\n\nst_make_grid() : create a regular grid of spatial polygons. Revision have been done to the cell width and height to c(500,500).\nst_sf() : convert the honeycomb grid object to an sf object. Grid ID is created to count the number of bus stops and sum of trips in the grid.\nst_intersects() : determine whether two sets of spatial objects intersect.\nst_join() : join two spatial objects based on their spatial relationships by intersections.\n\n\n\nShow the code\n#weekday morning peak \nhoneycomb_grid_wkd6_9 = st_make_grid(origin_SZ_wkd6_9, c(500, 500), #cell revised\n                              what = \"polygons\", square = FALSE)\nhoneycomb_grid_sf_0609 = st_sf(honeycomb_grid_wkd6_9) %>%\n  mutate(grid_id = 1:length(lengths(honeycomb_grid_wkd6_9)))\nintersections0609 <- st_intersects(origin_SZ_wkd6_9, honeycomb_grid_sf_0609)\njoin_df0609 <- st_join(honeycomb_grid_sf_0609, origin_SZ_wkd6_9, by = intersections0609)\n\n#weekday afternoon peak \nhoneycomb_grid_wkd17_20 = st_make_grid(origin_SZ_wkd17_20, c(500, 500), \n                              what = \"polygons\", square = FALSE)\nhoneycomb_grid_sf_1720 = st_sf(honeycomb_grid_wkd17_20) %>%\n  mutate(grid_id = 1:length(lengths(honeycomb_grid_wkd17_20)))\nintersections1720 <- st_intersects(origin_SZ_wkd17_20, honeycomb_grid_sf_1720)\njoin_df1720 <- st_join(honeycomb_grid_sf_1720, origin_SZ_wkd17_20, by = intersections1720)\n\n#weekend/holiday morning peak \nhoneycomb_grid_wknd11_14 = st_make_grid(origin_SZ_wknd11_14, c(500, 500), \n                              what = \"polygons\", square = FALSE)\nhoneycomb_grid_sf_1114 = st_sf(honeycomb_grid_wknd11_14) %>%\n  mutate(grid_id = 1:length(lengths(honeycomb_grid_wknd11_14)))\nintersections1114 <- st_intersects(origin_SZ_wknd11_14, honeycomb_grid_sf_1114)\njoin_df1114 <- st_join(honeycomb_grid_sf_1114, origin_SZ_wknd11_14, by = intersections1114)\n\n#weekend/holiday afternoon peak \nhoneycomb_grid_wknd16_19 = st_make_grid(origin_SZ_wknd16_19, c(500, 500), \n                              what = \"polygons\", square = FALSE)\nhoneycomb_grid_sf_1619 = st_sf(honeycomb_grid_wknd16_19) %>%\n  mutate(grid_id = 1:length(lengths(honeycomb_grid_wknd16_19)))\nintersections1619 <- st_intersects(origin_SZ_wknd16_19, honeycomb_grid_sf_1619)\njoin_df1619 <- st_join(honeycomb_grid_sf_1619, origin_SZ_wknd16_19, by = intersections1619)\n\n\n\n\n2.3.2.3 Extract Data\nAfter creating the joined data frame, we are interested in knowing the number of bus stops that is in the grid_id and the total number of trips. As such, we performed the following steps:\n\nmutate() : Used to replace TRIPS with N/A to 0.\nfilter() : Used to remove data with 0 trip\ngroup_by(): Used to group data based on grid_id.\nsummarize() :\n\nn() : Used to count number of bus stops and save as bus_stop_count\nsum() : Used to sum the TRIPS values and save as total_trips\n\nungroup() : Used to end a definition, often use with group_by()\n\n\n\nShow the code\n#weekday morning peak \njoin_df_wkd6_9_group <- join_df0609 %>%\n        mutate(TRIPS = ifelse(is.na(TRIPS), 0, TRIPS)) %>%\n  filter(TRIPS > 0) %>%\n  group_by(grid_id) %>%\n  summarize(\n    bus_stop_count = n(),\n    total_trips = sum(TRIPS)\n  ) %>%\n  ungroup()\n\n#weekday afternoon peak \njoin_df_wkd17_20_group <- join_df1720 %>%\n        mutate(TRIPS = ifelse(is.na(TRIPS), 0, TRIPS)) %>%\n  filter(TRIPS > 0) %>%\n  group_by(grid_id) %>%\n  summarize(\n    bus_stop_count = n(),\n    total_trips = sum(TRIPS)\n  ) %>%\n  ungroup()\n\n#weekend/holiday morning peak \njoin_df_wknd11_14_group <- join_df1114 %>%\n        mutate(TRIPS = ifelse(is.na(TRIPS), 0, TRIPS)) %>%\n  filter(TRIPS > 0) %>%\n  group_by(grid_id) %>%\n  summarize(\n    bus_stop_count = n(),\n    total_trips = sum(TRIPS)\n  ) %>%\n  ungroup()\n\n#weekend/holiday afternoon peak \njoin_df_wknd16_19_group <- join_df1619 %>%\n        mutate(TRIPS = ifelse(is.na(TRIPS), 0, TRIPS)) %>%\n  filter(TRIPS > 0) %>%\n  group_by(grid_id) %>%\n  summarize(\n    bus_stop_count = n(),\n    total_trips = sum(TRIPS)\n  ) %>%\n  ungroup()\n\n\nTo validate that our sf data frame does not contain any missing value, we used any(is.na()) to check :\n\n\nShow the code\ncat('Are there any missing value for Weekday Morning Peak?: ', any(is.na(join_df_wkd6_9_group)),'\\n')\n\n\nAre there any missing value for Weekday Morning Peak?:  FALSE \n\n\nShow the code\ncat('Are there any missing value for Weekday Afternoon Peak?: ', any(is.na(join_df_wkd17_20_group)),'\\n')\n\n\nAre there any missing value for Weekday Afternoon Peak?:  FALSE \n\n\nShow the code\ncat('Are there any missing value for Weekend/Holiday Morning Peak?: ', any(is.na(join_df_wknd11_14_group)),'\\n')\n\n\nAre there any missing value for Weekend/Holiday Morning Peak?:  FALSE \n\n\nShow the code\ncat('Are there any missing value for Weekend/Holiday Afternoon Peak?: ', any(is.na(join_df_wknd16_19_group)),'\\n')\n\n\nAre there any missing value for Weekend/Holiday Afternoon Peak?:  FALSE \n\n\nWe have confirmed that there are no missing values for any of data frame."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#commuting-flows",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#commuting-flows",
    "title": "Take Home Exercise 1",
    "section": "3.1 Commuting flows",
    "text": "3.1 Commuting flows\nWe will now plot the choropleth map using tmap and compare between quantile and jenks classification. Quantile maps try to arrange groups so they have the same quantity. As a result, the shading will look equally distributed in quantile types of maps. Jenks map is an optimization method for choropleth maps as it arranges each grouping so there is less variation in each class or shading.\nIn the code chuck below, we will use tmap to plot the spatial distribution of the passenger volume (Total Trips) based on the hexagon grid. We will use tmap_arrange() to show the plots together.\n\nQuantileJenks\n\n\n\n\nShow the code\n#weekday morning peak \nplot0609 <- tm_shape(join_df_wkd6_9_group) +\n  tm_borders(alpha = 0.5) +\n  tm_fill(\"total_trips\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Total Trips\") +\n  tm_layout(main.title = \"Weekday Morning Peak passenger trips by Origin\",\n            main.title.position = \"center\",\n            main.title.fontface = \"bold\",\n            main.title.size = 0.6,\n            legend.height = 0.3, \n            legend.width = 0.3,\n            frame = TRUE) +\n  tm_credits(\"Source: Population data from \\n Department of Statistics (DOS)\", \n             fontface = \"italic\",  \n             size = 0.15, \n             position = c(\"left\", \"bottom\"))\n\n#weekday afternoon peak \nplot1720 <- tm_shape(join_df_wkd17_20_group) +\n  tm_borders(alpha = 0.5) +\n  tm_fill(\"total_trips\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Total Trips\") +\n  tm_layout(main.title = \"Weekday Afternoon Peak passenger trips by Origin\",\n            main.title.position = \"center\",\n            main.title.fontface = \"bold\",\n            main.title.size = 0.6,\n            legend.height = 0.3, \n            legend.width = 0.3,\n            frame = TRUE) +\n  tm_credits(\"Source: Population data from \\n Department of Statistics (DOS)\", \n             fontface = \"italic\",  \n             size = 0.15, \n             position = c(\"left\", \"bottom\"))\n\n#weekend/holiday morning peak \nplot1114 <- tm_shape(join_df_wknd11_14_group) +\n  tm_borders(alpha = 0.5) +\n  tm_fill(\"total_trips\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Total Trips\") +\n  tm_layout(main.title = \"Weekend/Holiday Morning Peak passenger trips by Origin\",\n            main.title.position = \"center\",\n            main.title.fontface = \"bold\",\n            main.title.size = 0.6,\n            legend.height = 0.3, \n            legend.width = 0.3,\n            frame = TRUE) +\n  tm_credits(\"Source: Population data from \\n Department of Statistics (DOS)\", \n             fontface = \"italic\",  \n             size = 0.15, \n             position = c(\"left\", \"bottom\"))\n\n#weekend/holiday afternoon peak \nplot1619 <- tm_shape(join_df_wknd16_19_group) +\n  tm_borders(alpha = 0.5) +\n  tm_fill(\"total_trips\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Total Trips\") +\n  tm_layout(main.title = \"Weekend/Holiday Afternoon Peak passenger trips by Origin\",\n            main.title.position = \"center\",\n            main.title.fontface = \"bold\",\n            main.title.size = 0.6,\n            legend.height = 0.3, \n            legend.width = 0.3,\n            frame = TRUE) +\n  tm_credits(\"Source: Population data from \\n Department of Statistics (DOS)\", \n             fontface = \"italic\",  \n             size = 0.15,       \n             position = c(\"left\", \"bottom\"))\n\ntmap_arrange(plot0609, plot1720, plot1114, plot1619, asp=2, ncol=2)\n\n\n\n\n\n\n\n\n\nShow the code\n#weekday morning peak \nplot0609j <- tm_shape(join_df_wkd6_9_group) +\n  tm_borders(alpha = 0.5) +\n  tm_fill(\"total_trips\", \n          style = \"jenks\", \n          palette = \"Reds\",\n          title = \"Total Trips\") +\n  tm_layout(main.title = \"Weekday Morning Peak passenger trips by Origin\",\n            main.title.position = \"center\",\n            main.title.fontface = \"bold\",\n            main.title.size = 0.6,\n            legend.height = 0.3, \n            legend.width = 0.3,\n            frame = TRUE) +\n  tm_credits(\"Source: Population data from \\n Department of Statistics (DOS)\", \n             fontface = \"italic\",  \n             size = 0.15, \n             position = c(\"left\", \"bottom\"))\n\n#weekday afternoon peak \nplot1720j <- tm_shape(join_df_wkd17_20_group) +\n  tm_borders(alpha = 0.5) +\n  tm_fill(\"total_trips\", \n          style = \"jenks\", \n          palette = \"Reds\",\n          title = \"Total Trips\") +\n  tm_layout(main.title = \"Weekday Afternoon Peak passenger trips by Origin\",\n            main.title.position = \"center\",\n            main.title.fontface = \"bold\",\n            main.title.size = 0.6,\n            legend.height = 0.3, \n            legend.width = 0.3,\n            frame = TRUE) +\n  tm_credits(\"Source: Population data from \\n Department of Statistics (DOS)\", \n             fontface = \"italic\",  \n             size = 0.15, \n             position = c(\"left\", \"bottom\"))\n\n#weekend/holiday morning peak \nplot1114j <- tm_shape(join_df_wknd11_14_group) +\n  tm_borders(alpha = 0.5) +\n  tm_fill(\"total_trips\", \n          style = \"jenks\", \n          palette = \"Reds\",\n          title = \"Total Trips\") +\n  tm_layout(main.title = \"Weekend/Holiday Morning Peak passenger trips by Origin\",\n            main.title.position = \"center\",\n            main.title.fontface = \"bold\",\n            main.title.size = 0.6,\n            legend.height = 0.3, \n            legend.width = 0.3,\n            frame = TRUE) +\n  tm_credits(\"Source: Population data from \\n Department of Statistics (DOS)\", \n             fontface = \"italic\",  \n             size = 0.15, \n             position = c(\"left\", \"bottom\"))\n\n#weekend/holiday afternoon peak \nplot1619j <- tm_shape(join_df_wknd16_19_group) +\n  tm_borders(alpha = 0.5) +\n  tm_fill(\"total_trips\", \n          style = \"jenks\", \n          palette = \"Reds\",\n          title = \"Total Trips\") +\n  tm_layout(main.title = \"Weekend/Holiday Afternoon Peak passenger trips by Origin\",\n            main.title.position = \"center\",\n            main.title.fontface = \"bold\",\n            main.title.size = 0.6,\n            legend.height = 0.3, \n            legend.width = 0.3,\n            frame = TRUE) +\n  tm_credits(\"Source: Population data from \\n Department of Statistics (DOS)\", \n             fontface = \"italic\",  \n             size = 0.15,       \n             position = c(\"left\", \"bottom\"))\n\ntmap_arrange(plot0609j, plot1720j, plot1114j, plot1619j, asp=2, ncol=2)\n\n\n\n\n\n\n\n\nObservations:\nBy looking at the 4 quantitle chloropleth maps (in blue), we could infer the following:\n\nPassenger volume is significantly higher on Weekday than Weekends/Holidays. It ranges around 400k-550k on Weekdays and 110k-150k on Weekends/Holidays.\nMajority of the bus stops in the Central and Southern region of Singapore have a relatively higher passenger volume compared to other regions.\n\n\n\n\nA quick visualization from the mapview in Section 2.3.2 revealed the location in the red circle as Woodlands - Johor Bahru, Malaysia while the red rectangle is in Tanan Merah. Interestingly, as seen in the red circle, the volume have not declined regardless of time period. People are still travelling to Johor Bahru, Malaysia at any given point.\nOn the contrary, as seen in the red rectangle, the volume changes. It peaks during the Weekend/Holiday period compared to Weekdays. which could be a popular hangout for people over the weekends.\n\nAs observed in Section 3, our data are skewed to one end. Thus, it is not as ideal for us to use the quantile data classification method. We will look at the 4 jenks chloropleth maps (in red).\n\n\nAs identified earlier in the quantile map about the red rectangle at Tanan Merah, we noted the peak is only on the Weekend/Holiday Afternoon. Based on the natural grouping in the data, we are affirmed that the passenger volume towards Johor Bahru, Malaysia remains at the peak throughout the week, and throughout the day.\nFrom the Jenks Classification maps, we have two new observations. From the red and blue circle, we identified that the passenger volume surge on Weekday Morning Peak hour.\nIn comparison, there are more bus stops with higher passenger volume in Weekday Morning followed by Weekend/Holiday Afternoon."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#define-neighborhood",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#define-neighborhood",
    "title": "Take Home Exercise 1",
    "section": "4.1 Define Neighborhood",
    "text": "4.1 Define Neighborhood\nBefore we perform the Moran’s I test, we would need to determine which locations are considered neighbors. As such, we will be using the queen method from the spdep:: poly2nb() package to compute contiguity spatial weights to identify adjacent neighbors.\n\nWeekday (0600-0900)Weekday (1700-2000)Weekends/Holidays (1100-1400)Weekends/Holidays (1600-1900)\n\n\n\nwm_q0609 <- poly2nb(join_df_wkd6_9_group, queen=TRUE)\nsummary(wm_q0609)\n\nNeighbour list object:\nNumber of regions: 1493 \nNumber of nonzero links: 6726 \nPercentage nonzero weights: 0.301743 \nAverage number of links: 4.505023 \n12 regions with no links:\n276 296 454 550 713 964 1030 1388 1478 1481 1485 1493\nLink number distribution:\n\n  0   1   2   3   4   5   6 \n 12  40 102 207 286 359 487 \n40 least connected regions:\n1 7 22 38 98 166 183 184 185 191 207 214 253 257 260 551 595 629 683 695 719 738 755 771 855 990 1004 1005 1029 1069 1194 1437 1444 1455 1473 1474 1476 1479 1483 1492 with 1 link\n487 most connected regions:\n10 13 16 17 24 25 31 35 42 43 48 53 55 60 63 67 73 77 80 81 84 85 87 88 91 92 97 102 107 111 117 121 127 132 138 139 141 145 146 147 151 152 153 154 160 161 162 170 171 172 179 180 181 187 188 189 190 196 197 198 201 202 203 204 212 225 235 239 240 242 252 268 272 280 287 289 290 291 293 299 300 302 303 306 311 314 315 317 327 328 329 330 333 342 345 353 358 380 381 390 392 393 397 404 408 413 415 421 426 427 428 430 433 440 441 442 450 456 457 458 459 463 467 470 471 478 482 483 485 491 492 496 502 503 506 507 512 518 523 528 532 537 538 539 541 545 547 553 557 562 563 565 566 570 579 580 583 587 588 592 593 597 603 607 611 613 620 623 624 625 635 636 637 641 642 644 645 646 656 657 658 664 667 668 669 674 675 677 678 687 688 691 692 693 700 703 704 711 714 715 716 727 728 742 744 745 747 758 761 762 763 764 769 770 774 775 776 779 780 781 782 786 787 792 793 796 797 798 799 805 806 809 810 811 816 817 818 827 829 830 832 833 834 836 837 838 839 840 846 849 851 852 853 857 858 862 863 864 866 867 868 870 871 874 877 879 882 885 888 890 891 895 899 904 906 911 912 913 915 916 920 928 929 930 931 932 933 938 942 943 946 947 952 953 955 956 957 961 967 968 969 970 971 973 979 980 981 982 987 994 995 996 997 1007 1008 1009 1011 1012 1019 1020 1021 1025 1033 1034 1037 1039 1040 1045 1046 1047 1049 1050 1051 1052 1059 1061 1062 1063 1066 1072 1076 1083 1084 1085 1088 1089 1093 1094 1100 1103 1104 1105 1111 1116 1117 1118 1119 1124 1125 1127 1128 1129 1130 1131 1133 1139 1140 1141 1145 1146 1147 1149 1151 1152 1153 1154 1158 1159 1160 1161 1162 1166 1168 1171 1172 1173 1174 1175 1181 1182 1183 1184 1185 1186 1187 1190 1191 1197 1198 1199 1200 1201 1207 1213 1214 1215 1219 1224 1225 1231 1233 1234 1235 1240 1244 1245 1250 1251 1252 1256 1259 1261 1267 1276 1279 1280 1281 1294 1299 1300 1301 1302 1304 1305 1306 1309 1310 1312 1318 1327 1329 1330 1338 1339 1341 1344 1345 1350 1353 1354 1355 1357 1361 1364 1366 1368 1371 1379 1381 1385 1390 1391 1393 1397 1398 1399 1400 1401 1406 1407 1408 1409 1413 1414 1415 1419 1420 1422 1424 1426 1429 1430 1432 1433 1434 1435 1442 with 6 links\n\n\n\n\n\nwm_q1720 <- poly2nb(join_df_wkd17_20_group, queen=TRUE)\nsummary(wm_q1720)\n\nNeighbour list object:\nNumber of regions: 1495 \nNumber of nonzero links: 6734 \nPercentage nonzero weights: 0.3012942 \nAverage number of links: 4.504348 \n12 regions with no links:\n277 297 455 551 714 965 1032 1390 1480 1483 1487 1495\nLink number distribution:\n\n  0   1   2   3   4   5   6 \n 12  37 107 206 287 359 487 \n37 least connected regions:\n1 7 22 38 98 166 184 192 208 215 254 258 261 552 596 630 684 696 720 739 756 772 856 1006 1007 1031 1071 1196 1439 1446 1457 1475 1476 1478 1481 1485 1494 with 1 link\n487 most connected regions:\n10 13 16 17 24 25 31 35 42 43 48 53 55 60 63 67 73 77 80 81 84 85 87 88 91 92 97 102 107 111 117 121 127 132 138 139 141 145 146 147 151 152 153 154 160 161 162 170 171 172 180 181 182 188 189 190 191 197 198 199 202 203 204 205 213 226 236 240 241 243 253 269 273 281 288 290 291 292 294 300 301 303 304 307 312 315 316 318 328 329 330 331 334 343 346 354 359 381 382 391 393 394 398 405 409 414 416 422 427 428 429 431 434 441 442 443 451 457 458 459 460 464 468 471 472 479 483 484 486 492 493 497 503 504 507 508 513 519 524 529 533 538 539 540 542 546 548 554 558 563 564 566 567 571 580 581 584 588 589 593 594 598 604 608 612 614 621 624 625 626 636 637 638 642 643 645 646 647 657 658 659 665 668 669 670 675 676 678 679 688 689 692 693 694 701 704 705 712 715 716 717 728 729 743 745 746 748 759 762 763 764 765 770 771 775 776 777 780 781 782 783 787 788 793 794 797 798 799 800 806 807 810 811 812 817 818 819 828 830 831 833 834 835 837 838 839 840 841 847 850 852 853 854 858 859 863 864 865 867 868 869 871 872 875 878 880 883 886 889 891 892 896 900 905 907 912 913 914 916 917 921 929 930 931 932 933 934 939 943 944 947 948 953 954 956 957 958 962 969 970 971 972 973 975 981 982 983 984 989 996 997 998 999 1009 1010 1011 1013 1014 1021 1022 1023 1027 1035 1036 1039 1041 1042 1047 1048 1049 1051 1052 1053 1054 1061 1063 1064 1065 1068 1074 1078 1085 1086 1087 1090 1091 1095 1096 1102 1105 1106 1107 1113 1118 1119 1120 1121 1126 1127 1129 1130 1131 1132 1133 1135 1141 1142 1143 1147 1148 1149 1151 1153 1154 1155 1156 1160 1161 1162 1163 1164 1168 1170 1173 1174 1175 1176 1177 1183 1184 1185 1186 1187 1188 1189 1192 1193 1199 1200 1201 1202 1203 1209 1215 1216 1217 1221 1226 1227 1233 1235 1236 1237 1242 1246 1247 1252 1253 1254 1258 1261 1263 1269 1278 1281 1282 1283 1296 1301 1302 1303 1304 1306 1307 1308 1311 1312 1314 1320 1329 1331 1332 1340 1341 1343 1346 1347 1352 1355 1356 1357 1359 1363 1366 1368 1370 1373 1381 1383 1387 1392 1393 1395 1399 1400 1401 1402 1403 1408 1409 1410 1411 1415 1416 1417 1421 1422 1424 1426 1428 1431 1432 1434 1435 1436 1437 1444 with 6 links\n\n\n\n\n\nwm_q1114 <- poly2nb(join_df_wknd11_14_group, queen=TRUE)\nsummary(wm_q1114)\n\nNeighbour list object:\nNumber of regions: 1499 \nNumber of nonzero links: 6734 \nPercentage nonzero weights: 0.2996883 \nAverage number of links: 4.492328 \n11 regions with no links:\n297 454 550 712 963 1030 1394 1484 1487 1491 1499\nLink number distribution:\n\n  0   1   2   3   4   5   6 \n 11  41 109 206 286 363 483 \n41 least connected regions:\n1 7 22 38 96 164 180 181 182 188 204 211 250 251 256 259 277 551 594 628 682 694 718 737 754 770 854 1004 1005 1029 1069 1196 1443 1450 1461 1479 1480 1482 1485 1489 1498 with 1 link\n483 most connected regions:\n10 13 16 17 24 25 31 35 42 43 48 53 54 59 62 66 72 76 79 80 83 86 87 89 100 105 109 115 119 125 130 136 137 139 143 144 145 150 151 152 159 160 167 168 169 176 177 178 184 185 186 187 193 194 195 198 199 200 201 209 222 232 236 237 239 249 269 273 281 288 290 291 292 294 300 301 303 304 307 312 315 316 318 328 329 330 331 334 343 346 354 359 381 382 391 393 394 397 404 408 413 415 421 426 427 428 430 433 440 441 442 450 456 457 458 459 463 467 470 471 478 482 483 485 491 492 496 502 503 506 507 512 518 523 528 532 537 538 539 541 545 547 552 556 562 564 565 569 578 579 582 586 587 591 592 596 602 606 610 612 619 622 623 624 634 635 636 640 641 643 644 645 655 656 657 663 666 667 668 673 674 676 677 686 687 690 691 692 699 702 703 710 713 714 715 726 727 741 743 744 746 757 760 761 762 763 768 769 773 774 775 778 779 780 781 785 786 791 792 795 796 797 798 804 805 808 809 810 815 816 817 826 828 829 831 832 833 835 836 837 838 839 845 848 850 851 852 856 857 861 862 863 865 866 867 869 870 873 876 878 881 884 887 889 890 894 898 903 905 910 911 912 914 915 919 927 928 929 930 931 932 937 941 942 945 946 951 952 954 955 956 960 967 968 969 970 971 973 979 980 981 982 987 994 995 996 997 1007 1008 1009 1011 1012 1019 1020 1021 1025 1033 1034 1037 1039 1040 1045 1046 1047 1049 1050 1051 1052 1059 1061 1062 1063 1066 1072 1076 1083 1084 1085 1088 1089 1093 1094 1100 1103 1104 1105 1111 1116 1117 1118 1119 1124 1125 1127 1128 1129 1130 1131 1133 1139 1140 1141 1145 1146 1147 1149 1152 1153 1154 1155 1159 1160 1161 1162 1163 1167 1169 1172 1173 1174 1175 1176 1183 1184 1185 1186 1187 1188 1189 1192 1193 1199 1200 1201 1202 1203 1209 1215 1216 1217 1221 1226 1227 1233 1235 1236 1237 1243 1247 1248 1253 1254 1255 1259 1262 1264 1270 1279 1281 1282 1283 1284 1296 1298 1304 1305 1306 1307 1309 1310 1311 1314 1315 1317 1323 1332 1334 1335 1344 1345 1347 1350 1351 1356 1359 1360 1361 1363 1367 1370 1372 1374 1377 1385 1387 1391 1396 1397 1399 1403 1404 1405 1406 1407 1412 1413 1414 1415 1419 1420 1421 1425 1426 1428 1430 1432 1435 1436 1438 1439 1440 1441 1448 with 6 links\n\n\n\n\n\nwm_q1619 <- poly2nb(join_df_wknd16_19_group, queen=TRUE)\nsummary(wm_q1619)\n\nNeighbour list object:\nNumber of regions: 1489 \nNumber of nonzero links: 6688 \nPercentage nonzero weights: 0.3016525 \nAverage number of links: 4.491605 \n11 regions with no links:\n300 457 553 712 960 1026 1390 1476 1479 1483 1489\nLink number distribution:\n\n  0   1   2   3   4   5   6 \n 11  42 108 208 277 360 483 \n42 least connected regions:\n1 7 22 38 98 166 183 184 185 191 207 214 253 254 259 262 280 554 596 629 682 694 718 737 754 770 805 851 986 1000 1001 1025 1065 1192 1439 1446 1456 1471 1472 1474 1477 1481 with 1 link\n483 most connected regions:\n10 13 16 17 24 25 31 35 42 43 48 53 55 60 63 67 73 77 80 81 84 85 87 88 91 92 97 102 107 111 117 121 127 132 138 139 141 145 146 147 151 152 153 154 160 161 162 170 171 172 179 180 181 187 188 189 190 196 197 198 201 202 203 204 212 225 235 239 240 242 252 272 276 284 291 293 294 295 297 303 304 306 307 310 315 318 319 321 331 332 333 334 337 346 349 357 362 384 385 394 396 397 400 407 411 416 418 424 429 430 431 433 436 443 444 445 453 459 460 461 462 466 470 473 474 481 485 486 488 494 495 499 505 506 509 510 515 521 526 531 535 540 541 542 544 548 550 555 559 565 567 568 572 581 582 585 589 590 593 594 598 604 608 611 613 620 623 624 625 634 635 636 640 643 644 645 655 656 657 663 666 667 668 673 674 676 677 686 687 690 691 692 699 702 703 710 713 714 715 726 727 741 743 744 746 757 760 761 762 763 768 769 773 774 775 778 779 780 781 785 786 790 791 794 795 796 797 803 804 806 807 808 813 814 815 824 828 829 830 832 833 834 835 836 842 847 848 849 853 854 858 859 860 862 863 866 867 870 873 875 878 881 884 886 887 891 895 900 902 907 908 909 911 912 916 924 925 926 927 928 929 934 938 939 942 943 948 949 951 952 953 957 963 964 965 966 967 969 975 976 977 978 983 990 991 992 993 1003 1004 1005 1007 1008 1015 1016 1017 1021 1029 1030 1033 1035 1036 1041 1042 1043 1045 1046 1047 1048 1055 1057 1058 1059 1062 1068 1072 1079 1080 1081 1084 1085 1089 1090 1096 1099 1100 1101 1107 1112 1113 1114 1115 1120 1121 1123 1124 1125 1126 1127 1129 1135 1136 1137 1141 1142 1143 1145 1148 1149 1150 1151 1155 1156 1157 1158 1159 1163 1165 1168 1169 1170 1171 1172 1179 1180 1181 1182 1183 1184 1185 1188 1189 1195 1196 1197 1198 1199 1205 1211 1212 1213 1217 1222 1223 1229 1231 1232 1233 1239 1243 1244 1249 1250 1251 1255 1258 1260 1266 1275 1277 1278 1279 1280 1292 1294 1300 1301 1302 1303 1305 1306 1307 1310 1311 1313 1319 1328 1330 1331 1340 1341 1343 1346 1347 1352 1355 1356 1357 1359 1363 1366 1368 1370 1373 1381 1383 1387 1392 1393 1395 1399 1400 1401 1402 1403 1408 1409 1410 1411 1415 1416 1417 1421 1422 1424 1426 1428 1431 1432 1434 1435 1436 1437 1444 with 6 links\n\n\n\n\n\nFrom the summary report above, the region range from 1,483 to 1,499. On average , each area is contigious with about 4 other grids. However, there are 11/12 regions that does not have any contigious neighbors. Therefore, we would not be using Contiguity-based Spatial Weights for further analysis."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#deriving-the-centroid",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#deriving-the-centroid",
    "title": "Take Home Exercise 1",
    "section": "4.2 Deriving the centroid",
    "text": "4.2 Deriving the centroid\nInstead, we are interested in the distanced-based contiguity. To begin, we will get the coordinates of polygon centroids for each area of the commuting flows. We will be using the st_centroid() function to calculate the geometric center of a spatial object.\n\n\nShow the code\n#weekday morning peak \ncoords0609 <- st_centroid(st_geometry(join_df_wkd6_9_group))\ncoords0609[1]\n\n\nGeometry set for 1 feature \nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 28214.15 xmax: 3970.122 ymax: 28214.15\nProjected CRS: SVY21 / Singapore TM\n\n\nShow the code\n#weekday afternoon peak \ncoords1720 <- st_centroid(st_geometry(join_df_wkd17_20_group))\ncoords1720[1]\n\n\nGeometry set for 1 feature \nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 28214.15 xmax: 3970.122 ymax: 28214.15\nProjected CRS: SVY21 / Singapore TM\n\n\nShow the code\n#weekend/holiday morning peak \ncoords1114 <- st_centroid(st_geometry(join_df_wknd11_14_group))\ncoords1114[1]\n\n\nGeometry set for 1 feature \nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 28214.15 xmax: 3970.122 ymax: 28214.15\nProjected CRS: SVY21 / Singapore TM\n\n\nShow the code\n#weekend/holiday afternoon peak \ncoords1619 <- st_centroid(st_geometry(join_df_wknd16_19_group))\ncoords1619[1]\n\n\nGeometry set for 1 feature \nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 28214.15 xmax: 3970.122 ymax: 28214.15\nProjected CRS: SVY21 / Singapore TM"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#determine-the-cut-off-distance",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#determine-the-cut-off-distance",
    "title": "Take Home Exercise 1",
    "section": "4.3 Determine the cut-off distance",
    "text": "4.3 Determine the cut-off distance\nThereafter, we will need to determine the cut-off distance by looking at the upper bound. We will be using knearneigh() of spdep to identify the k nearest neighbors of each other. If longlat = TRUE, it computes the Euclidean distance with a lower and upper bounds by doing the following:\n\nReturn a matrix with the indices of points belonging to the set of the k nearest neighbors of each other by using knearneigh() of spdep.\nConvert the knn object returned by knearneigh() into a neighbors list of class nb with a list of integer vectors containing neighbor region number ids by using knn2nb().\nReturn the length of neighbor relationship edges by using nbdists() of spdep. The function returns in the units of the coordinates if the coordinates are projected, in km otherwise.\nRemove the list structure of the returned object by using unlist().\n\n\nWeekday (0600-0900)Weekday (1700-2000)Weekends/Holidays (1100-1400)Weekends/Holidays (1600-1900)\n\n\n\nk0609 <- knn2nb(knearneigh(coords0609, k = 1))\nk0609dists <- unlist(nbdists(k0609, coords0609))\nsummary(k0609dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  500.0   500.0   500.0   507.2   500.0  4582.6 \n\n\n\n\n\nk1720 <- knn2nb(knearneigh(coords1720, k = 1))\nk1720dists <- unlist(nbdists(k1720, coords1720))\nsummary(k1720dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  500.0   500.0   500.0   507.2   500.0  4582.6 \n\n\n\n\n\nk1114 <- knn2nb(knearneigh(coords1114, k = 1))\nk1114dists <- unlist(nbdists(k1114, coords1114))\nsummary(k1114dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n    500     500     500     507     500    4583 \n\n\n\n\n\nk1619 <- knn2nb(knearneigh(coords1619, k = 1))\nk1619dists <- unlist(nbdists(k1619, coords1619))\nsummary(k1619dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n    500     500     500     507     500    4583 \n\n\n\n\n\nFrom the summary reports above, the largest first nearest neighbor distance is 4,582km (lowest value among the four commuting flows). Thus, we will use this as the upper threshold such that all units will have at least one neighbor."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#computing-fixed-distance-weight-matrix",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#computing-fixed-distance-weight-matrix",
    "title": "Take Home Exercise 1",
    "section": "4.4 Computing Fixed distance weight matrix",
    "text": "4.4 Computing Fixed distance weight matrix\nKnowing the upper threshold, we will be able to compute the fixed distance weight matrix. We will compute the distance weight matrix by using dnearneigh() as shown below.\n\nWeekday (0600-0900)Weekday (1700-2000)Weekends/Holidays (1100-1400)Weekends/Holidays (1600-1900)\n\n\n\n\nShow the code\n#weekday morning peak \nwm_d0609 <- dnearneigh(coords0609,0,4582)\nwm_d0609\n\n\nNeighbour list object:\nNumber of regions: 1493 \nNumber of nonzero links: 229408 \nPercentage nonzero weights: 10.29174 \nAverage number of links: 153.6557 \n1 region with no links:\n296\n\n\n\n\n\n\nShow the code\n#weekday afternoon peak \nwm_d1720 <- dnearneigh(coords1720,0,4582)\nwm_d1720\n\n\nNeighbour list object:\nNumber of regions: 1495 \nNumber of nonzero links: 229676 \nPercentage nonzero weights: 10.27622 \nAverage number of links: 153.6294 \n1 region with no links:\n297\n\n\n\n\n\n\nShow the code\n#weekend/holiday morning peak \nwm_d1114 <- dnearneigh(coords1114,0,4582)\nwm_d1114\n\n\nNeighbour list object:\nNumber of regions: 1499 \nNumber of nonzero links: 230220 \nPercentage nonzero weights: 10.24566 \nAverage number of links: 153.5824 \n1 region with no links:\n297\n\n\n\n\n\n\nShow the code\n#weekend/holiday afternoon peak \nwm_d1619 <- dnearneigh(coords1619,0,4582)\nwm_d1619\n\n\nNeighbour list object:\nNumber of regions: 1489 \nNumber of nonzero links: 228436 \nPercentage nonzero weights: 10.30327 \nAverage number of links: 153.4157 \n1 region with no links:\n300\n\n\n\n\n\nFrom the output across the commuting flows, we identify an average of 153 neighbors per grid using the distance based weight matrix.\nNext, nb2listw() is used to convert the nb object into spatial weights object.\n\n\nShow the code\n#weekday morning peak \nwm0609_lw <- nb2listw(wm_d0609, style = 'B',zero.policy = TRUE)\n\n#weekday afternoon peak \nwm1720_lw <- nb2listw(wm_d1720, style = 'B',zero.policy = TRUE)\n\n#weekend/holiday morning peak \nwm1114_lw <- nb2listw(wm_d1114, style = 'B',zero.policy = TRUE)\n\n#weekend/holiday afternoon peak \nwm1619_lw <- nb2listw(wm_d1619, style = 'B',zero.policy = TRUE)\n\n#summary(wm0609_lw)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#computing-adaptive-distance-weight-matrix",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#computing-adaptive-distance-weight-matrix",
    "title": "Take Home Exercise 1",
    "section": "4.5 Computing Adaptive distance weight matrix",
    "text": "4.5 Computing Adaptive distance weight matrix\nAlternatively, we could directly control the number of neighbors using k-nearest neighbors by using knearneigh() function. For our analysis, we will set the number of neighbors to 8. (i.e., all grids will have 8 neighbors).\n\nWeekday (0600-0900)Weekday (1700-2000)Weekends/Holidays (1100-1400)Weekends/Holidays (1600-1900)\n\n\n\n\nShow the code\n#weekday morning peak \nknn0609 <- knn2nb(knearneigh(coords0609, k=8))\nknn0609\n\n\nNeighbour list object:\nNumber of regions: 1493 \nNumber of nonzero links: 11944 \nPercentage nonzero weights: 0.5358339 \nAverage number of links: 8 \nNon-symmetric neighbours list\n\n\n\n\n\n\nShow the code\n#weekday afternoon peak \nknn1720 <- knn2nb(knearneigh(coords1720, k=8))\nknn1720\n\n\nNeighbour list object:\nNumber of regions: 1495 \nNumber of nonzero links: 11960 \nPercentage nonzero weights: 0.5351171 \nAverage number of links: 8 \nNon-symmetric neighbours list\n\n\n\n\n\n\nShow the code\n#weekend/holiday morning peak \nknn1114 <- knn2nb(knearneigh(coords1114, k=8))\nknn1114\n\n\nNeighbour list object:\nNumber of regions: 1499 \nNumber of nonzero links: 11992 \nPercentage nonzero weights: 0.5336891 \nAverage number of links: 8 \nNon-symmetric neighbours list\n\n\n\n\n\n\nShow the code\n#weekend/holiday afternoon peak \nknn1619 <- knn2nb(knearneigh(coords1619, k=8))\nknn1619\n\n\nNeighbour list object:\nNumber of regions: 1489 \nNumber of nonzero links: 11912 \nPercentage nonzero weights: 0.5372733 \nAverage number of links: 8 \nNon-symmetric neighbours list\n\n\n\n\n\nNext, nb2listw() is used to convert the nb object into spatial weights object.\n\nWeekday (0600-0900)Weekday (1700-2000)Weekends/Holidays (1100-1400)Weekends/Holidays (1600-1900)\n\n\n\n\nShow the code\n#weekday morning peak \nknn0609_lw <- nb2listw(knn0609, style = 'B')\nsummary(knn0609_lw)\n\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 1493 \nNumber of nonzero links: 11944 \nPercentage nonzero weights: 0.5358339 \nAverage number of links: 8 \nNon-symmetric neighbours list\nLink number distribution:\n\n   8 \n1493 \n1493 least connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 882 883 884 885 886 887 888 889 890 891 892 893 894 895 896 897 898 899 900 901 902 903 904 905 906 907 908 909 910 911 912 913 914 915 916 917 918 919 920 921 922 923 924 925 926 927 928 929 930 931 932 933 934 935 936 937 938 939 940 941 942 943 944 945 946 947 948 949 950 951 952 953 954 955 956 957 958 959 960 961 962 963 964 965 966 967 968 969 970 971 972 973 974 975 976 977 978 979 980 981 982 983 984 985 986 987 988 989 990 991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 1008 1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 1121 1122 1123 1124 1125 1126 1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 1153 1154 1155 1156 1157 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 1169 1170 1171 1172 1173 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 1184 1185 1186 1187 1188 1189 1190 1191 1192 1193 1194 1195 1196 1197 1198 1199 1200 1201 1202 1203 1204 1205 1206 1207 1208 1209 1210 1211 1212 1213 1214 1215 1216 1217 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 1229 1230 1231 1232 1233 1234 1235 1236 1237 1238 1239 1240 1241 1242 1243 1244 1245 1246 1247 1248 1249 1250 1251 1252 1253 1254 1255 1256 1257 1258 1259 1260 1261 1262 1263 1264 1265 1266 1267 1268 1269 1270 1271 1272 1273 1274 1275 1276 1277 1278 1279 1280 1281 1282 1283 1284 1285 1286 1287 1288 1289 1290 1291 1292 1293 1294 1295 1296 1297 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 1310 1311 1312 1313 1314 1315 1316 1317 1318 1319 1320 1321 1322 1323 1324 1325 1326 1327 1328 1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 1344 1345 1346 1347 1348 1349 1350 1351 1352 1353 1354 1355 1356 1357 1358 1359 1360 1361 1362 1363 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373 1374 1375 1376 1377 1378 1379 1380 1381 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 1393 1394 1395 1396 1397 1398 1399 1400 1401 1402 1403 1404 1405 1406 1407 1408 1409 1410 1411 1412 1413 1414 1415 1416 1417 1418 1419 1420 1421 1422 1423 1424 1425 1426 1427 1428 1429 1430 1431 1432 1433 1434 1435 1436 1437 1438 1439 1440 1441 1442 1443 1444 1445 1446 1447 1448 1449 1450 1451 1452 1453 1454 1455 1456 1457 1458 1459 1460 1461 1462 1463 1464 1465 1466 1467 1468 1469 1470 1471 1472 1473 1474 1475 1476 1477 1478 1479 1480 1481 1482 1483 1484 1485 1486 1487 1488 1489 1490 1491 1492 1493 with 8 links\n1493 most connected regions:\nwith 8 links\n\nWeights style: B \nWeights constants summary:\n     n      nn    S0    S1     S2\nB 1493 2229049 11944 22284 387046\n\n\n\n\n\n\nShow the code\n#weekday afternoon peak \nknn1720_lw <- nb2listw(knn1720, style = 'B')\nsummary(knn1720_lw)\n\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 1495 \nNumber of nonzero links: 11960 \nPercentage nonzero weights: 0.5351171 \nAverage number of links: 8 \nNon-symmetric neighbours list\nLink number distribution:\n\n   8 \n1495 \n1495 least connected regions:\nwith 8 links\n1495 most connected regions:\nwith 8 links\n\nWeights style: B \nWeights constants summary:\n     n      nn    S0    S1     S2\nB 1495 2235025 11960 22314 387584\n\n\n\n\n\n\nShow the code\n#weekend/holiday morning peak \nknn1114_lw <- nb2listw(knn1114, style = 'B')\nsummary(knn1114_lw)\n\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 1499 \nNumber of nonzero links: 11992 \nPercentage nonzero weights: 0.5336891 \nAverage number of links: 8 \nNon-symmetric neighbours list\nLink number distribution:\n\n   8 \n1499 \n1499 least connected regions:\nwith 8 links\n1499 most connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 882 883 884 885 886 887 888 889 890 891 892 893 894 895 896 897 898 899 900 901 902 903 904 905 906 907 908 909 910 911 912 913 914 915 916 917 918 919 920 921 922 923 924 925 926 927 928 929 930 931 932 933 934 935 936 937 938 939 940 941 942 943 944 945 946 947 948 949 950 951 952 953 954 955 956 957 958 959 960 961 962 963 964 965 966 967 968 969 970 971 972 973 974 975 976 977 978 979 980 981 982 983 984 985 986 987 988 989 990 991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 1008 1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 1121 1122 1123 1124 1125 1126 1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 1153 1154 1155 1156 1157 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 1169 1170 1171 1172 1173 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 1184 1185 1186 1187 1188 1189 1190 1191 1192 1193 1194 1195 1196 1197 1198 1199 1200 1201 1202 1203 1204 1205 1206 1207 1208 1209 1210 1211 1212 1213 1214 1215 1216 1217 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 1229 1230 1231 1232 1233 1234 1235 1236 1237 1238 1239 1240 1241 1242 1243 1244 1245 1246 1247 1248 1249 1250 1251 1252 1253 1254 1255 1256 1257 1258 1259 1260 1261 1262 1263 1264 1265 1266 1267 1268 1269 1270 1271 1272 1273 1274 1275 1276 1277 1278 1279 1280 1281 1282 1283 1284 1285 1286 1287 1288 1289 1290 1291 1292 1293 1294 1295 1296 1297 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 1310 1311 1312 1313 1314 1315 1316 1317 1318 1319 1320 1321 1322 1323 1324 1325 1326 1327 1328 1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 1344 1345 1346 1347 1348 1349 1350 1351 1352 1353 1354 1355 1356 1357 1358 1359 1360 1361 1362 1363 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373 1374 1375 1376 1377 1378 1379 1380 1381 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 1393 1394 1395 1396 1397 1398 1399 1400 1401 1402 1403 1404 1405 1406 1407 1408 1409 1410 1411 1412 1413 1414 1415 1416 1417 1418 1419 1420 1421 1422 1423 1424 1425 1426 1427 1428 1429 1430 1431 1432 1433 1434 1435 1436 1437 1438 1439 1440 1441 1442 1443 1444 1445 1446 1447 1448 1449 1450 1451 1452 1453 1454 1455 1456 1457 1458 1459 1460 1461 1462 1463 1464 1465 1466 1467 1468 1469 1470 1471 1472 1473 1474 1475 1476 1477 1478 1479 1480 1481 1482 1483 1484 1485 1486 1487 1488 1489 1490 1491 1492 1493 1494 1495 1496 1497 1498 1499 with 8 links\n\nWeights style: B \nWeights constants summary:\n     n      nn    S0    S1     S2\nB 1499 2247001 11992 22362 388608\n\n\n\n\n\n\nShow the code\n#weekend/holiday afternoon peak \nknn1619_lw <- nb2listw(knn1619, style = 'B')\nsummary(knn1619_lw)\n\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 1489 \nNumber of nonzero links: 11912 \nPercentage nonzero weights: 0.5372733 \nAverage number of links: 8 \nNon-symmetric neighbours list\nLink number distribution:\n\n   8 \n1489 \n1489 least connected regions:\nwith 8 links\n1489 most connected regions:\nwith 8 links\n\nWeights style: B \nWeights constants summary:\n     n      nn    S0    S1     S2\nB 1489 2217121 11912 22206 386064\n\n\n\n\n\nWith the spatial weights objects, we are able to plot and compare the fixed and adaptive distance-based neighbors.\n\nWeekday (0600-0900)Weekday (1700-2000)Weekends/Holidays (1100-1400)Weekends/Holidays (1600-1900)\n\n\n\n\nShow the code\npar(mfrow=c(1,2))\nplot(join_df_wkd6_9_group$honeycomb_grid_wkd6_9, border=\"lightgrey\", main=\"Adaptive Distance (8)\")\nplot(knn0609, coords0609, add=TRUE, col=\"red\", length=0.08)\nplot(join_df_wkd6_9_group$honeycomb_grid_wkd6_9, border=\"lightgrey\", main=\"Fixed Distance\")\nplot(wm_d0609, coords0609, add=TRUE, pch = 19, cex = 0.6)\n\n\n\n\n\n\n\n\n\nShow the code\npar(mfrow=c(1,2))\nplot(join_df_wkd17_20_group$honeycomb_grid_wkd17_20, border=\"lightgrey\", main=\"Adaptive Distance (8)\")\nplot(knn1720, coords1720, add=TRUE, col=\"red\", length=0.08)\nplot(join_df_wkd17_20_group$honeycomb_grid_wkd17_20, border=\"lightgrey\", main=\"Fixed Distance\")\nplot(wm_d1720, coords1720, add=TRUE, pch = 19, cex = 0.6)\n\n\n\n\n\n\n\n\n\nShow the code\npar(mfrow=c(1,2))\nplot(join_df_wknd11_14_group$honeycomb_grid_wknd11_14, border=\"lightgrey\", main=\"Adaptive Distance (8)\")\nplot(knn1114, coords1114, add=TRUE, col=\"red\", length=0.08)\nplot(join_df_wknd11_14_group$honeycomb_grid_wknd11_14, border=\"lightgrey\", main=\"Fixed Distance\")\nplot(wm_d1114, coords1114, add=TRUE, pch = 19, cex = 0.6)\n\n\n\n\n\n\n\n\n\nShow the code\npar(mfrow=c(1,2))\nplot(join_df_wknd16_19_group$honeycomb_grid_wknd16_19, border=\"lightgrey\", main=\"Adaptive Distance (8)\")\nplot(knn1619, coords1619, add=TRUE, col=\"red\", length=0.08)\nplot(join_df_wknd16_19_group$honeycomb_grid_wknd16_19, border=\"lightgrey\", main=\"Fixed Distance\")\nplot(wm_d1619, coords1619, add=TRUE, pch = 19, cex = 0.6)\n\n\n\n\n\n\n\n\nDue to the high volume, the graph have a high density that makes it hard to us to interpret. However, by looking at the commuting flow, we could see the changes in the neighbor links at the north regions.\nBy looking at the fixed and adaptive distanced-based matrics, we noticed that there is a decrease in the percentage of nonzero weight, infering that there might be grid with more neighbors.\nAs such, we will select adaptive distanced-based spatial weight matrix for our subsequent analysis."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#computing-global-morans-i",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#computing-global-morans-i",
    "title": "Take Home Exercise 1",
    "section": "4.6 Computing Global Moran’s I",
    "text": "4.6 Computing Global Moran’s I\nWe will perform Moran’s I statistical testing by using moran.test() of spdep on the passenger volume at hexagon level to detect cluster and/or outlier. The global Moran’s I will be performed on the adaptive distance weight matrix.\nMoran’s I describe how features differ from the values in the study area as a whole. The Moran I statistic ranges from -1 to 1. If the Moran’s I is:\n\npositive (I>0): Clustered, observations tend to be similar\nnegative (I<0): Disperse, observations tend to be dissimilar\napproximately zero: observations arranged randomly over space\n\n\nWeekday (0600-0900)Weekday (1700-2000)Weekends/Holidays (1100-1400)Weekends/Holidays (1600-1900)\n\n\n\n\nShow the code\nmoran.test(join_df_wkd6_9_group$total_trips, \n           listw=knn0609_lw, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n\n    Moran I test under randomisation\n\ndata:  join_df_wkd6_9_group$total_trips  \nweights: knn0609_lw    \n\nMoran I statistic standard deviate = 16.351, p-value < 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     0.2001083712     -0.0006702413      0.0001507761 \n\n\n\n\n\n\nShow the code\nmoran.test(join_df_wkd17_20_group$total_trips, \n           listw=knn1720_lw, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n\n    Moran I test under randomisation\n\ndata:  join_df_wkd17_20_group$total_trips  \nweights: knn1720_lw    \n\nMoran I statistic standard deviate = 4.9447, p-value = 3.814e-07\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.059133974      -0.000669344       0.000146277 \n\n\n\n\n\n\nShow the code\nmoran.test(join_df_wknd11_14_group$total_trips, \n           listw=knn1114_lw, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n\n    Moran I test under randomisation\n\ndata:  join_df_wknd11_14_group$total_trips  \nweights: knn1114_lw    \n\nMoran I statistic standard deviate = 12.549, p-value < 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     0.1528562501     -0.0006675567      0.0001496745 \n\n\n\n\n\n\nShow the code\nmoran.test(join_df_wknd16_19_group$total_trips, \n           listw=knn1619_lw, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n\n    Moran I test under randomisation\n\ndata:  join_df_wknd16_19_group$total_trips  \nweights: knn1619_lw    \n\nMoran I statistic standard deviate = 8.1125, p-value = 2.479e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     0.0981293618     -0.0006720430      0.0001483252 \n\n\n\n\n\nInterpretation of results\nBased on the all the results above, we conclude that the p-value is below the alpha value of 0.05, therefore, we have sufficient statistical evidence to reject the null hypothesis at 95% confidence level that the attribute is randomly distributed.\nIn addition, the Moran’s I value is greater than 0. This shows that the observations are clustered, and tend to be similar to one another."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#computing-monte-carlo-morans-i",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#computing-monte-carlo-morans-i",
    "title": "Take Home Exercise 1",
    "section": "4.7 Computing Monte Carlo Moran’s I",
    "text": "4.7 Computing Monte Carlo Moran’s I\nWe will perform permutation test for Moran’s statistic by using moran.mc() of spdep. A total of 1000 simulation will be performed through random assignment:\n\nWeekday (0600-0900)Weekday (1700-2000)Weekends/Holidays (1100-1400)Weekends/Holidays (1600-1900)\n\n\n\n\nShow the code\nset.seed=123\n\nmoran.mc(join_df_wkd6_9_group$total_trips, \n         listw=knn0609_lw, \n         nsim=999,\n         zero.policy = TRUE, \n         na.action=na.exclude)\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  join_df_wkd6_9_group$total_trips \nweights: knn0609_lw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.20011, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n\n\n\nShow the code\nset.seed=123\n\nmoran.mc(join_df_wkd17_20_group$total_trips, \n         listw=knn1720_lw, \n         nsim=999,\n         zero.policy = TRUE, \n         na.action=na.exclude)\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  join_df_wkd17_20_group$total_trips \nweights: knn1720_lw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.059134, observed rank = 998, p-value = 0.002\nalternative hypothesis: greater\n\n\n\n\n\n\nShow the code\nset.seed=123\n\nmoran.mc(join_df_wknd11_14_group$total_trips, \n         listw=knn1114_lw, \n         nsim=999,\n         zero.policy = TRUE, \n         na.action=na.exclude)\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  join_df_wknd11_14_group$total_trips \nweights: knn1114_lw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.15286, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n\n\n\nShow the code\nset.seed=123\n\nmoran.mc(join_df_wknd16_19_group$total_trips, \n         listw=knn1619_lw, \n         nsim=999,\n         zero.policy = TRUE, \n         na.action=na.exclude)\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  join_df_wknd16_19_group$total_trips \nweights: knn1619_lw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.098129, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n\n\nInterpretation of results\nBased on the all the results above, we have sufficient statistical evidence to reject the null hypothesis at 95% confidence level. This suggests that there are some degree of clustering in the commuting flows."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#computing-local-morans-i",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#computing-local-morans-i",
    "title": "Take Home Exercise 1",
    "section": "5.1 Computing local Moran’s I",
    "text": "5.1 Computing local Moran’s I\nWe will perform Local Moran’s I statistical testing using localmoran() of spdep. The code chunks below are used to compute local Moran’s I of Passenger volume at the hexagon level (grid_id).\nIf the Local Moran’s I value is:\n\npositive: Part of a cluster. Feature has neighboring features with similarly high/low attribute values\nnegative: part of an outlier. Feature has neighboring features with dissimilar values.\n\nBefore we map, we would need to compute them using localmoran() function of spdep package. Given a set of Z.Li values, it computes Ii , and a listw object providing neighbor weighting information for the polygon associated with the Z.Ii values.\n\n\nShow the code\nfips <- order(join_df_wkd6_9_group$grid_id)\n#weekday morning peak \nlocalMI_0609ad <- localmoran(join_df_wkd6_9_group$total_trips, knn0609_lw)\n#weekday afternoon peak \nlocalMI_1720ad <- localmoran(join_df_wkd17_20_group$total_trips, knn1720_lw)\n#weekend/holiday morning peak \nlocalMI_1114ad <- localmoran(join_df_wknd11_14_group$total_trips, knn1114_lw)\n#weekend/holiday afternoon peak \nlocalMI_1619ad <- localmoran(join_df_wknd16_19_group$total_trips, knn1619_lw)\n\n\nThe code chunk below is used to compute the passenger volume at hexagon level.\n\nWeekday (0600-0900)Weekday (1700-2000)Weekends/Holidays (1100-1400)Weekends/Holidays (1600-1900)\n\n\n\nhead(localMI_0609ad)\n\n        Ii         E.Ii   Var.Ii     Z.Ii Pr(z != E(Ii))\n1 3.152419 -0.002143441 3.184279 1.767802     0.07709406\n2 3.154305 -0.002146380 3.188644 1.767649     0.07711954\n3 3.108213 -0.002147850 3.190828 1.741242     0.08164121\n4 3.137787 -0.002120731 3.150551 1.768983     0.07689676\n5 2.928987 -0.001873637 2.783555 1.756691     0.07897057\n6 3.103321 -0.002140748 3.180281 1.741380     0.08161704\n\n\n\n\n\nhead(localMI_1720ad)\n\n        Ii          E.Ii   Var.Ii     Z.Ii Pr(z != E(Ii))\n1 1.700003 -0.0011511528 1.712658 1.299895      0.1936368\n2 1.727508 -0.0011943067 1.776852 1.296864      0.1946778\n3 1.644804 -0.0011746696 1.747641 1.245083      0.2131013\n4 1.573339 -0.0009653196 1.436213 1.313648      0.1889645\n5 1.410563 -0.0008212796 1.221931 1.276797      0.2016738\n6 1.640923 -0.0011787531 1.753715 1.239997      0.2149766\n\n\n\n\n\nhead(localMI_1114ad)\n\n        Ii         E.Ii   Var.Ii     Z.Ii Pr(z != E(Ii))\n1 2.568884 -0.001774997 2.647692 1.579831      0.1141455\n2 2.560523 -0.001761759 2.627948 1.580589      0.1139720\n3 2.469920 -0.001759673 2.624838 1.525601      0.1271093\n4 2.505731 -0.001676576 2.500912 1.585535      0.1128449\n5 2.266525 -0.001438716 2.146165 1.548119      0.1215935\n6 2.443412 -0.001726468 2.575319 1.523659      0.1275938\n\n\n\n\n\nhead(localMI_1619ad)\n\n        Ii          E.Ii   Var.Ii     Z.Ii Pr(z != E(Ii))\n1 1.846640 -0.0012721723 1.885048 1.345923      0.1783275\n2 1.859088 -0.0012919427 1.914338 1.344597      0.1787553\n3 1.755175 -0.0012777331 1.893286 1.276522      0.2017710\n4 1.770061 -0.0011548255 1.711194 1.354010      0.1757332\n5 1.582794 -0.0009997195 1.481390 1.301260      0.1931696\n6 1.759842 -0.0012873668 1.907558 1.275124      0.2022654\n\n\n\n\n\n\n\n\n\n\n\nNote about localmoran()\n\n\n\n\n\nlocalmoran() returns a matrix of values whose columns are:\n\n“Ii” : the local Moran’s I statistics\n“E.Ii” : the expectation of local moran statistics under the randomisation hypothesis\n“Var.Ii” : the variance of local moran statistic under the randomisation hypothesis\n“Z.Ii” : the standard deviation of local moran statistic\n“Pr()” : the p-value of local moran statistic"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#mapping-the-local-morans-i",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#mapping-the-local-morans-i",
    "title": "Take Home Exercise 1",
    "section": "5.2 Mapping the local Moran’s I",
    "text": "5.2 Mapping the local Moran’s I\nNext, we will be using cbind() function to combine the local Moran’s dataframe (e.g., localMI_0609ad) with our existing spatial data frame (e.g. join_df_wkd6_9_group) before plotting.\n\n\nShow the code\n#weekday morning peak \njoin_df_wkd6_9_group.localMI_0609ad <- cbind(join_df_wkd6_9_group,localMI_0609ad) %>%\n  rename(Pr.Ii = Pr.z....E.Ii..)   #adaptive distance \n\n#weekday afternoon peak \n\njoin_df_wkd17_20_group.localMI_1720ad <- cbind(join_df_wkd17_20_group,localMI_1720ad) %>%\n  rename(Pr.Ii = Pr.z....E.Ii..)   #adaptive distance \n\n#weekend/holiday morning peak \n\njoin_df_wknd11_14_group.localMI_1114ad <- cbind(join_df_wknd11_14_group,localMI_1114ad) %>%\n  rename(Pr.Ii = Pr.z....E.Ii..)   #adaptive distance \n\n#weekend/holiday afternoon peak \n\njoin_df_wknd16_19_group.localMI_1619ad <- cbind(join_df_wknd16_19_group,localMI_1619ad) %>%\n  rename(Pr.Ii = Pr.z....E.Ii..)   #adaptive distance \n\n\n\n5.2.1 Mapping Local Moran’s I values and p-values\nUsing the choropleth mapping function from the tmap package, we will do a visualization for the Local Moran’s I values and its corresponding p-values.\n\nWeekday (0600-0900)Weekday (1700-2000)Weekends/Holidays (1100-1400)Weekends/Holidays (1600-1900)\n\n\n\n\nShow the code\nlocalMI_0609ad.map <- tm_shape(join_df_wkd6_9_group.localMI_0609ad) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          title = \"Local Moran I Statistics\") +\n  tm_borders(alpha = 0.3) + \n  tm_layout(main.title = \"Local Moran's I Map\",\n            main.title.size = 1,\n            main.title.position = \"center\",\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE)\n\npvalue_0609ad.map <- tm_shape(join_df_wkd6_9_group.localMI_0609ad) + \n                tm_fill(col = \"Pr.Ii\",\n                       breaks = c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n                       palette = \"-Blues\",\n                       title = \"Local Moran's I p-values\") + \n                tm_borders(alpha = 0.3)+ \n  tm_layout(main.title = \"Local Moran's I p-values Map\",\n            main.title.size = 1,\n            main.title.position = \"center\",\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE)\n\ntmap_arrange(localMI_0609ad.map, pvalue_0609ad.map, asp = 1, ncol = 2)\n\n\n\n\n\n\n\n\n\nShow the code\nlocalMI_1720ad.map <- tm_shape(join_df_wkd17_20_group.localMI_1720ad) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          title = \"Local Moran I Statistics\") +\n  tm_borders(alpha = 0.3) + \n  tm_layout(main.title = \"Local Moran's I Map\",\n            main.title.size = 1,\n            main.title.position = \"center\",\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE)\n\npvalue_1720ad.map <- tm_shape(join_df_wkd17_20_group.localMI_1720ad) + \n                tm_fill(col = \"Pr.Ii\",\n                       breaks = c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n                       palette = \"-Blues\",\n                       title = \"Local Moran's I p-values\") + \n                tm_borders(alpha = 0.3)+ \n  tm_layout(main.title = \"Local Moran's I p-values Map\",\n            main.title.size = 1,\n            main.title.position = \"center\",\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE)\n\ntmap_arrange(localMI_1720ad.map, pvalue_1720ad.map, asp = 1, ncol = 2)\n\n\n\n\n\n\n\n\n\nShow the code\nlocalMI_1114ad.map <- tm_shape(join_df_wknd11_14_group.localMI_1114ad) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          title = \"Local Moran I Statistics\") +\n  tm_borders(alpha = 0.3) + \n  tm_layout(main.title = \"Local Moran's I Map\",\n            main.title.size = 1,\n            main.title.position = \"center\",\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE)\n\npvalue_1114ad.map <- tm_shape(join_df_wknd11_14_group.localMI_1114ad) + \n                tm_fill(col = \"Pr.Ii\",\n                       breaks = c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n                       palette = \"-Blues\",\n                       title = \"Local Moran's I p-values\") + \n                tm_borders(alpha = 0.3)+ \n  tm_layout(main.title = \"Local Moran's I p-values Map\",\n            main.title.size = 1,\n            main.title.position = \"center\",\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE)\n\ntmap_arrange(localMI_1114ad.map, pvalue_1114ad.map, asp = 1, ncol = 2)\n\n\n\n\n\n\n\n\n\nShow the code\nlocalMI_1619ad.map <- tm_shape(join_df_wknd16_19_group.localMI_1619ad) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          title = \"Local Moran I Statistics\") +\n  tm_borders(alpha = 0.3) + \n  tm_layout(main.title = \"Local Moran's I Map\",\n            main.title.size = 1,\n            main.title.position = \"center\",\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE)\n\npvalue_1619ad.map <- tm_shape(join_df_wknd16_19_group.localMI_1619ad) + \n                tm_fill(col = \"Pr.Ii\",\n                       breaks = c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n                       palette = \"-Blues\",\n                       title = \"Local Moran's I p-values\") + \n                tm_borders(alpha = 0.3)+ \n  tm_layout(main.title = \"Local Moran's I p-values Map\",\n            main.title.size = 1,\n            main.title.position = \"center\",\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE)\n\ntmap_arrange(localMI_1619ad.map, pvalue_1619ad.map, asp = 1, ncol = 2)\n\n\n\n\n\n\n\n\nFrom the graphs above, we could see the gradient of the color that might not be that intuitive. Alternatively, we could look into the following section where we only retain grid that are statistically significant.\n\n5.2.1.1 Areas that are Statistically Significant\nFirst, we will filter out all the areas that are not statistically significant (p-value >=0.05), Then we will plot the base hexagon map and plot accordingly.\n\n\nShow the code\n#weekday morning peak (Adaptive)\n\njoin_df_wkd6_9_group.localMI_0609ad_sig <- join_df_wkd6_9_group.localMI_0609ad %>%\n  filter(Pr.Ii < 0.05)\n\nbase <- tm_shape(join_df_wkd6_9_group) + \n  tm_fill(col = 'gray98') + \n  tm_borders(alpha = 0.3)\n\nlocalMI_0609sig_ad.map <- base + \n  tm_shape(join_df_wkd6_9_group.localMI_0609ad_sig) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          title = \"Local Moran I Statistics\") +\n  tm_borders(alpha = 0.3) + \n  tm_layout(main.title = \"Local Moran's I (Sig.) Map \\n (Weekday Morning)\",\n            main.title.size = 1,\n            main.title.position = \"center\",\n            legend.height = 0.35, \n            legend.width = 0.35,\n            frame = TRUE)\n\n#weekday afternoon peak \njoin_df_wkd17_20_group.localMI_1720ad_sig <- join_df_wkd17_20_group.localMI_1720ad%>%\n  filter(Pr.Ii < 0.05)\n\nbase <- tm_shape(join_df_wkd17_20_group) + \n  tm_fill(col = 'gray98') + \n  tm_borders(alpha = 0.3)\n\nlocalMI_1720sig_ad.map <- base + \n  tm_shape(join_df_wkd17_20_group.localMI_1720ad_sig) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          title = \"Local Moran I Statistics\") +\n  tm_borders(alpha = 0.3) + \n  tm_layout(main.title = \"Local Moran's I (Sig.) Map \\n (Weekday Afternoon)\",\n            main.title.size = 1,\n            main.title.position = \"center\",\n            legend.height = 0.35, \n            legend.width = 0.35,\n            frame = TRUE)\n\n#weekends/holiday morning peak \njoin_df_wknd11_14_group.localMI_1114ad_sig <- join_df_wknd11_14_group.localMI_1114ad%>%\n  filter(Pr.Ii < 0.05)\n\nbase <- tm_shape(join_df_wknd11_14_group) + \n  tm_fill(col = 'gray98') + \n  tm_borders(alpha = 0.3)\n\nlocalMI_1114sig_ad.map <- base + \n  tm_shape(join_df_wknd11_14_group.localMI_1114ad_sig) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          title = \"Local Moran I Statistics\") +\n  tm_borders(alpha = 0.3) + \n  tm_layout(main.title = \"Local Moran's I (Sig.) Map \\n (Weekends/Holidays Morning)\",\n            main.title.size = 1,\n            main.title.position = \"center\",\n            legend.height = 0.35, \n            legend.width = 0.35,\n            frame = TRUE)\n\n#weekends/holiday afternoon peak \njoin_df_wknd16_19_group.localMI_1619ad_sig <- join_df_wknd16_19_group.localMI_1619ad%>%\n  filter(Pr.Ii < 0.05)\n\nbase <- tm_shape(join_df_wknd16_19_group) + \n  tm_fill(col = 'gray98') + \n  tm_borders(alpha = 0.3)\n\nlocalMI_1619sig_ad.map <- base + \n  tm_shape(join_df_wknd16_19_group.localMI_1619ad_sig) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          title = \"Local Moran I Statistics\") +\n  tm_borders(alpha = 0.3) + \n  tm_layout(main.title = \"Local Moran's I (Sig.) Map \\n (Weekends/Holidays Afternoon)\",\n            main.title.size = 1,\n            main.title.position = \"center\",\n            legend.height = 0.35, \n            legend.width = 0.35,\n            frame = TRUE)\n\ntmap_arrange(localMI_0609sig_ad.map,localMI_1720sig_ad.map,\n             localMI_1114sig_ad.map, localMI_1619sig_ad.map,\n            ncol = 2)\n\n\n\n\n\nAs iterated earlier, a positive value indicates a cluster while a negative value indicates an outlier. From the maps above, we can see that most regions are orange in color which correspond to a negative value. We could see that there are multiple outliers instead of a cluster, inferring that there are more popular bus stops at various part of Singapore."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#moran-scatterplot",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#moran-scatterplot",
    "title": "Take Home Exercise 1",
    "section": "5.3 Moran Scatterplot",
    "text": "5.3 Moran Scatterplot\nAfter identifying the cluster and outlier, we are going to plot the scatterplot using the variables above. First, we will calculate the scaled attribute and the lagged scaled attribute using the scale() function and lag.listw() function.\n\n\nShow the code\nDV0609ad <- scale(join_df_wkd6_9_group.localMI_0609ad$total_trips) %>%\n  as.vector \nDV1720ad <- scale(join_df_wkd17_20_group.localMI_1720ad$total_trips) %>%\n  as.vector\nDV1114ad <- scale(join_df_wknd11_14_group.localMI_1114ad$total_trips) %>%\n  as.vector\nDV1619ad <- scale(join_df_wknd16_19_group.localMI_1619ad$total_trips) %>%\n  as.vector\n\n\nWe will plot the Moran scatterplot using the standardised values and moran.plot() of spdep.\n\nWeekday (0600-0900)Weekday (1700-2000)Weekends/Holidays (1100-1400)Weekends/Holidays (1600-1900)\n\n\n\n\nShow the code\nnci_0609 <- moran.plot(DV0609ad, knn0609_lw,\n                  labels = as.character(join_df_wkd6_9_group$grid_id),\n                  xlab = \"Weekday Morning Peak\",\n                  ylab = \"Spatially Lag Weekday Morning Peak\")\n\n\n\n\n\n\n\n\n\nShow the code\nnci_1720 <- moran.plot(DV1720ad, knn1720_lw,\n                  labels = as.character(join_df_wkd17_20_group$grid_id),\n                  xlab = \"Weekday Afternoon Peak\",\n                  ylab = \"Spatially Lag Weekday Afternoon Peak\")\n\n\n\n\n\n\n\n\n\nShow the code\nnci_1114 <- moran.plot(DV1114ad, knn1114_lw,\n                  labels = as.character(join_df_wknd11_14_group$grid_id),\n                  xlab = \"Weekends/Holidays Morning Peak\",\n                  ylab = \"Spatially Lag Weekends/Holidays Morning Peak\")\n\n\n\n\n\n\n\n\n\nShow the code\nnci_1619 <- moran.plot(DV1619ad, knn1619_lw,\n                  labels = as.character(join_df_wknd16_19_group$grid_id),\n                  xlab = \"Weekends/Holidays Afternoon Peak\",\n                  ylab = \"Spatially Lag Weekends/Holidays Afternoon Peak\")\n\n\n\n\n\n\n\n\nFrom the figures above, we note that there are a huge number of grids in the scatterplot for us to draw any statistical conclusion. However, we observe that most of the points are scattered to the left.\n\nNotably, there are four quadrants in the Moran Scatterplot:\n\n“High-High” - Top right corner : Positive Autocorrelation Cluster.\n“Low-High” - Top left corner: Negative Autocorrelation Cluster.\n“High-Low” - Bottom right corner: Negative Autocorrelation Cluster.\n“Low-Low” - Bottom left corner : Positive Autocorrelation Cluster.\n\nUnfortunately, we are not able to determine which points/regions are significant. Therefore, we could look into the LISA Cluster Maps."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#lisa-cluster-maps",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#lisa-cluster-maps",
    "title": "Take Home Exercise 1",
    "section": "5.4 LISA Cluster Maps",
    "text": "5.4 LISA Cluster Maps\nThe LISA Cluster Maps is able to significant location color coded by type of spatial autocorrelation.\n\nWeekday (0600-0900)Weekday (1700-2000)Weekends/Holidays (1100-1400)Weekends/Holidays (1600-1900)\n\n\nWe will retrieve the quadrant for each area based on the following criteria and place non-significant Moran (p-value that are <0.05) as 0.\n\n\nShow the code\n#weekday morning peak \n#Step 1\nquadrant <- vector(mode = 'numeric', length = nrow(localMI_0609ad))\n#Step 2\njoin_df_wkd6_9_group$lag <- lag.listw(knn0609_lw,join_df_wkd6_9_group$total_trips)\nDV_0609 <- join_df_wkd6_9_group$lag - mean(join_df_wkd6_9_group$lag)\n#Step 3\nLM_I_0609 <- localMI_0609ad[,1] \n#Step 4\nsignif <- 0.05\n#Step 5\nquadrant[DV_0609 <0 & LM_I_0609>0] <- 1 #low-low\nquadrant[DV_0609 >0 & LM_I_0609<0] <- 2 #high-low\nquadrant[DV_0609 <0 & LM_I_0609<0] <- 3 #low-high\nquadrant[DV_0609 >0 & LM_I_0609>0] <- 4 #high-high\n#Step 6\nquadrant[localMI_0609ad[,5]>signif] <- 0\n\n\nAfter running the code chunk above, we will plot the LISA map using tmap.\n\n\nShow the code\n#weekday morning peak \n#Assign each region  to its respective quardrant\njoin_df_wkd6_9_group.localMI_0609ad$quadrant <- quadrant\n\n#Set the colours--one for each quadrant\ncolors <- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\") \n\nclusters <- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\nLISAmap_0609 <- tm_shape(join_df_wkd6_9_group.localMI_0609ad) + \n  tm_fill(col = \"quadrant\",\n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1],\n          labels = clusters[c(sort(unique(quadrant)))+1])  + \n  tm_borders(alpha = 0.3) + \n  tm_layout(main.title = \"LISA Cluster Map \\n (Weekday Morning) \",\n            main.title.size = 1,\n            main.title.position = \"center\",\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE)\n\n\n\n\nWe will retrieve the quadrant for each area based on the following criteria and place non-significant Moran (p-value that are <0.05) as 0.\n\n\nShow the code\n#weekday afternoon peak \n#Step 1\nquadrant <- vector(mode = 'numeric', length = nrow(localMI_1720ad))\n#Step 2\njoin_df_wkd17_20_group$lag <- lag.listw(knn1720_lw,join_df_wkd17_20_group$total_trips)\nDV_1720 <- join_df_wkd17_20_group$lag - mean(join_df_wkd17_20_group$lag)\n#Step 3\nLM_I_1720 <- localMI_1720ad[,1] \n#Step 4\nsignif <- 0.05\n#Step 5\nquadrant[DV_1720 <0 & LM_I_1720>0] <- 1 #low-low\nquadrant[DV_1720 >0 & LM_I_1720<0] <- 2 #high-low\nquadrant[DV_1720 <0 & LM_I_1720<0] <- 3 #low-high\nquadrant[DV_1720 >0 & LM_I_1720>0] <- 4 #high-high\n#Step 6\nquadrant[localMI_1720ad[,5]>signif] <- 0\n\n\nAfter running the code chunk above, we will plot the LISA map using tmap.\n\n\nShow the code\n#weekday morning peak \n#Assign each region  to its respective quardrant\njoin_df_wkd17_20_group.localMI_1720ad$quadrant <- quadrant\n\n#Set the colours--one for each quadrant\ncolors <- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\") \n\nclusters <- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\nLISAmap_1720 <- tm_shape(join_df_wkd17_20_group.localMI_1720ad) + \n  tm_fill(col = \"quadrant\",\n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1],\n          labels = clusters[c(sort(unique(quadrant)))+1])  + \n  tm_borders(alpha = 0.3) + \n  tm_layout(main.title = \"LISA Cluster Map \\n (Weekday Afternoon) \",\n            main.title.size = 1,\n            main.title.position = \"center\",\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE)\n\n\n\n\nWe will retrieve the quadrant for each area based on the following criteria and place non-significant Moran (p-value that are <0.05) as 0.\n\n\nShow the code\n#weekends/holidays morning peak \n#Step 1\nquadrant <- vector(mode = 'numeric', length = nrow(localMI_1114ad))\n#Step 2\njoin_df_wknd11_14_group$lag <- lag.listw(knn1114_lw,join_df_wknd11_14_group$total_trips)\nDV_1114<- join_df_wknd11_14_group$lag - mean(join_df_wknd11_14_group$lag)\n#Step 3\nLM_I_1114 <- localMI_1114ad[,1] \n#Step 4\nsignif <- 0.05\n#Step 5\nquadrant[DV_1114 <0 & LM_I_1114>0] <- 1 #low-low\nquadrant[DV_1114 >0 & LM_I_1114<0] <- 2 #high-low\nquadrant[DV_1114 <0 & LM_I_1114<0] <- 3 #low-high\nquadrant[DV_1114 >0 & LM_I_1114>0] <- 4 #high-high\n#Step 6\nquadrant[localMI_1114ad[,5]>signif] <- 0\n\n\nAfter running the code chunk above, we will plot the LISA map using tmap.\n\n\nShow the code\n#weekends/holiday morning peak \n#Assign each region  to its respective quardrant\njoin_df_wknd11_14_group.localMI_1114ad$quadrant <- quadrant\n\n#Set the colours--one for each quadrant\ncolors <- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\") \n\nclusters <- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\nLISAmap_1114 <- tm_shape(join_df_wknd11_14_group.localMI_1114ad) + \n  tm_fill(col = \"quadrant\",\n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1],\n          labels = clusters[c(sort(unique(quadrant)))+1])  + \n  tm_borders(alpha = 0.3) + \n  tm_layout(main.title = \"LISA Cluster Map \\n (Weekends/Holidays Morning) \",\n            main.title.size = 1,\n            main.title.position = \"center\",\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE)\n\n\n\n\nWe will retrieve the quadrant for each area based on the following criteria and place non-significant Moran (p-value that are <0.05) as 0.\n\n\nShow the code\n#weekends/holidays afternoon peak \n#Step 1\nquadrant <- vector(mode = 'numeric', length = nrow(localMI_1619ad))\n#Step 2\njoin_df_wknd16_19_group$lag <- lag.listw(knn1619_lw,join_df_wknd16_19_group$total_trips)\nDV_1619<- join_df_wknd16_19_group$lag - mean(join_df_wknd16_19_group$lag)\n#Step 3\nLM_I_1619 <- localMI_1619ad[,1] \n#Step 4\nsignif <- 0.05\n#Step 5\nquadrant[DV_1619 <0 & LM_I_1619>0] <- 1 #low-low\nquadrant[DV_1619 >0 & LM_I_1619<0] <- 2 #high-low\nquadrant[DV_1619 <0 & LM_I_1619<0] <- 3 #low-high\nquadrant[DV_1619 >0 & LM_I_1619>0] <- 4 #high-high\n#Step 6\nquadrant[localMI_1619ad[,5]>signif] <- 0\n\n\nAfter running the code chunk above, we will plot the LISA map using tmap.\n\n\nShow the code\n#weekends/holiday morning peak \n#Assign each region  to its respective quardrant\njoin_df_wknd16_19_group.localMI_1619ad$quadrant <- quadrant\n\n#Set the colours--one for each quadrant\ncolors <- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\") \n\nclusters <- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\nLISAmap_1619 <- tm_shape(join_df_wknd16_19_group.localMI_1619ad) + \n  tm_fill(col = \"quadrant\",\n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1],\n          labels = clusters[c(sort(unique(quadrant)))+1])  + \n  tm_borders(alpha = 0.3) + \n  tm_layout(main.title = \"LISA Cluster Map \\n (Weekends/Holidays Morning) \",\n            main.title.size = 1,\n            main.title.position = \"center\",\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE)\n\n\n\n\n\nWe will be using tmap_arrange() to plot the LISA Cluster Map based on commuting flow.\n\n\nShow the code\ntmap_arrange(LISAmap_0609, LISAmap_1720,\n  LISAmap_1114, LISAmap_1619, ncol =2)\n\n\n\n\n\nWe observed that majority of the quadrant are insignificant, while most falls to Low-High and High-High. For Weekdays, there are more High-High (in red), suggesting a cluster. We could infer that the bus stops in the route are popular due to the service it provides - i.e, feeder bus. There are not much differences during the weekends. However, it is important to monitor the Low-High area.\nThereafter, we do a comparison to see between Local Moran’s I and Lisa Cluster Map. by plotting them together. We would be able to observe the similarity between the shades regions.\n\n\nShow the code\ntmap_arrange(localMI_0609sig_ad.map, LISAmap_0609, \n             localMI_1720sig_ad.map, LISAmap_1720,\n             ncol =2)\n\n\n\n\n\n\n\nShow the code\ntmap_arrange(localMI_1114sig_ad.map, LISAmap_1114, \n             localMI_1619sig_ad.map, LISAmap_1619, \n             ncol =2)\n\n\n\n\n\nThere are multiple high high cluster areas. This regions in the grid have neighbors with similar volume in terms of passenger trips, with the largest cluster in the southern region."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/data/geospatial/MPSZ-2019.html",
    "href": "Take-Home_Ex/Take-Home_Ex01/data/geospatial/MPSZ-2019.html",
    "title": "",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html",
    "title": "Take Home Exercise 2",
    "section": "",
    "text": "As city-wide urban infrastructures such as public bus, mass rapid transits, public utilities and roads become digital, data sets obtained could be used as a framework for tracking movement patterns through space and time.\n\n\nThis exercise aims to reveals the urban mobility patterns of public bus transit through geospatial data science and analysis (GDSA), and spatial interaction models. ars The original data was downloaded on 18th November 2023 from LTA DataMall under Section 2.6 - Passenger Volume by Origin Destination Bus Stops. It records the number of trips by weekdays and weekends from origin to destination bus stops. For the purpose of this exercise, we will be using the August data - origin_destination_bus_202308.csv for Weekday Morning Peak (6-9am)."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#install-r-packages",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#install-r-packages",
    "title": "Take Home Exercise 2",
    "section": "2.1 Install R packages",
    "text": "2.1 Install R packages\nThe code chunk below uses pacman:: p_load() to load and install the following libraries:\n\nperformance : Used for computing measures to access model quality that are not directly provided by R’s ‘base’ or ‘stats’ packages.\nreshape2 : Used to restructure and aggregate data\nsf : Used for geospatial data handling\nspdep : Used to create spatial weights matrix objects\nsfdep : Used to integrate with 'sf' objects and the 'tidyverse'\ntidyverse: A collection of R packages use in everyday data analyses. It is able to support data science, data wrangling, and analysis\ntmap : Used for thematic mapping where spatial data distributions are visualized.\n\n\npacman::p_load(ggpubr, performance, reshape2, sp, \n               sf, spdep, sfdep, stplanr, tidyverse, tmap)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#import-and-load-dataset",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#import-and-load-dataset",
    "title": "Take Home Exercise 2",
    "section": "2.2 Import and Load Dataset",
    "text": "2.2 Import and Load Dataset\nFor the purpose of this exercise, we will be using three data sets.\n\norigin_destination_bus_202308.csv : A csv file containing information about all the bus stops currently being serviced by bus, which includes bus stop identifier, and location coordinates.\nBus Stop Location . A geospatial file retrieved from LTA DataMall\nMaster Plan 2019 Subzone Boundary : A polygon feature layer in ESRI shapefile format.\n\n\n2.2.1 Importing Aspatial data\nFirst, we will import the Passenger Volume by Origin Destination Bus Stops data set for August by using readr::read_csv() and store it in variable odbus. Also, we will be using glimpse() report to reveal the data type of each field.\nPoint to note: ORIGIN_PT_CODE and DESTINATION_PT_CODE are in <chr> format.\n\n\nShow the code\nodbus <- read_csv(\"data/aspatial/origin_destination_bus_202308.csv\")\nglimpse(odbus)\n\n\nRows: 5,709,512\nColumns: 7\n$ YEAR_MONTH          <chr> \"2023-08\", \"2023-08\", \"2023-08\", \"2023-08\", \"2023-…\n$ DAY_TYPE            <chr> \"WEEKDAY\", \"WEEKENDS/HOLIDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       <dbl> 16, 16, 14, 14, 17, 17, 17, 17, 7, 17, 14, 10, 10,…\n$ PT_TYPE             <chr> \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      <chr> \"04168\", \"04168\", \"80119\", \"80119\", \"44069\", \"4406…\n$ DESTINATION_PT_CODE <chr> \"10051\", \"10051\", \"90079\", \"90079\", \"17229\", \"1722…\n$ TOTAL_TRIPS         <dbl> 7, 2, 3, 10, 5, 4, 3, 22, 3, 3, 7, 1, 3, 1, 3, 1, …\n\n\n\n\n2.2.2 Importing Geospatial data\nThereafter, we will import the Bus Stops Location and Master Plan 2019 Subzone Boundary.\n\n2.2.2.1 Import Bus Stop data\nWe will be using sf::st_read() to import and sf::st_transform() to ensure that the projected coordinate system is in the right format before storing in variable busstop.\n\nbusstop <- st_read(dsn = \"data/geospatial\",layer = \"BusStop\") %>%\n    st_transform(crs = 3414)\n\nReading layer `BusStop' from data source \n  `/Users/smu/Rworkshop/jiawenoh/ISSS624/Take-Home_Ex/Take-Home_Ex02/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\n\nAlso, we will be using glimpse() report to reveal the data type of each field.\n\nglimpse(busstop)\n\nRows: 5,161\nColumns: 4\n$ BUS_STOP_N <chr> \"22069\", \"32071\", \"44331\", \"96081\", \"11561\", \"66191\", \"2338…\n$ BUS_ROOF_N <chr> \"B06\", \"B23\", \"B01\", \"B05\", \"B05\", \"B03\", \"B02A\", \"B02\", \"B…\n$ LOC_DESC   <chr> \"OPP CEVA LOGISTICS\", \"AFT TRACK 13\", \"BLK 239\", \"GRACE IND…\n$ geometry   <POINT [m]> POINT (13576.31 32883.65), POINT (13228.59 44206.38),…\n\n\n\n\n2.2.2.2 Import MPSZ data\nSimilarily, we used sf::st_read() to import and sf::st_transform() to ensure that the projected coordinate system is in the right format before storing in variable mpsz.\n\nmpsz <- st_read(dsn = \"data/geospatial\",\n                   layer = \"MPSZ-2019\") %>%\n  st_transform(crs = 3414)\n\nReading layer `MPSZ-2019' from data source \n  `/Users/smu/Rworkshop/jiawenoh/ISSS624/Take-Home_Ex/Take-Home_Ex02/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\nWe will be using glimpse() report to reveal the data type of each field\n\nglimpse(mpsz)\n\nRows: 332\nColumns: 7\n$ SUBZONE_N  <chr> \"MARINA EAST\", \"INSTITUTION HILL\", \"ROBERTSON QUAY\", \"JURON…\n$ SUBZONE_C  <chr> \"MESZ01\", \"RVSZ05\", \"SRSZ01\", \"WISZ01\", \"MUSZ02\", \"MPSZ05\",…\n$ PLN_AREA_N <chr> \"MARINA EAST\", \"RIVER VALLEY\", \"SINGAPORE RIVER\", \"WESTERN …\n$ PLN_AREA_C <chr> \"ME\", \"RV\", \"SR\", \"WI\", \"MU\", \"MP\", \"WI\", \"WI\", \"SI\", \"SI\",…\n$ REGION_N   <chr> \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"WEST…\n$ REGION_C   <chr> \"CR\", \"CR\", \"CR\", \"WR\", \"CR\", \"CR\", \"WR\", \"WR\", \"CR\", \"CR\",…\n$ geometry   <MULTIPOLYGON [m]> MULTIPOLYGON (((33222.98 29..., MULTIPOLYGON (…"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#data-wrangling",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#data-wrangling",
    "title": "Take Home Exercise 2",
    "section": "2.3 Data Wrangling",
    "text": "2.3 Data Wrangling\nLooking at section 2.2.1, we noticed a few problem:\n\nORIGIN_PT_CODE : is in <chr> format\nDESTINATION_PT_CODE : is in <chr> format\n\nWe will be using dplyr::mutate() to convert the <chr> data type to <fct> and store it in a new variable odbus_new.\n\n\nShow the code\nodbus_new <- odbus %>%\n mutate(ORIGIN_PT_CODE = as.factor(ORIGIN_PT_CODE),\n        DESTINATION_PT_CODE = as.factor(DESTINATION_PT_CODE))\n\nglimpse(odbus_new)\n\n\nRows: 5,709,512\nColumns: 7\n$ YEAR_MONTH          <chr> \"2023-08\", \"2023-08\", \"2023-08\", \"2023-08\", \"2023-…\n$ DAY_TYPE            <chr> \"WEEKDAY\", \"WEEKENDS/HOLIDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       <dbl> 16, 16, 14, 14, 17, 17, 17, 17, 7, 17, 14, 10, 10,…\n$ PT_TYPE             <chr> \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      <fct> 04168, 04168, 80119, 80119, 44069, 44069, 20281, 2…\n$ DESTINATION_PT_CODE <fct> 10051, 10051, 90079, 90079, 17229, 17229, 20141, 2…\n$ TOTAL_TRIPS         <dbl> 7, 2, 3, 10, 5, 4, 3, 22, 3, 3, 7, 1, 3, 1, 3, 1, …\n\n\nAdditionally, we confirmed that there are no missing values in the odbus_new data set.\n\nany(is.na(odbus_new))\n\n[1] FALSE\n\n\n\n2.3.1 Data Extraction\n\n2.3.1.1 Analytical Hexagon\nTo get a better representative of the traffic analysis zone (TAZ), we will create an analytical hexagon grid. With reference from Urban Data Palette, we will used the code chunk below and execute in the following sequence:\n\nst_make_grid() : create a regular grid of spatial polygons. To reflect the distance from centre of the hexagon to its edge (375m), we will revise the cell width and height to c(750,750) to reflect the full diameter.\nst_sf() : convert the honeycomb grid object to an sf object. We used [mpsz$geometry] to identify hexagon grid that intersects.\nrowid_to_column() : add rowid as a column. Values in this column are the row IDs of each grid cell.\nlengths(st_intersects()) : assigns the number of bus stops for each cell to a new column named ‘bus_stops’ in hex_grid. st_intersects() checks for intersections between two spatial objects.\nas.factor() : to coverts the ‘grid_id’ column from<int> to <fct>\ntmap_options(check.and.fix = TRUE) : forcing the polygons to be closed\ntm_shape() + tm_polygons() : plot the honeycomb grid cells as polygons\n\n\n\nShow the code\n#create regular grid \nhoneycomb = st_make_grid(mpsz,c(750,750),what = \"polygons\", square = FALSE)\n\n#convert our honeycomb grid into an sf object and add rowid\nhex_grid <- st_sf(honeycomb[mpsz$geometry]) %>%\n  rowid_to_column('grid_id')\n\n#add no. of bus stops into hex_grid data frame\nhex_grid$bus_stops = lengths(st_intersects(hex_grid, busstop))\n\n#convert grid_id from int to fct \nhex_grid$grid_id <- as.factor(hex_grid$grid_id)\n\n#plotting of Master Plan 2019 Subzone Boundary in analytical hexagon\ntmap_options(check.and.fix = TRUE) #force close polygon \ntm_shape(hex_grid) +\n  tm_polygons() +\n tm_layout(main.title = \"Analytical Hexagon Grid\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\ntm_borders(alpha = 0.3)\n\n\n\n\n\n\n\n2.3.1.2 Commuting Flow\nThrough the previous exercise in Take Home Exercise 1, we were able to have a better understanding of the commuting flows. We noticed that the Peak hour period for Weekdays were generally higher as compared to Weekends, which we believe, could bring us more insights. As such, we will focus on our commuting flow at Weekday Morning Peak (6-9am).\nThe code is extracted in the following sequence:\n\nfilter() is used to extract subset of data for the DAY_TYPE and TIME_PER_HOUR\nbetween() is used to express a range condition for the TIME_PER_HOUR\ngroup_by() is used to grouped data. In our code, we will be grouping it based on ORIGIN_PT_CODE and DESTINATION_PT_CODE\nsummarise() is used to sum the total number of trips\narrange(desc()) is used to sort in descending order\nungroup() is used to end a definition, often use with group_by()\n\nThereafter, we will save a copy of the output in rds format called wkd6_9.\n\n\nShow the code\nwkd6_9 <- odbus_new %>%\n  filter(DAY_TYPE == \"WEEKDAY\",\n         between(TIME_PER_HOUR, 6, 9)) %>%\n  group_by(ORIGIN_PT_CODE, DESTINATION_PT_CODE) %>%\n  summarise(TRIPS = sum(TOTAL_TRIPS)) %>%\n  arrange(desc(TRIPS)) %>%\n  ungroup()\n\n#save a copy in RDS format \nwrite_rds(wkd6_9, \"data/rds/wkd6_9.rds\")\n\n\nAs we are not executing the code chunk above, we will load wkd6_9 into the R environment.\n\nwkd6_9 <- read_rds(\"data/rds/wkd6_9.rds\")\n\n\n\n2.3.1.3 Visualing bus stops in hexagon grid\nAfter importing the bus stop location in Section 2.2.2.1, we will create a visualization to observe the number of bus stops in each hexagon grid (grid_id). To get a better contrast, we incorporated RcolorBrewer into our code by adding a purple palette.\n\n\nShow the code\n#plot bus stop counts on hexagon layer \n  tm_shape(hex_grid) +\n  tm_fill(col = \"bus_stops\",palette = \"Purples\") +\n  tm_layout(main.title = \"Number of Bus Stops in Hexagon Grid\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha =0.3)\n\n\n\n\n\nOn average, we could see that most of the hexagon grids contain 6 to 10 bus stops with lesser dark colors hexagon grid as the data value increases. With the use of hexagon, we are able to identify the nearest neighbor by their common boundaries, infer that there might be some degree of influence as the colors does not differ significantly.\n\n\n\n\n\n\nMore about Tmap Packages\n\n\n\n\n\n\ntm_shape() + Base Layer : Main plotting method. Used to specify a shape object.\n\n-   Base Layer includes:\n\n    -   `tm_polygons()`  - Create a polygon later (with borders)\n\n    -   `tm_symbols()`  - Create a layer of symbols\n\n    -    `tm_lines()`  - Create a layer of lines\n\n    -    `tm_raster()`  - Create a raster layer\n\n    -    `tm_text()`  - Create a layer of text labels\n\n    -   `tm_basemap()`  - Create a layer of basemap tiles\n\n    -   `tm_tiles()`  - Create a layer of overlay tiles\n\nAesthetics derived layers, which includes:\n\n-   `tm_fill()` :  - Create a polygon layer (without borders)\n\n-   `tm_borders()` :  - Create a polygon borders\n\n-   `tm_bubbles()` :  - Create a layer of bubbles\n\n-   `tm_squares()` :  - Create a layer of squares\n\n-   `tm_dots()` :  - Create a layer of dots\n\n-   `tm_markers()` :  - Create a layer of markers\n\n-   `tm_iso()` :  - Create a layer of iso/contour lines\n\n-   `tm_rgb()` :  - Create a raster layer of an image\n\nFacets\nAttributes\nLayout elements\nTmap_mode\n\nFor more information, click here."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#data-integration",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#data-integration",
    "title": "Take Home Exercise 2",
    "section": "3. Data Integration",
    "text": "3. Data Integration\n\n3.1 Importing Collected Data\nWe map it by the hexagon grid with bus stop + commuting flow + various collected data.\n\nBusinessEntertainmentF&BFinancial ServiceHDBLeisure & RecreationRetailSchool\n\n\n\n\nShow the code\nbusiness_sf <- st_read(dsn = \"data/geospatial\",\n                      layer = \"Business\") %>%\n      st_transform(crs = 3414)\n\n\nReading layer `Business' from data source \n  `/Users/smu/Rworkshop/jiawenoh/ISSS624/Take-Home_Ex/Take-Home_Ex02/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 6550 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3669.148 ymin: 25408.41 xmax: 47034.83 ymax: 50148.54\nProjected CRS: SVY21 / Singapore TM\n\n\nShow the code\n#plotting point symbol map with analytical hexagon grid\ntmap_options(check.and.fix = TRUE)\ntm_shape(hex_grid) +\n  tm_fill(col = \"bus_stops\",palette = \"Purples\") +\ntm_borders(alpha = 0.3) +\n  flowLine %>%\n    filter(MORNING_PEAK >= 1000) %>%\ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           col = \"purple\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.8) +\n    tm_layout(main.title = \"Commuting flow of \\n passengers with >1,000 trips\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\ntm_shape(business_sf) +\n  tm_dots(col = \"lightblue\") +\n  tm_layout(main.title = \"Business Spot\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) \n\n\n\n\n\n\n\n\n\nShow the code\nentertn_sf <- st_read(dsn = \"data/geospatial\",\n                      layer = \"entertn\") %>%\n      st_transform(crs = 3414)\n\n\nReading layer `entertn' from data source \n  `/Users/smu/Rworkshop/jiawenoh/ISSS624/Take-Home_Ex/Take-Home_Ex02/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 114 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 10809.34 ymin: 26528.63 xmax: 41600.62 ymax: 46375.77\nProjected CRS: SVY21 / Singapore TM\n\n\nShow the code\n#plotting point symbol map with analytical hexagon grid\ntmap_options(check.and.fix = TRUE)\ntm_shape(hex_grid) +\n  tm_fill(col = \"bus_stops\",palette = \"Purples\") +\ntm_borders(alpha = 0.3) +\n    flowLine %>%\n    filter(MORNING_PEAK >= 1000) %>%\ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           col = \"purple\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.8) +\n    tm_layout(main.title = \"Commuting flow of \\n passengers with >1,000 trips\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\ntm_shape(entertn_sf) +\n  tm_dots(col = \"lightblue\") +\n  tm_layout(main.title = \"Entertainment Spot\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) \n\n\n\n\n\n\n\n\n\nShow the code\nfnb_sf <- st_read(dsn = \"data/geospatial\",\n                      layer = \"F&B\") %>%\n      st_transform(crs = 3414)\n\n\nReading layer `F&B' from data source \n  `/Users/smu/Rworkshop/jiawenoh/ISSS624/Take-Home_Ex/Take-Home_Ex02/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1919 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 6010.495 ymin: 25343.27 xmax: 45462.43 ymax: 48796.21\nProjected CRS: SVY21 / Singapore TM\n\n\nShow the code\n#plotting point symbol map with analytical hexagon grid\ntmap_options(check.and.fix = TRUE)\ntm_shape(hex_grid) +\n  tm_fill(col = \"bus_stops\",palette = \"Purples\") +\ntm_borders(alpha = 0.3) +\n    flowLine %>%\n    filter(MORNING_PEAK >= 1000) %>%\ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           col = \"purple\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.8) +\n    tm_layout(main.title = \"Commuting flow of \\n passengers with >1,000 trips\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\ntm_shape(fnb_sf) +\n  tm_dots(col = \"lightblue\") +\n  tm_layout(main.title = \"Food and Beverages Spot\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) \n\n\n\n\n\n\n\n\n\nShow the code\nfinserv_sf <- st_read(dsn = \"data/geospatial\",\n                      layer = \"FinServ\") %>%\n      st_transform(crs = 3414)\n\n\nReading layer `FinServ' from data source \n  `/Users/smu/Rworkshop/jiawenoh/ISSS624/Take-Home_Ex/Take-Home_Ex02/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 3320 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 4881.527 ymin: 25171.88 xmax: 46526.16 ymax: 49338.02\nProjected CRS: SVY21 / Singapore TM\n\n\nShow the code\n#plotting point symbol map with analytical hexagon grid\ntmap_options(check.and.fix = TRUE)\ntm_shape(hex_grid) +\n  tm_fill(col = \"bus_stops\",palette = \"Purples\") +\ntm_borders(alpha = 0.3) +\n    flowLine %>%\n    filter(MORNING_PEAK >= 1000) %>%\ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           col = \"purple\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.8) +\n    tm_layout(main.title = \"Commuting flow of \\n passengers with >1,000 trips\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\ntm_shape(finserv_sf) +\n  tm_dots(col = \"lightblue\") +\n  tm_layout(main.title = \"Financial Service Spot\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) \n\n\n\n\n\n\n\nnote that some residential area have commercial etc, would be a mixed development but we will include it in our analysis.\n\n\nShow the code\n#import hdb.csv and tidy data \nhdb <- read_csv(\"data/aspatial/hdb.csv\") %>%\n  rename(latitude = \"lat\",\n         longitude = \"lng\") %>%\n  filter(residential == \"Y\") \n\n#converting an aspatial data into sf tibble data.frame\nhdb_sf <- st_as_sf(hdb, \n                       coords = c(\"longitude\", \"latitude\"),\n                       crs=4326) %>%\n  st_transform(crs = 3414)\n\n#identify intersection between hdb and hex_grid to compute total_dwelling units \nhdb_sf_sum <- st_intersection(hdb_sf, hex_grid) %>%\n  group_by(grid_id) %>%\n  summarise(\n    HDB_SUM = sum(total_dwelling_units)\n  ) %>%\n  ungroup() \n\n#plotting point symbol map with analytical hexagon grid\ntmap_options(check.and.fix = TRUE)\ntm_shape(hex_grid) +\n  tm_fill(col = \"bus_stops\",palette = \"Purples\") +\ntm_borders(alpha = 0.3) +\n    flowLine %>%\n    filter(MORNING_PEAK >= 1000) %>%\ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           col = \"purple\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.8) +\n    tm_layout(main.title = \"Commuting flow of \\n passengers with >1,000 trips\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\ntm_shape(hdb_sf_sum) +\n  tm_dots(col = \"lightblue\") +\n  tm_layout(main.title = \"HDB Spot\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) \n\n\n\n\n\n\n\n\n\nShow the code\nlnr_sf <- st_read(dsn = \"data/geospatial\",\n                      layer = \"Liesure&Recreation\") %>%\n      st_transform(crs = 3414)\n\n\nReading layer `Liesure&Recreation' from data source \n  `/Users/smu/Rworkshop/jiawenoh/ISSS624/Take-Home_Ex/Take-Home_Ex02/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1217 features and 30 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 6010.495 ymin: 25134.28 xmax: 48439.77 ymax: 50078.88\nProjected CRS: SVY21 / Singapore TM\n\n\nShow the code\n#plotting point symbol map with analytical hexagon grid\ntmap_options(check.and.fix = TRUE)\ntm_shape(hex_grid) +\n  tm_fill(col = \"bus_stops\",palette = \"Purples\") +\ntm_borders(alpha = 0.3) +\n    flowLine %>%\n    filter(MORNING_PEAK >= 1000) %>%\ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           col = \"purple\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.8) +\n    tm_layout(main.title = \"Commuting flow of \\n passengers with >1,000 trips\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\ntm_shape(lnr_sf) +\n  tm_dots(col = \"lightblue\") +\n  tm_layout(main.title = \"Leisure and Recreation Spot\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) \n\n\n\n\n\n\n\n\n\nShow the code\nretail_sf <- st_read(dsn = \"data/geospatial\",\n                      layer = \"Retails\") %>%\n      st_transform(crs = 3414)\n\n\nReading layer `Retails' from data source \n  `/Users/smu/Rworkshop/jiawenoh/ISSS624/Take-Home_Ex/Take-Home_Ex02/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 37635 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 4737.982 ymin: 25171.88 xmax: 48265.04 ymax: 50135.28\nProjected CRS: SVY21 / Singapore TM\n\n\nShow the code\n#plotting point symbol map with analytical hexagon grid\ntmap_options(check.and.fix = TRUE)\ntm_shape(hex_grid) +\n  tm_fill(col = \"bus_stops\",palette = \"Purples\") +\ntm_borders(alpha = 0.3) +\n    flowLine %>%\n    filter(MORNING_PEAK >= 1000) %>%\ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           col = \"purple\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.8) +\n    tm_layout(main.title = \"Commuting flow of \\n passengers with >1,000 trips\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\ntm_shape(retail_sf) +\n  tm_dots(col = \"lightblue\") +\n  tm_layout(main.title = \"Retail Spot\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) \n\n\n\n\n\n\n\n\n\nShow the code\n#import school.csv into R environment \nschools <- read_csv(\"data/aspatial/schools.csv\") %>%\n  rename(latitude = 'results.LATITUDE', longitude ='results.LONGITUDE') %>%\n  select(postal_code, school_name, latitude, longitude)\n\n#convert an aspatial data into sf tibble data frame\nschools_sf <- st_as_sf(schools, \n                       coords = c(\"longitude\", \"latitude\"),\n                       crs=4326) %>%\n  st_transform(crs = 3414)\n\n#plotting point symbol map with analytical hexagon grid\ntmap_options(check.and.fix = TRUE)\ntm_shape(hex_grid) +\n  tm_fill(col = \"bus_stops\",palette = \"Purples\") +\ntm_borders(alpha = 0.3) +\n    flowLine %>%\n    filter(MORNING_PEAK >= 1000) %>%\ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           col = \"purple\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.8) +\n    tm_layout(main.title = \"Commuting flow of \\n passengers with >1,000 trips\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\ntm_shape(schools_sf) +\n  tm_dots(col = \"lightblue\") +\n  tm_layout(main.title = \"School Spot\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) \n\n\n\n\n\n\n\n\nWe append the point symbol to our existing map. Based on the commuting flow of Weekday Morning (0600-0900), we will drop off: - Entertainment - Food & Beverages - Leisure & Recreation\nFor future analysis, we will be focusing on Business, Financial Services, HDB, Retail, and School.\n\n\n3.2 Compute point-in-polygon count\n\nBusinessFinancial ServiceHDBRetailSchool\n\n\n\nCount number of Businesses in Hexagon Grid\n\nhex_grid$`BUSINESS_COUNT`<- lengths(st_intersects(hex_grid, business_sf))\n\n\n\nSummary Statistics\n\nsummary(hex_grid$BUSINESS_COUNT)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   0.000   0.000   3.368   1.000 126.000 \n\n\n\n\n\n\nCount number of Financial Services in Hexagon Grid\n\nhex_grid$`finserv_COUNT`<- lengths(st_intersects(hex_grid, finserv_sf))\n\n\n\nSummary Statistics\n\nsummary(hex_grid$finserv_COUNT)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   0.000   0.000   1.707   0.000 176.000 \n\n\n\n\n\n\nCount number of HDB in Hexagon Grid\n\n\nShow the code\nhdb_sf_units <- st_intersection(hdb_sf, hex_grid) %>%\n  st_drop_geometry() %>%\n  group_by(grid_id) %>%\n  summarise(\n    HDB_SUM = sum(total_dwelling_units)\n  ) %>%\n  ungroup() \n\nhex_grid <- left_join(hex_grid, hdb_sf_units, by = \"grid_id\") \nhex_grid$HDB_SUM <- replace_na(hex_grid$HDB_SUM, 0)\n\n\n\n\nSummary Statistics\n\nsummary(hex_grid$HDB_SUM)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n    0.0     0.0     0.0   560.8     0.0  8324.0 \n\n\n\n\n\n\nCount number of Retails in Hexagon Grid\n\nhex_grid$`retail_COUNT`<- lengths(st_intersects(hex_grid, retail_sf))\n\n\n\nSummary Statistics\n\nsummary(hex_grid$retail_COUNT)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    0.00   19.35    6.00 1427.00 \n\n\n\n\n\n\nCount number of School in Hexagon Grid\n\nhex_grid$`school_COUNT`<- lengths(st_intersects(hex_grid, schools_sf))\n\n\n\nSummary Statistics\n\nsummary(hex_grid$school_COUNT)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.0000  0.0000  0.0000  0.1799  0.0000  5.0000"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#count-number-of-businesses-in-hexagon-grid",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#count-number-of-businesses-in-hexagon-grid",
    "title": "Take Home Exercise 2",
    "section": "Count number of Businesses in Hexagon Grid",
    "text": "Count number of Businesses in Hexagon Grid\n\nhex_grid$`BUSINESS_COUNT`<- lengths(st_intersects(hex_grid, business_sf))"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#summary-statistics",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#summary-statistics",
    "title": "Take Home Exercise 2",
    "section": "Summary Statistics",
    "text": "Summary Statistics\n\nsummary(hex_grid$BUSINESS_COUNT)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   0.000   0.000   3.368   1.000 126.000"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#count-number-of-entertainment-in-hexagon-grid",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#count-number-of-entertainment-in-hexagon-grid",
    "title": "Take Home Exercise 2",
    "section": "Count number of Entertainment in Hexagon Grid",
    "text": "Count number of Entertainment in Hexagon Grid\n\nhex_grid$`ENTERTAINMENT_COUNT`<- lengths(st_intersects(hex_grid, entertn_sf))"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#summary-statistics-1",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#summary-statistics-1",
    "title": "Take Home Exercise 2",
    "section": "Summary Statistics",
    "text": "Summary Statistics\n\nsummary(hex_grid$finserv_COUNT)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   0.000   0.000   1.707   0.000 176.000"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#count-number-of-food-and-beverages-in-hexagon-grid",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#count-number-of-food-and-beverages-in-hexagon-grid",
    "title": "Take Home Exercise 2",
    "section": "Count number of Food and Beverages in Hexagon Grid",
    "text": "Count number of Food and Beverages in Hexagon Grid\n\nhex_grid$`fnb_COUNT`<- lengths(st_intersects(hex_grid, fnb_sf))"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#summary-statistics-2",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#summary-statistics-2",
    "title": "Take Home Exercise 2",
    "section": "Summary Statistics",
    "text": "Summary Statistics\n\nsummary(hex_grid$HDB_SUM)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n    0.0     0.0     0.0   560.8     0.0  8324.0"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#count-number-of-financial-services-in-hexagon-grid",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#count-number-of-financial-services-in-hexagon-grid",
    "title": "Take Home Exercise 2",
    "section": "Count number of Financial Services in Hexagon Grid",
    "text": "Count number of Financial Services in Hexagon Grid\n\nhex_grid$`finserv_COUNT`<- lengths(st_intersects(hex_grid, finserv_sf))"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#summary-statistics-3",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#summary-statistics-3",
    "title": "Take Home Exercise 2",
    "section": "Summary Statistics",
    "text": "Summary Statistics\n\nsummary(hex_grid$retail_COUNT)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    0.00   19.35    6.00 1427.00"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#count-number-of-hdb-in-hexagon-grid",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#count-number-of-hdb-in-hexagon-grid",
    "title": "Take Home Exercise 2",
    "section": "Count number of HDB in Hexagon Grid",
    "text": "Count number of HDB in Hexagon Grid\n\n\nShow the code\nhdb_sf_units <- st_intersection(hdb_sf, hex_grid) %>%\n  st_drop_geometry() %>%\n  group_by(grid_id) %>%\n  summarise(\n    HDB_SUM = sum(total_dwelling_units)\n  ) %>%\n  ungroup() \n\nhex_grid <- left_join(hex_grid, hdb_sf_units, by = \"grid_id\") \nhex_grid$HDB_SUM <- replace_na(hex_grid$HDB_SUM, 0)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#summary-statistics-4",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#summary-statistics-4",
    "title": "Take Home Exercise 2",
    "section": "Summary Statistics",
    "text": "Summary Statistics\n\nsummary(hex_grid$school_COUNT)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.0000  0.0000  0.0000  0.1799  0.0000  5.0000"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#count-number-of-leisure-recreation-in-hexagon-grid",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#count-number-of-leisure-recreation-in-hexagon-grid",
    "title": "Take Home Exercise 2",
    "section": "Count number of Leisure & Recreation in Hexagon Grid",
    "text": "Count number of Leisure & Recreation in Hexagon Grid\n\nhex_grid$`lnr_COUNT`<- lengths(st_intersects(hex_grid, lnr_sf))"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#summary-statistics-5",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#summary-statistics-5",
    "title": "Take Home Exercise 2",
    "section": "Summary Statistics",
    "text": "Summary Statistics\n\nsummary(hex_grid$lnr_COUNT)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.0000  0.0000  0.0000  0.6257  0.0000 35.0000"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#count-number-of-retails-in-hexagon-grid",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#count-number-of-retails-in-hexagon-grid",
    "title": "Take Home Exercise 2",
    "section": "Count number of Retails in Hexagon Grid",
    "text": "Count number of Retails in Hexagon Grid\n\nhex_grid$`retail_COUNT`<- lengths(st_intersects(hex_grid, retail_sf))"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#summary-statistics-6",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#summary-statistics-6",
    "title": "Take Home Exercise 2",
    "section": "Summary Statistics",
    "text": "Summary Statistics\n\nsummary(hex_grid$retail_COUNT)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    0.00   19.35    6.00 1427.00"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#count-number-of-school-in-hexagon-grid",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#count-number-of-school-in-hexagon-grid",
    "title": "Take Home Exercise 2",
    "section": "Count number of School in Hexagon Grid",
    "text": "Count number of School in Hexagon Grid\n\nhex_grid$`school_COUNT`<- lengths(st_intersects(hex_grid, schools_sf))"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#summary-statistics-7",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#summary-statistics-7",
    "title": "Take Home Exercise 2",
    "section": "Summary Statistics",
    "text": "Summary Statistics\n\nsummary(hex_grid$school_COUNT)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.0000  0.0000  0.0000  0.1799  0.0000  5.0000"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#distance-matrix",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#distance-matrix",
    "title": "Take Home Exercise 2",
    "section": "4. Distance Matrix",
    "text": "4. Distance Matrix\n\nhex_grid_sp <- as(hex_grid, \"Spatial\")\nhex_grid_sp\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 1945 \nextent      : 2292.538, 57042.54, 15315.71, 50606.24  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 7\nnames       : grid_id, bus_stops, BUSINESS_COUNT, finserv_COUNT, HDB_SUM, retail_COUNT, school_COUNT \nmin values  :       1,         0,              0,             0,       0,            0,            0 \nmax values  :     999,        20,            126,           176,    8324,         1427,            5 \n\n\nNext, we compute the Euclidean distance between the centroids of the planning subzones with the use of spDists() of sp package.\n\ndist <- spDists(hex_grid_sp, \n                longlat = FALSE)\nhead(dist, n=c(10, 10))\n\n          [,1]     [,2]     [,3]     [,4]     [,5]     [,6]     [,7]     [,8]\n [1,]    0.000 1299.038 2598.076 3897.114 5196.152  750.000 1984.313 3269.174\n [2,] 1299.038    0.000 1299.038 2598.076 3897.114  750.000  750.000 1984.313\n [3,] 2598.076 1299.038    0.000 1299.038 2598.076 1984.313  750.000  750.000\n [4,] 3897.114 2598.076 1299.038    0.000 1299.038 3269.174 1984.313  750.000\n [5,] 5196.152 3897.114 2598.076 1299.038    0.000 4562.072 3269.174 1984.313\n [6,]  750.000  750.000 1984.313 3269.174 4562.072    0.000 1299.038 2598.076\n [7,] 1984.313  750.000  750.000 1984.313 3269.174 1299.038    0.000 1299.038\n [8,] 3269.174 1984.313  750.000  750.000 1984.313 2598.076 1299.038    0.000\n [9,] 4562.072 3269.174 1984.313  750.000  750.000 3897.114 2598.076 1299.038\n[10,] 5857.687 4562.072 3269.174 1984.313  750.000 5196.152 3897.114 2598.076\n          [,9]    [,10]\n [1,] 4562.072 5857.687\n [2,] 3269.174 4562.072\n [3,] 1984.313 3269.174\n [4,]  750.000 1984.313\n [5,]  750.000  750.000\n [6,] 3897.114 5196.152\n [7,] 2598.076 3897.114\n [8,] 1299.038 2598.076\n [9,]    0.000 1299.038\n[10,] 1299.038    0.000\n\n\nTo tidy, we will create a list sorted according to the distance matrix by grid_id.\n\nid_names <- hex_grid$grid_id\n\nNext, we will attach grid_id to row and column for distance matrix matching.\n\ncolnames(dist) <- paste0(id_names)\nrownames(dist) <- paste0(id_names)\n\nIn addition, we will pivot the distance matrix into a long table by using the row and column of grid_id.\n\ndistPair <- melt(dist) %>%\n  rename(dist = value)\nhead(distPair, 10)\n\n   Var1 Var2     dist\n1     1    1    0.000\n2     2    1 1299.038\n3     3    1 2598.076\n4     4    1 3897.114\n5     5    1 5196.152\n6     6    1  750.000\n7     7    1 1984.313\n8     8    1 3269.174\n9     9    1 4562.072\n10   10    1 5857.687\n\n\nFrom the data frame above, we noticed that the intra-zonal distance within the zone is zero. As such, we will append a constant value to replace the intra-zonal distance of 0 by performing the following:\n\nFind out the minimum value of the distance by using summary()\nInput a constant distance value\nRename original and destination fields\n\n\ndistPair %>%\n  filter(dist > 0) %>%\n  summary()\n\n      Var1           Var2           dist      \n Min.   :   1   Min.   :   1   Min.   :  750  \n 1st Qu.: 487   1st Qu.: 487   1st Qu.:10894  \n Median : 973   Median : 973   Median :17477  \n Mean   : 973   Mean   : 973   Mean   :18932  \n 3rd Qu.:1459   3rd Qu.:1459   3rd Qu.:25401  \n Max.   :1945   Max.   :1945   Max.   :57862  \n\n\n\ndistPair$dist <- ifelse(distPair$dist == 0,\n                        200, distPair$dist)\n\n# to check the distPair data frame\ndistPair %>%\n  summary()\n\n      Var1           Var2           dist      \n Min.   :   1   Min.   :   1   Min.   :  200  \n 1st Qu.: 487   1st Qu.: 487   1st Qu.:10894  \n Median : 973   Median : 973   Median :17477  \n Mean   : 973   Mean   : 973   Mean   :18923  \n 3rd Qu.:1459   3rd Qu.:1459   3rd Qu.:25401  \n Max.   :1945   Max.   :1945   Max.   :57862  \n\n\n\n#to rename the fields\ndistPair <- distPair %>%\n  rename(orig = Var1,\n         dest = Var2)\n\n#to save output to rds \nwrite_rds(distPair, \"data/rds/distPair.rds\") \ndistPair <- read_rds(\"data/rds/distPair.rds\")\n\n\nPrepare flow data\n\nflow_data <- od_data1 %>%\n  group_by(ORIGIN_ID, DESTIN_ID) %>% \n  summarize(TRIPS = sum(MORNING_PEAK)) \n\nhead(flow_data, 10)\n\n# A tibble: 10 × 3\n# Groups:   ORIGIN_ID [3]\n   ORIGIN_ID DESTIN_ID TRIPS\n   <fct>     <fct>     <dbl>\n 1 21        49            1\n 2 21        60            2\n 3 21        69            2\n 4 21        82            1\n 5 21        86           56\n 6 29        60           13\n 7 29        86           37\n 8 40        72            1\n 9 40        87           32\n10 40        100           9\n\n\nWe will use ifelse() function to add three new fields in the dataframe with the condition that if Origin ID match Destination ID , zero will be forced.\n\nflow_data$FlowNoIntra <- ifelse(\n  flow_data$ORIGIN_ID == flow_data$DESTIN_ID, \n  0, flow_data$TRIPS)\nflow_data$offset <- ifelse(\n  flow_data$ORIGIN_ID == flow_data$DESTIN_ID, \n  0.000001, 1)\n\n\nglimpse(flow_data)\n\nRows: 65,076\nColumns: 5\nGroups: ORIGIN_ID [820]\n$ ORIGIN_ID   <fct> 21, 21, 21, 21, 21, 29, 29, 40, 40, 40, 40, 41, 41, 41, 41…\n$ DESTIN_ID   <fct> 49, 60, 69, 82, 86, 60, 86, 72, 87, 100, 253, 40, 49, 50, …\n$ TRIPS       <dbl> 1, 2, 2, 1, 56, 13, 37, 1, 32, 9, 2, 21, 3, 5, 4, 1, 7, 36…\n$ FlowNoIntra <dbl> 1, 2, 2, 1, 56, 13, 37, 1, 32, 9, 2, 21, 3, 5, 4, 1, 7, 36…\n$ offset      <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n\n\n\n#convert flow data from int to fct \nflow_data$ORIGIN_ID <- as.factor(flow_data$ORIGIN_ID)\nflow_data$DESTIN_ID <- as.factor(flow_data$DESTIN_ID)\n\n#convert distPair from int to fct \ndistPair$orig <- as.factor(distPair$orig)\ndistPair$dest <- as.factor(distPair$dest)\n\nglimpse(distPair)\n\nRows: 3,783,025\nColumns: 3\n$ orig <fct> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19…\n$ dest <fct> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ dist <dbl> 200.000, 1299.038, 2598.076, 3897.114, 5196.152, 750.000, 1984.31…\n\n\n\nflow_data1 <- flow_data %>%\n  left_join (distPair,\n             by = c(\"ORIGIN_ID\" = \"orig\",\n                    \"DESTIN_ID\" = \"dest\"))\n\n\n\nPreparing Origin Attributes\n\n\nShow the code\nflow_data2 <- flow_data1 %>%\n  left_join(hex_grid,\n            by = c(ORIGIN_ID = \"grid_id\")) %>%\n    rename(ORIGIN_BUSINESS = BUSINESS_COUNT,\n         ORIGIN_FINSER = finserv_COUNT,\n         ORIGIN_HDB = HDB_SUM,\n         ORIGIN_RETAIL = retail_COUNT,\n         ORIGIN_SCHOOLS =school_COUNT\n         ) %>%\n  select(-c(bus_stops)) \n\nflow_data2 <- flow_data2 %>%\n  left_join(hex_grid,\n            by = c(DESTIN_ID = \"grid_id\")) %>%\n    rename(DESTIN_BUSINESS = BUSINESS_COUNT,\n         DESTIN_FINSER = finserv_COUNT,\n         DESTIN_HDB = HDB_SUM,\n         DESTIN_RETAIL = retail_COUNT,\n         DESTIN_SCHOOLS =school_COUNT\n         ) %>%\n  select(-c(bus_stops)) %>%\n  select(-c(10,16))\n\n\n\nggplot(data = flow_data2,\n       aes(x = dist,\n           y = TRIPS)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\n\n\n\n\n#ggplot(data = flow_data2,\n#       aes(x = log(dist),\n#           y = log(TRIPS))) +\n#  geom_point() +\n#  geom_smooth(method = lm)\n\n\n#ggplot(data = SIM_data,\n#       aes(x = TRIPS)) +\n#  geom_histogram()\n\n\nsummary(flow_data2)\n\n   ORIGIN_ID       DESTIN_ID         TRIPS          FlowNoIntra     \n 1542   :  285   1234   :  364   Min.   :    1.0   Min.   :    1.0  \n 1105   :  284   1210   :  355   1st Qu.:    7.0   1st Qu.:    7.0  \n 1234   :  283   1233   :  342   Median :   37.0   Median :   37.0  \n 1255   :  282   1212   :  317   Mean   :  378.9   Mean   :  378.9  \n 1215   :  281   1542   :  299   3rd Qu.:  178.0   3rd Qu.:  178.0  \n 1218   :  280   1105   :  298   Max.   :89347.0   Max.   :89347.0  \n (Other):63381   (Other):63101                                      \n     offset       dist       ORIGIN_BUSINESS   ORIGIN_FINSER       ORIGIN_HDB  \n Min.   :1   Min.   :  750   Min.   :  0.000   Min.   :  0.000   Min.   :   0  \n 1st Qu.:1   1st Qu.: 3000   1st Qu.:  0.000   1st Qu.:  0.000   1st Qu.:   0  \n Median :1   Median : 5408   Median :  1.000   Median :  3.000   Median :1052  \n Mean   :1   Mean   : 6280   Mean   :  6.571   Mean   :  8.105   Mean   :1848  \n 3rd Qu.:1   3rd Qu.: 8842   3rd Qu.:  6.000   3rd Qu.:  8.000   3rd Qu.:3371  \n Max.   :1   Max.   :25200   Max.   :126.000   Max.   :176.000   Max.   :8324  \n                                                                               \n ORIGIN_RETAIL     ORIGIN_SCHOOLS   DESTIN_BUSINESS   DESTIN_FINSER    \n Min.   :   0.00   Min.   :0.0000   Min.   :  0.000   Min.   :  0.000  \n 1st Qu.:   7.00   1st Qu.:0.0000   1st Qu.:  0.000   1st Qu.:  0.000  \n Median :  29.00   Median :0.0000   Median :  1.000   Median :  3.000  \n Mean   :  90.61   Mean   :0.5865   Mean   :  7.353   Mean   :  8.997  \n 3rd Qu.:  91.00   3rd Qu.:1.0000   3rd Qu.:  7.000   3rd Qu.:  9.000  \n Max.   :1427.00   Max.   :5.0000   Max.   :126.000   Max.   :176.000  \n                                                                       \n   DESTIN_HDB   DESTIN_RETAIL     DESTIN_SCHOOLS  \n Min.   :   0   Min.   :   0.00   Min.   :0.0000  \n 1st Qu.:   0   1st Qu.:   7.00   1st Qu.:0.0000  \n Median : 839   Median :  29.00   Median :0.0000  \n Mean   :1741   Mean   :  97.05   Mean   :0.5577  \n 3rd Qu.:3239   3rd Qu.:  97.00   3rd Qu.:1.0000  \n Max.   :8324   Max.   :1427.00   Max.   :5.0000  \n                                                  \n\n\nThe print report above reveals that that there are 10 variables that consist of 0 values. As such, we will replace it with 0.99.\n\n\nShow the code\n#ORIGIN_BUSINESS\nflow_data2$ORIGIN_BUSINESS <- ifelse(\n  flow_data2$ORIGIN_BUSINESS == 0,\n  0.99, flow_data2$ORIGIN_BUSINESS)\n\n#ORIGIN_FINSER \nflow_data2$ORIGIN_FINSER  <- ifelse(\n  flow_data2$ORIGIN_FINSER == 0,\n  0.99, flow_data2$ORIGIN_FINSER)\n\n#ORIGIN_HDB\nflow_data2$ORIGIN_HDB  <- ifelse(\n  flow_data2$ORIGIN_HDB == 0,\n  0.99, flow_data2$ORIGIN_HDB)\n\n#ORIGIN_RETAIL\nflow_data2$ORIGIN_RETAIL  <- ifelse(\n  flow_data2$ORIGIN_RETAIL == 0,\n  0.99, flow_data2$ORIGIN_RETAIL)\n\n#ORIGIN_SCHOOLS\nflow_data2$ORIGIN_SCHOOLS  <- ifelse(\n  flow_data2$ORIGIN_SCHOOLS == 0,\n  0.99, flow_data2$ORIGIN_SCHOOLS)\n\n#DESTIN_BUSINESS\nflow_data2$DESTIN_BUSINESS <- ifelse(\n  flow_data2$DESTIN_BUSINESS == 0,\n  0.99, flow_data2$DESTIN_BUSINESS)\n\n#DESTIN_FINSER \nflow_data2$DESTIN_FINSER  <- ifelse(\n  flow_data2$DESTIN_FINSER == 0,\n  0.99, flow_data2$DESTIN_FINSER)\n\n#DESTIN_HDB\nflow_data2$DESTIN_HDB  <- ifelse(\n  flow_data2$DESTIN_HDB == 0,\n  0.99, flow_data2$DESTIN_HDB)\n\n#DESTIN_RETAIL\nflow_data2$DESTIN_RETAIL  <- ifelse(\n  flow_data2$DESTIN_RETAIL == 0,\n  0.99, flow_data2$DESTIN_RETAIL)\n\n#DESTIN_SCHOOLS\nflow_data2$DESTIN_SCHOOLS  <- ifelse(\n  flow_data2$DESTIN_SCHOOLS == 0,\n  0.99, flow_data2$DESTIN_SCHOOLS)\n\n\n\n\n\n\n\n\nSave and Load RDS\n\n\n\n\n\n\nwrite_rds(flow_data2, \"data/rds/flow_data2.rds\")\nflow_data2 <- read_rds(\"data/rds/flow_data2.rds\")\n\n\n\n\n\n\n\n\n\n\nSummary(flow_data2)\n\n\n\n\n\n\nsummary(flow_data2)\n\n   ORIGIN_ID       DESTIN_ID         TRIPS          FlowNoIntra     \n 1542   :  285   1234   :  364   Min.   :    1.0   Min.   :    1.0  \n 1105   :  284   1210   :  355   1st Qu.:    7.0   1st Qu.:    7.0  \n 1234   :  283   1233   :  342   Median :   37.0   Median :   37.0  \n 1255   :  282   1212   :  317   Mean   :  378.9   Mean   :  378.9  \n 1215   :  281   1542   :  299   3rd Qu.:  178.0   3rd Qu.:  178.0  \n 1218   :  280   1105   :  298   Max.   :89347.0   Max.   :89347.0  \n (Other):63381   (Other):63101                                      \n     offset       dist       ORIGIN_BUSINESS   ORIGIN_FINSER    \n Min.   :1   Min.   :  750   Min.   :  0.990   Min.   :  0.990  \n 1st Qu.:1   1st Qu.: 3000   1st Qu.:  0.990   1st Qu.:  0.990  \n Median :1   Median : 5408   Median :  1.000   Median :  3.000  \n Mean   :1   Mean   : 6280   Mean   :  6.986   Mean   :  8.375  \n 3rd Qu.:1   3rd Qu.: 8842   3rd Qu.:  6.000   3rd Qu.:  8.000  \n Max.   :1   Max.   :25200   Max.   :126.000   Max.   :176.000  \n                                                                \n   ORIGIN_HDB      ORIGIN_RETAIL     ORIGIN_SCHOOLS  DESTIN_BUSINESS  \n Min.   :   0.99   Min.   :   0.99   Min.   :0.990   Min.   :  0.990  \n 1st Qu.:   0.99   1st Qu.:   7.00   1st Qu.:0.990   1st Qu.:  0.990  \n Median :1052.00   Median :  29.00   Median :0.990   Median :  1.000  \n Mean   :1848.02   Mean   :  90.67   Mean   :1.183   Mean   :  7.747  \n 3rd Qu.:3371.00   3rd Qu.:  91.00   3rd Qu.:1.000   3rd Qu.:  7.000  \n Max.   :8324.00   Max.   :1427.00   Max.   :5.000   Max.   :126.000  \n                                                                      \n DESTIN_FINSER       DESTIN_HDB      DESTIN_RETAIL     DESTIN_SCHOOLS \n Min.   :  0.990   Min.   :   0.99   Min.   :   0.99   Min.   :0.990  \n 1st Qu.:  0.990   1st Qu.:   0.99   1st Qu.:   7.00   1st Qu.:0.990  \n Median :  3.000   Median : 839.00   Median :  29.00   Median :0.990  \n Mean   :  9.266   Mean   :1740.90   Mean   :  97.12   Mean   :1.173  \n 3rd Qu.:  9.000   3rd Qu.:3239.00   3rd Qu.:  97.00   3rd Qu.:1.000  \n Max.   :176.000   Max.   :8324.00   Max.   :1427.00   Max.   :5.000"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#count",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#count",
    "title": "Take Home Exercise 2",
    "section": "COUNT",
    "text": "COUNT\n\n\nShow the code\nflow_data2 <- flow_data1 %>%\n  left_join(hex_grid,\n            by = c(ORIGIN_ID = \"grid_id\")) %>%\n    rename(ORIGIN_BUSINESS = BUSINESS_COUNT,\n         ORIGIN_ENTERTAINMENT = ENTERTAINMENT_COUNT,\n         ORIGIN_FNB = fnb_COUNT,\n         ORIGIN_FINSER = finserv_COUNT,\n         ORIGIN_HDB = HDB_COUNT,\n         ORIGIN_LEISURE = lnr_COUNT,\n         ORIGIN_RETAIL = retail_COUNT,\n         ORIGIN_SCHOOLS =school_COUNT\n         ) %>%\n  select(-c(bus_stops)) \n\nflow_data2 <- flow_data2 %>%\n  left_join(hex_grid,\n            by = c(DESTIN_ID = \"grid_id\")) %>%\n    rename(DESTIN_BUSINESS = BUSINESS_COUNT,\n         DESTIN_ENTERTAINMENT = ENTERTAINMENT_COUNT,\n         DESTIN_FNB = fnb_COUNT,\n         DESTIN_FINSER = finserv_COUNT,\n         DESTIN_HDB = HDB_COUNT,\n         DESTIN_LEISURE = lnr_COUNT,\n         DESTIN_RETAIL = retail_COUNT,\n         DESTIN_SCHOOLS =school_COUNT\n         ) %>%\n  select(-c(bus_stops)) %>%\n  select(1:6,8:15,17:24)\n\n\n\nggplot(data = flow_data2,\n       aes(x = dist,\n           y = TRIPS)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\n\n\n\n\n#ggplot(data = flow_data2,\n#       aes(x = log(dist),\n#           y = log(TRIPS))) +\n#  geom_point() +\n#  geom_smooth(method = lm)\n\n\n#ggplot(data = SIM_data,\n#       aes(x = TRIPS)) +\n#  geom_histogram()\n\n\nsummary(flow_data2)\n\n   ORIGIN_ID       DESTIN_ID         TRIPS          FlowNoIntra     \n 1542   :  286   1234   :  365   Min.   :    1.0   Min.   :    0.0  \n 1105   :  285   1210   :  356   1st Qu.:    7.0   1st Qu.:    7.0  \n 1234   :  284   1233   :  343   Median :   37.0   Median :   36.0  \n 1255   :  283   1212   :  318   Mean   :  392.1   Mean   :  375.3  \n 1215   :  282   1542   :  300   3rd Qu.:  182.0   3rd Qu.:  174.2  \n 1218   :  281   1105   :  299   Max.   :89347.0   Max.   :89347.0  \n (Other):63999   (Other):63719                                      \n     offset              dist       ORIGIN_BUSINESS   ORIGIN_ENTERTAINMENT\n Min.   :0.000001   Min.   :  200   Min.   :  0.000   Min.   : 0.0000     \n 1st Qu.:1.000000   1st Qu.: 2704   1st Qu.:  0.000   1st Qu.: 0.0000     \n Median :1.000000   Median : 5250   Median :  1.000   Median : 0.0000     \n Mean   :0.990502   Mean   : 6222   Mean   :  6.582   Mean   : 0.3077     \n 3rd Qu.:1.000000   3rd Qu.: 8649   3rd Qu.:  6.000   3rd Qu.: 0.0000     \n Max.   :1.000000   Max.   :25200   Max.   :126.000   Max.   :13.0000     \n                                                                          \n   ORIGIN_FNB      ORIGIN_FINSER       ORIGIN_HDB    ORIGIN_LEISURE \n Min.   :  0.000   Min.   :  0.000   Min.   : 0.00   Min.   : 0.00  \n 1st Qu.:  0.000   1st Qu.:  0.000   1st Qu.: 0.00   1st Qu.: 0.00  \n Median :  0.000   Median :  3.000   Median :11.00   Median : 1.00  \n Mean   :  5.155   Mean   :  8.076   Mean   :20.77   Mean   : 2.23  \n 3rd Qu.:  2.000   3rd Qu.:  8.000   3rd Qu.:38.00   3rd Qu.: 3.00  \n Max.   :127.000   Max.   :176.000   Max.   :95.00   Max.   :35.00  \n                                                                    \n ORIGIN_RETAIL     ORIGIN_SCHOOLS  DESTIN_BUSINESS   DESTIN_ENTERTAINMENT\n Min.   :   0.00   Min.   :0.000   Min.   :  0.000   Min.   : 0.0000     \n 1st Qu.:   7.00   1st Qu.:0.000   1st Qu.:  0.000   1st Qu.: 0.0000     \n Median :  29.00   Median :0.000   Median :  1.000   Median : 0.0000     \n Mean   :  90.27   Mean   :0.586   Mean   :  7.356   Mean   : 0.3345     \n 3rd Qu.:  91.00   3rd Qu.:1.000   3rd Qu.:  7.000   3rd Qu.: 0.0000     \n Max.   :1427.00   Max.   :5.000   Max.   :126.000   Max.   :13.0000     \n                                                                         \n   DESTIN_FNB      DESTIN_FINSER       DESTIN_HDB    DESTIN_LEISURE  \n Min.   :  0.000   Min.   :  0.000   Min.   : 0.00   Min.   : 0.000  \n 1st Qu.:  0.000   1st Qu.:  0.000   1st Qu.: 0.00   1st Qu.: 0.000  \n Median :  0.000   Median :  3.000   Median : 8.00   Median : 1.000  \n Mean   :  5.822   Mean   :  8.959   Mean   :19.49   Mean   : 2.419  \n 3rd Qu.:  2.000   3rd Qu.:  9.000   3rd Qu.:37.00   3rd Qu.: 3.000  \n Max.   :127.000   Max.   :176.000   Max.   :95.00   Max.   :35.000  \n                                                                     \n DESTIN_RETAIL     DESTIN_SCHOOLS  \n Min.   :   0.00   Min.   :0.0000  \n 1st Qu.:   7.00   1st Qu.:0.0000  \n Median :  29.00   Median :0.0000  \n Mean   :  96.66   Mean   :0.5575  \n 3rd Qu.:  96.00   3rd Qu.:1.0000  \n Max.   :1427.00   Max.   :5.0000  \n                                   \n\n\nThe print report above reveals that that there are 17 variables that consist of 0 values, and 1 variable with 0.00001. As such, we will replace it with 0.99.\n\n\nShow the code\n#FlowNoIntra\nflow_data2$FlowNoIntra <- ifelse(\n  flow_data2$FlowNoIntra == 0,\n  0.99, flow_data2$FlowNoIntra)\n\n#offset\nflow_data2$offset <- ifelse(\n  flow_data2$offset == 0,\n  0.99, flow_data2$offset)\n\n#ORIGIN_BUSINESS\nflow_data2$ORIGIN_BUSINESS <- ifelse(\n  flow_data2$ORIGIN_BUSINESS == 0,\n  0.99, flow_data2$ORIGIN_BUSINESS)\n\n#ORIGIN_ENTERTAINMENT \nflow_data2$ORIGIN_ENTERTAINMENT  <- ifelse(\n  flow_data2$ORIGIN_ENTERTAINMENT == 0,\n  0.99, flow_data2$ORIGIN_ENTERTAINMENT)\n\n#ORIGIN_FNB  \nflow_data2$ORIGIN_FNB <- ifelse(\n  flow_data2$ORIGIN_FNB  == 0,\n  0.99, flow_data2$ORIGIN_FNB)\n\n#ORIGIN_FINSER \nflow_data2$ORIGIN_FINSER  <- ifelse(\n  flow_data2$ORIGIN_FINSER == 0,\n  0.99, flow_data2$ORIGIN_FINSER)\n\n#ORIGIN_HDB\nflow_data2$ORIGIN_HDB  <- ifelse(\n  flow_data2$ORIGIN_HDB == 0,\n  0.99, flow_data2$ORIGIN_HDB)\n\n#ORIGIN_LEISURE\nflow_data2$ORIGIN_LEISURE  <- ifelse(\n  flow_data2$ORIGIN_LEISURE == 0,\n  0.99, flow_data2$ORIGIN_LEISURE)\n\n#ORIGIN_RETAIL\nflow_data2$ORIGIN_RETAIL  <- ifelse(\n  flow_data2$ORIGIN_RETAIL == 0,\n  0.99, flow_data2$ORIGIN_RETAIL)\n\n#ORIGIN_SCHOOLS\nflow_data2$ORIGIN_SCHOOLS  <- ifelse(\n  flow_data2$ORIGIN_SCHOOLS == 0,\n  0.99, flow_data2$ORIGIN_SCHOOLS)\n\n#DESTIN_BUSINESS\nflow_data2$DESTIN_BUSINESS <- ifelse(\n  flow_data2$DESTIN_BUSINESS == 0,\n  0.99, flow_data2$DESTIN_BUSINESS)\n\n#DESTIN_ENTERTAINMENT \nflow_data2$DESTIN_ENTERTAINMENT  <- ifelse(\n  flow_data2$DESTIN_ENTERTAINMENT == 0,\n  0.99, flow_data2$DESTIN_ENTERTAINMENT)\n\n#DESTIN_FNB  \nflow_data2$DESTIN_FNB <- ifelse(\n  flow_data2$DESTIN_FNB  == 0,\n  0.99, flow_data2$DESTIN_FNB)\n\n#DESTIN_FINSER \nflow_data2$DESTIN_FINSER  <- ifelse(\n  flow_data2$DESTIN_FINSER == 0,\n  0.99, flow_data2$DESTIN_FINSER)\n\n#DESTIN_HDB\nflow_data2$DESTIN_HDB  <- ifelse(\n  flow_data2$DESTIN_HDB == 0,\n  0.99, flow_data2$DESTIN_HDB)\n\n#DESTIN_LEISURE\nflow_data2$DESTIN_LEISURE  <- ifelse(\n  flow_data2$DESTIN_LEISURE == 0,\n  0.99, flow_data2$DESTIN_LEISURE)\n\n#DESTIN_RETAIL\nflow_data2$DESTIN_RETAIL  <- ifelse(\n  flow_data2$DESTIN_RETAIL == 0,\n  0.99, flow_data2$DESTIN_RETAIL)\n\n#DESTIN_SCHOOLS\nflow_data2$DESTIN_SCHOOLS  <- ifelse(\n  flow_data2$DESTIN_SCHOOLS == 0,\n  0.99, flow_data2$DESTIN_SCHOOLS)\n\n\n\n\n\n\n\n\nSummary(flow_data2)\n\n\n\n\n\n\nsummary(flow_data2)\n\n   ORIGIN_ID       DESTIN_ID         TRIPS          FlowNoIntra      \n 1542   :  286   1234   :  365   Min.   :    1.0   Min.   :    0.99  \n 1105   :  285   1210   :  356   1st Qu.:    7.0   1st Qu.:    7.00  \n 1234   :  284   1233   :  343   Median :   37.0   Median :   36.00  \n 1255   :  283   1212   :  318   Mean   :  392.1   Mean   :  375.29  \n 1215   :  282   1542   :  300   3rd Qu.:  182.0   3rd Qu.:  174.25  \n 1218   :  281   1105   :  299   Max.   :89347.0   Max.   :89347.00  \n (Other):63999   (Other):63719                                       \n     offset              dist       ORIGIN_BUSINESS   ORIGIN_ENTERTAINMENT\n Min.   :0.000001   Min.   :  200   Min.   :  0.990   Min.   : 0.990      \n 1st Qu.:1.000000   1st Qu.: 2704   1st Qu.:  0.990   1st Qu.: 0.990      \n Median :1.000000   Median : 5250   Median :  1.000   Median : 0.990      \n Mean   :0.990502   Mean   : 6222   Mean   :  6.997   Mean   : 1.166      \n 3rd Qu.:1.000000   3rd Qu.: 8649   3rd Qu.:  6.000   3rd Qu.: 0.990      \n Max.   :1.000000   Max.   :25200   Max.   :126.000   Max.   :13.000      \n                                                                          \n   ORIGIN_FNB      ORIGIN_FINSER       ORIGIN_HDB    ORIGIN_LEISURE  \n Min.   :  0.990   Min.   :  0.990   Min.   : 0.99   Min.   : 0.990  \n 1st Qu.:  0.990   1st Qu.:  0.990   1st Qu.: 0.99   1st Qu.: 0.990  \n Median :  0.990   Median :  3.000   Median :11.00   Median : 1.000  \n Mean   :  5.714   Mean   :  8.346   Mean   :21.11   Mean   : 2.646  \n 3rd Qu.:  2.000   3rd Qu.:  8.000   3rd Qu.:38.00   3rd Qu.: 3.000  \n Max.   :127.000   Max.   :176.000   Max.   :95.00   Max.   :35.000  \n                                                                     \n ORIGIN_RETAIL     ORIGIN_SCHOOLS  DESTIN_BUSINESS   DESTIN_ENTERTAINMENT\n Min.   :   0.99   Min.   :0.990   Min.   :  0.990   Min.   : 0.990      \n 1st Qu.:   7.00   1st Qu.:0.990   1st Qu.:  0.990   1st Qu.: 0.990      \n Median :  29.00   Median :0.990   Median :  1.000   Median : 0.990      \n Mean   :  90.34   Mean   :1.182   Mean   :  7.751   Mean   : 1.185      \n 3rd Qu.:  91.00   3rd Qu.:1.000   3rd Qu.:  7.000   3rd Qu.: 0.990      \n Max.   :1427.00   Max.   :5.000   Max.   :126.000   Max.   :13.000      \n                                                                         \n   DESTIN_FNB      DESTIN_FINSER       DESTIN_HDB    DESTIN_LEISURE  \n Min.   :  0.990   Min.   :  0.990   Min.   : 0.99   Min.   : 0.990  \n 1st Qu.:  0.990   1st Qu.:  0.990   1st Qu.: 0.99   1st Qu.: 0.990  \n Median :  0.990   Median :  3.000   Median : 8.00   Median : 1.000  \n Mean   :  6.372   Mean   :  9.229   Mean   :19.86   Mean   : 2.834  \n 3rd Qu.:  2.000   3rd Qu.:  9.000   3rd Qu.:37.00   3rd Qu.: 3.000  \n Max.   :127.000   Max.   :176.000   Max.   :95.00   Max.   :35.000  \n                                                                     \n DESTIN_RETAIL     DESTIN_SCHOOLS \n Min.   :   0.99   Min.   :0.990  \n 1st Qu.:   7.00   1st Qu.:0.990  \n Median :  29.00   Median :0.990  \n Mean   :  96.72   Mean   :1.173  \n 3rd Qu.:  96.00   3rd Qu.:1.000  \n Max.   :1427.00   Max.   :5.000  \n                                  \n\n\n\n\n\n\n\n\n\n\n\nSave and Load RDS\n\n\n\n\n\n\nwrite_rds(flow_data2, \"data/rds/flow_data2.rds\")\nflow_data2 <- read_rds(\"data/rds/flow_data2.rds\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#unconstrained-spatial-interaction-model",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#unconstrained-spatial-interaction-model",
    "title": "Take Home Exercise 2",
    "section": "Unconstrained Spatial Interaction Model",
    "text": "Unconstrained Spatial Interaction Model\n\n\nShow the code\nuncSIM <- glm(formula = TRIPS ~ \n                log(ORIGIN_BUSINESS) + \n                log(DESTIN_BUSINESS) +\n                log(ORIGIN_FINSER) + \n                log(DESTIN_FINSER) +\n                log(ORIGIN_HDB) + \n                log(DESTIN_HDB) +\n                log(ORIGIN_RETAIL) + \n                log(DESTIN_RETAIL) +\n                log(ORIGIN_SCHOOLS) + \n                log(DESTIN_SCHOOLS) +\n                log(dist),\n              family = poisson(link = \"log\"),\n              data = flow_data2,\n              na.action = na.exclude)\n#save RDS\nwrite_rds(uncSIM, \"data/rds/uncSIM.rds\")\n\n\n\n\n\n\n\n\nLoad uncSIM RDS\n\n\n\n\n\n\nuncSIM <- read_rds(\"data/rds/uncSIM.rds\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#r-squared-function",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#r-squared-function",
    "title": "Take Home Exercise 2",
    "section": "R-squared function",
    "text": "R-squared function\n\n#create function to calculate r-squared value \nCalcRSquared <- function(observed,estimated){\n  r <- cor(observed,estimated)\n  R2 <- r^2\n  R2\n}\n\n\nCalcRSquared(uncSIM$data$TRIPS, uncSIM$fitted.values)\n\n[1] 0.2214091\n\n\n\nr2_mcfadden(uncSIM)\n\n# R2 for Generalized Linear Regression\n       R2: 0.487\n  adj. R2: 0.487"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#origin-production-constrained-sim",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#origin-production-constrained-sim",
    "title": "Take Home Exercise 2",
    "section": "Origin (Production) constrained SIM",
    "text": "Origin (Production) constrained SIM\n\n\nShow the code\norcSIM <- glm(formula = TRIPS ~ \n                 ORIGIN_ID +\n                 log(DESTIN_BUSINESS) +\n                 log(DESTIN_FINSER) +\n                 log(DESTIN_HDB) +\n                 log(DESTIN_RETAIL) +\n                 log(DESTIN_SCHOOLS) +\n                 log(dist),\n              family = poisson(link = \"log\"),\n              data = flow_data2,\n              na.action = na.exclude)\n#save RDS\nwrite_rds(orcSIM, \"data/rds/orcSIM.rds\")\n\n\n\n\n\n\n\n\nLoad orcSIM RDS\n\n\n\n\n\n\norcSIM <- read_rds(\"data/rds/orcSIM.rds\")\n\n\n\n\n\n\n\n\n\n\nSummary(orcSIM)\n\n\n\n\n\n\nsummary(orcSIM)\n\n\nCall:\nglm(formula = TRIPS ~ ORIGIN_ID + log(DESTIN_BUSINESS) + log(DESTIN_FINSER) + \n    log(DESTIN_HDB) + log(DESTIN_RETAIL) + log(DESTIN_SCHOOLS) + \n    log(dist), family = poisson(link = \"log\"), data = flow_data2, \n    na.action = na.exclude)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-167.73   -12.12    -5.30     0.71   602.94  \n\nCoefficients:\n                       Estimate Std. Error   z value Pr(>|z|)    \n(Intercept)           1.424e+01  1.270e-01   112.140  < 2e-16 ***\nORIGIN_ID29           9.195e-01  1.901e-01     4.838 1.31e-06 ***\nORIGIN_ID40           2.705e-01  1.971e-01     1.372 0.170012    \nORIGIN_ID41          -1.193e+00  1.683e-01    -7.086 1.38e-12 ***\nORIGIN_ID48           1.184e-01  1.503e-01     0.788 0.430564    \nORIGIN_ID49           1.059e+00  1.296e-01     8.168 3.14e-16 ***\nORIGIN_ID50           2.458e+00  1.290e-01    19.057  < 2e-16 ***\nORIGIN_ID51           6.960e-03  1.363e-01     0.051 0.959282    \nORIGIN_ID59           5.665e-01  1.423e-01     3.980 6.90e-05 ***\nORIGIN_ID60           2.524e-01  1.309e-01     1.927 0.053939 .  \nORIGIN_ID61           2.643e-01  1.481e-01     1.785 0.074342 .  \nORIGIN_ID62           2.600e+00  1.277e-01    20.368  < 2e-16 ***\nORIGIN_ID63          -4.636e-01  1.443e-01    -3.213 0.001315 ** \nORIGIN_ID69           2.833e+00  1.280e-01    22.137  < 2e-16 ***\nORIGIN_ID70           1.182e-01  1.437e-01     0.822 0.410828    \nORIGIN_ID71           1.361e-01  1.365e-01     0.997 0.318865    \nORIGIN_ID72           1.951e+00  1.283e-01    15.201  < 2e-16 ***\nORIGIN_ID73          -5.100e-01  1.451e-01    -3.515 0.000440 ***\nORIGIN_ID74          -3.007e-01  1.362e-01    -2.208 0.027271 *  \nORIGIN_ID82           1.783e+00  1.346e-01    13.248  < 2e-16 ***\nORIGIN_ID83           3.973e-01  1.371e-01     2.897 0.003769 ** \nORIGIN_ID85           5.809e-01  1.324e-01     4.387 1.15e-05 ***\nORIGIN_ID86           1.202e+00  1.290e-01     9.316  < 2e-16 ***\nORIGIN_ID87           3.656e+00  1.271e-01    28.762  < 2e-16 ***\nORIGIN_ID98          -6.709e-01  1.437e-01    -4.668 3.04e-06 ***\nORIGIN_ID99          -2.073e-01  1.364e-01    -1.521 0.128338    \nORIGIN_ID100          5.381e-01  1.316e-01     4.088 4.35e-05 ***\nORIGIN_ID109         -3.549e-02  1.835e-01    -0.193 0.846636    \nORIGIN_ID111          5.308e-01  1.333e-01     3.983 6.80e-05 ***\nORIGIN_ID112          2.881e+00  1.272e-01    22.643  < 2e-16 ***\nORIGIN_ID113         -1.430e+00  1.923e-01    -7.437 1.03e-13 ***\nORIGIN_ID125          3.451e+00  1.272e-01    27.135  < 2e-16 ***\nORIGIN_ID126          7.945e-01  1.295e-01     6.133 8.62e-10 ***\nORIGIN_ID135          5.401e-01  1.536e-01     3.516 0.000438 ***\nORIGIN_ID136          3.280e+00  1.272e-01    25.785  < 2e-16 ***\nORIGIN_ID137          8.925e-01  1.295e-01     6.892 5.52e-12 ***\nORIGIN_ID138         -1.876e+00  2.738e-01    -6.851 7.36e-12 ***\nORIGIN_ID148         -9.606e-01  1.534e-01    -6.262 3.81e-10 ***\nORIGIN_ID149          9.456e-01  1.307e-01     7.233 4.74e-13 ***\nORIGIN_ID150          4.047e-02  1.750e-01     0.231 0.817089    \nORIGIN_ID159          1.270e+00  1.311e-01     9.692  < 2e-16 ***\nORIGIN_ID160          2.087e+00  1.276e-01    16.352  < 2e-16 ***\nORIGIN_ID161         -8.378e-02  1.386e-01    -0.604 0.545574    \nORIGIN_ID171         -7.177e-01  1.844e-01    -3.893 9.89e-05 ***\nORIGIN_ID172         -3.802e-02  1.361e-01    -0.279 0.779880    \nORIGIN_ID173         -1.692e-01  1.364e-01    -1.241 0.214671    \nORIGIN_ID185          8.855e-02  1.338e-01     0.662 0.508166    \nORIGIN_ID186          2.215e+00  1.274e-01    17.381  < 2e-16 ***\nORIGIN_ID201          8.325e-01  1.304e-01     6.385 1.72e-10 ***\nORIGIN_ID202          5.778e-01  1.366e-01     4.229 2.35e-05 ***\nORIGIN_ID203          7.298e-01  1.314e-01     5.555 2.78e-08 ***\nORIGIN_ID217          2.088e-01  1.383e-01     1.510 0.131047    \nORIGIN_ID218         -2.038e+00  1.811e-01   -11.254  < 2e-16 ***\nORIGIN_ID219          5.922e-01  1.321e-01     4.482 7.40e-06 ***\nORIGIN_ID220          2.549e-01  1.333e-01     1.912 0.055913 .  \nORIGIN_ID234          5.912e-01  1.306e-01     4.528 5.96e-06 ***\nORIGIN_ID235          1.493e-01  1.307e-01     1.142 0.253389    \nORIGIN_ID251          5.407e-01  1.340e-01     4.037 5.42e-05 ***\nORIGIN_ID252          1.709e-02  1.335e-01     0.128 0.898098    \nORIGIN_ID253          4.758e+00  1.270e-01    37.459  < 2e-16 ***\nORIGIN_ID254          3.962e-01  1.378e-01     2.875 0.004038 ** \nORIGIN_ID255         -6.102e-01  2.959e-01    -2.062 0.039200 *  \nORIGIN_ID268          1.284e+00  1.315e-01     9.762  < 2e-16 ***\nORIGIN_ID269         -9.166e-01  1.413e-01    -6.488 8.70e-11 ***\nORIGIN_ID270          1.286e+00  1.277e-01    10.068  < 2e-16 ***\nORIGIN_ID272          1.274e+00  1.289e-01     9.878  < 2e-16 ***\nORIGIN_ID285          4.454e-01  1.395e-01     3.192 0.001414 ** \nORIGIN_ID286          4.434e-01  1.321e-01     3.357 0.000789 ***\nORIGIN_ID287          3.244e-01  1.292e-01     2.510 0.012083 *  \nORIGIN_ID288          6.133e-01  1.350e-01     4.544 5.52e-06 ***\nORIGIN_ID289          2.099e+00  1.276e-01    16.445  < 2e-16 ***\nORIGIN_ID303         -2.570e-01  1.332e-01    -1.929 0.053698 .  \nORIGIN_ID304          2.182e-01  1.309e-01     1.668 0.095412 .  \nORIGIN_ID306          2.401e+00  1.276e-01    18.818  < 2e-16 ***\nORIGIN_ID307          1.476e+00  1.294e-01    11.406  < 2e-16 ***\nORIGIN_ID320          4.765e-02  1.385e-01     0.344 0.730808    \nORIGIN_ID321          6.211e-01  1.320e-01     4.704 2.55e-06 ***\nORIGIN_ID322          1.257e+00  1.281e-01     9.807  < 2e-16 ***\nORIGIN_ID323          4.618e+00  1.270e-01    36.348  < 2e-16 ***\nORIGIN_ID324          2.047e+00  1.282e-01    15.964  < 2e-16 ***\nORIGIN_ID325         -2.210e+00  2.877e-01    -7.680 1.59e-14 ***\nORIGIN_ID338          1.183e+00  1.292e-01     9.158  < 2e-16 ***\nORIGIN_ID339          9.123e-01  1.295e-01     7.047 1.83e-12 ***\nORIGIN_ID340          2.891e+00  1.271e-01    22.737  < 2e-16 ***\nORIGIN_ID341          4.101e+00  1.270e-01    32.281  < 2e-16 ***\nORIGIN_ID342          9.876e-01  1.293e-01     7.639 2.19e-14 ***\nORIGIN_ID343         -1.975e-01  1.404e-01    -1.407 0.159341    \nORIGIN_ID353         -2.922e-01  1.433e-01    -2.039 0.041451 *  \nORIGIN_ID354          8.103e-01  1.293e-01     6.265 3.72e-10 ***\nORIGIN_ID355          1.768e+00  1.275e-01    13.871  < 2e-16 ***\nORIGIN_ID356          3.822e+00  1.270e-01    30.084  < 2e-16 ***\nORIGIN_ID357          2.878e+00  1.273e-01    22.602  < 2e-16 ***\nORIGIN_ID358          6.044e-01  1.329e-01     4.546 5.46e-06 ***\nORIGIN_ID359          1.250e+00  1.295e-01     9.653  < 2e-16 ***\nORIGIN_ID360         -1.159e+00  2.404e-01    -4.821 1.43e-06 ***\nORIGIN_ID361         -9.272e-01  2.441e-01    -3.798 0.000146 ***\nORIGIN_ID370          1.911e-01  1.318e-01     1.449 0.147230    \nORIGIN_ID371         -3.997e-01  1.666e-01    -2.399 0.016442 *  \nORIGIN_ID372          3.809e+00  1.271e-01    29.979  < 2e-16 ***\nORIGIN_ID373          4.500e+00  1.270e-01    35.425  < 2e-16 ***\nORIGIN_ID375         -1.104e+00  1.532e-01    -7.204 5.84e-13 ***\nORIGIN_ID376         -1.661e+00  1.827e-01    -9.093  < 2e-16 ***\nORIGIN_ID378         -8.282e-01  1.602e-01    -5.171 2.33e-07 ***\nORIGIN_ID379          1.471e+00  1.343e-01    10.960  < 2e-16 ***\nORIGIN_ID386         -1.248e-01  1.387e-01    -0.900 0.368369    \nORIGIN_ID387         -2.971e-01  1.373e-01    -2.163 0.030555 *  \nORIGIN_ID388          1.684e+00  1.287e-01    13.080  < 2e-16 ***\nORIGIN_ID389          4.810e+00  1.270e-01    37.874  < 2e-16 ***\nORIGIN_ID390          4.067e+00  1.271e-01    32.011  < 2e-16 ***\nORIGIN_ID395         -1.773e+00  1.008e+00    -1.759 0.078542 .  \nORIGIN_ID396         -1.191e+00  1.803e-01    -6.604 4.00e-11 ***\nORIGIN_ID406         -1.615e+00  1.604e-01   -10.067  < 2e-16 ***\nORIGIN_ID407          1.219e+00  1.288e-01     9.459  < 2e-16 ***\nORIGIN_ID408          1.864e+00  1.273e-01    14.641  < 2e-16 ***\nORIGIN_ID409          3.187e+00  1.271e-01    25.080  < 2e-16 ***\nORIGIN_ID411         -2.225e+00  2.404e-01    -9.256  < 2e-16 ***\nORIGIN_ID416         -8.059e-01  1.674e-01    -4.813 1.48e-06 ***\nORIGIN_ID417          1.176e+00  1.623e-01     7.246 4.29e-13 ***\nORIGIN_ID424          2.209e-01  1.326e-01     1.666 0.095803 .  \nORIGIN_ID425          4.106e-01  1.295e-01     3.172 0.001516 ** \nORIGIN_ID426          2.407e+00  1.271e-01    18.932  < 2e-16 ***\nORIGIN_ID427          2.040e+00  1.275e-01    16.000  < 2e-16 ***\nORIGIN_ID434         -1.041e-01  2.250e-01    -0.463 0.643652    \nORIGIN_ID435          1.622e+00  1.401e-01    11.578  < 2e-16 ***\nORIGIN_ID441          5.265e-02  1.348e-01     0.391 0.696052    \nORIGIN_ID442         -2.166e+00  1.796e-01   -12.059  < 2e-16 ***\nORIGIN_ID443          2.096e-01  1.294e-01     1.619 0.105389    \nORIGIN_ID444          4.011e+00  1.270e-01    31.576  < 2e-16 ***\nORIGIN_ID446         -1.028e-01  1.430e-01    -0.719 0.472337    \nORIGIN_ID462          1.282e+00  1.282e-01     9.999  < 2e-16 ***\nORIGIN_ID463          1.306e+00  1.278e-01    10.213  < 2e-16 ***\nORIGIN_ID464          2.583e+00  1.271e-01    20.314  < 2e-16 ***\nORIGIN_ID465          3.623e+00  1.271e-01    28.512  < 2e-16 ***\nORIGIN_ID467          3.765e+00  1.272e-01    29.604  < 2e-16 ***\nORIGIN_ID480          1.879e+00  1.279e-01    14.696  < 2e-16 ***\nORIGIN_ID481          2.477e+00  1.272e-01    19.481  < 2e-16 ***\nORIGIN_ID482          3.527e+00  1.271e-01    27.758  < 2e-16 ***\nORIGIN_ID483          3.933e+00  1.270e-01    30.959  < 2e-16 ***\nORIGIN_ID501         -1.369e+00  1.553e-01    -8.815  < 2e-16 ***\nORIGIN_ID502          3.564e+00  1.271e-01    28.048  < 2e-16 ***\nORIGIN_ID503          2.635e+00  1.272e-01    20.724  < 2e-16 ***\nORIGIN_ID504          3.909e+00  1.270e-01    30.768  < 2e-16 ***\nORIGIN_ID506          6.770e-01  1.309e-01     5.172 2.32e-07 ***\nORIGIN_ID521         -1.209e+00  1.643e-01    -7.359 1.85e-13 ***\nORIGIN_ID522          1.861e+00  1.274e-01    14.600  < 2e-16 ***\nORIGIN_ID523          2.670e+00  1.272e-01    20.990  < 2e-16 ***\nORIGIN_ID524          2.782e+00  1.271e-01    21.890  < 2e-16 ***\nORIGIN_ID543          2.490e+00  1.273e-01    19.569  < 2e-16 ***\nORIGIN_ID544          3.138e+00  1.271e-01    24.689  < 2e-16 ***\nORIGIN_ID546          8.645e-02  1.332e-01     0.649 0.516492    \nORIGIN_ID558          1.654e+00  1.278e-01    12.941  < 2e-16 ***\nORIGIN_ID559          5.835e-01  1.297e-01     4.499 6.84e-06 ***\nORIGIN_ID560          3.102e-01  1.285e-01     2.415 0.015747 *  \nORIGIN_ID561          3.463e+00  1.270e-01    27.256  < 2e-16 ***\nORIGIN_ID569         -2.673e-01  1.472e-01    -1.817 0.069249 .  \nORIGIN_ID575         -1.200e-01  1.343e-01    -0.894 0.371436    \nORIGIN_ID576          2.787e+00  1.272e-01    21.916  < 2e-16 ***\nORIGIN_ID577         -4.217e-01  1.299e-01    -3.245 0.001173 ** \nORIGIN_ID578          3.116e+00  1.271e-01    24.527  < 2e-16 ***\nORIGIN_ID579          3.307e+00  1.271e-01    26.015  < 2e-16 ***\nORIGIN_ID581          4.773e+00  1.270e-01    37.570  < 2e-16 ***\nORIGIN_ID582          9.148e-01  1.335e-01     6.853 7.24e-12 ***\nORIGIN_ID594          3.485e+00  1.271e-01    27.429  < 2e-16 ***\nORIGIN_ID595          3.830e+00  1.270e-01    30.152  < 2e-16 ***\nORIGIN_ID596          3.054e+00  1.271e-01    24.029  < 2e-16 ***\nORIGIN_ID597          3.754e+00  1.271e-01    29.543  < 2e-16 ***\nORIGIN_ID598          2.729e+00  1.277e-01    21.380  < 2e-16 ***\nORIGIN_ID599          3.808e+00  1.271e-01    29.974  < 2e-16 ***\nORIGIN_ID600          4.133e+00  1.271e-01    32.514  < 2e-16 ***\nORIGIN_ID604         -2.569e+00  2.738e-01    -9.384  < 2e-16 ***\nORIGIN_ID609         -1.460e+00  1.499e-01    -9.744  < 2e-16 ***\nORIGIN_ID610          2.026e+00  1.273e-01    15.915  < 2e-16 ***\nORIGIN_ID611          1.152e+00  1.276e-01     9.027  < 2e-16 ***\nORIGIN_ID612          3.844e+00  1.270e-01    30.264  < 2e-16 ***\nORIGIN_ID613          3.425e+00  1.270e-01    26.961  < 2e-16 ***\nORIGIN_ID614          3.499e+00  1.271e-01    27.536  < 2e-16 ***\nORIGIN_ID615          4.801e+00  1.270e-01    37.792  < 2e-16 ***\nORIGIN_ID616          4.274e+00  1.270e-01    33.646  < 2e-16 ***\nORIGIN_ID617          8.834e-01  1.303e-01     6.782 1.19e-11 ***\nORIGIN_ID620          1.954e+00  1.279e-01    15.280  < 2e-16 ***\nORIGIN_ID624          1.119e-01  1.323e-01     0.845 0.397997    \nORIGIN_ID625          7.340e-01  1.309e-01     5.609 2.03e-08 ***\nORIGIN_ID626          2.485e+00  1.271e-01    19.550  < 2e-16 ***\nORIGIN_ID627          1.562e+00  1.273e-01    12.265  < 2e-16 ***\nORIGIN_ID628          3.293e+00  1.271e-01    25.919  < 2e-16 ***\nORIGIN_ID629          2.885e+00  1.271e-01    22.697  < 2e-16 ***\nORIGIN_ID630          2.384e+00  1.272e-01    18.741  < 2e-16 ***\nORIGIN_ID631          3.520e+00  1.271e-01    27.701  < 2e-16 ***\nORIGIN_ID632          3.764e+00  1.271e-01    29.619  < 2e-16 ***\nORIGIN_ID633          4.656e+00  1.271e-01    36.629  < 2e-16 ***\nORIGIN_ID635          7.308e-01  1.296e-01     5.639 1.71e-08 ***\nORIGIN_ID641          3.488e-01  1.312e-01     2.659 0.007828 ** \nORIGIN_ID642          2.415e+00  1.272e-01    18.983  < 2e-16 ***\nORIGIN_ID643          1.232e+00  1.278e-01     9.638  < 2e-16 ***\nORIGIN_ID645          3.883e+00  1.270e-01    30.568  < 2e-16 ***\nORIGIN_ID646          3.235e+00  1.271e-01    25.450  < 2e-16 ***\nORIGIN_ID647          2.848e+00  1.271e-01    22.408  < 2e-16 ***\nORIGIN_ID649          3.596e+00  1.271e-01    28.286  < 2e-16 ***\nORIGIN_ID650          1.029e+00  1.299e-01     7.920 2.37e-15 ***\nORIGIN_ID651          4.534e-01  1.303e-01     3.479 0.000503 ***\nORIGIN_ID652         -7.966e-02  1.324e-01    -0.601 0.547528    \nORIGIN_ID658         -2.321e-01  1.347e-01    -1.723 0.084925 .  \nORIGIN_ID659          8.726e-01  1.281e-01     6.813 9.53e-12 ***\nORIGIN_ID660          2.377e+00  1.272e-01    18.692  < 2e-16 ***\nORIGIN_ID661          3.490e+00  1.271e-01    27.452  < 2e-16 ***\nORIGIN_ID662          3.684e+00  1.270e-01    29.000  < 2e-16 ***\nORIGIN_ID663          3.525e+00  1.271e-01    27.732  < 2e-16 ***\nORIGIN_ID665          3.738e+00  1.271e-01    29.415  < 2e-16 ***\nORIGIN_ID666          2.228e+00  1.273e-01    17.507  < 2e-16 ***\nORIGIN_ID667          2.899e+00  1.272e-01    22.791  < 2e-16 ***\nORIGIN_ID668          2.869e-01  1.308e-01     2.193 0.028287 *  \nORIGIN_ID669         -1.479e+00  1.492e-01    -9.911  < 2e-16 ***\nORIGIN_ID670         -5.947e-01  1.796e-01    -3.311 0.000928 ***\nORIGIN_ID676          2.390e+00  1.276e-01    18.722  < 2e-16 ***\nORIGIN_ID677          1.671e+00  1.274e-01    13.120  < 2e-16 ***\nORIGIN_ID678          9.307e-01  1.280e-01     7.270 3.59e-13 ***\nORIGIN_ID679          2.592e+00  1.272e-01    20.380  < 2e-16 ***\nORIGIN_ID680          3.357e+00  1.271e-01    26.418  < 2e-16 ***\nORIGIN_ID682          3.261e+00  1.271e-01    25.667  < 2e-16 ***\nORIGIN_ID683          3.502e+00  1.271e-01    27.557  < 2e-16 ***\nORIGIN_ID684          1.055e+00  1.284e-01     8.213  < 2e-16 ***\nORIGIN_ID685          1.957e+00  1.277e-01    15.333  < 2e-16 ***\nORIGIN_ID686         -2.417e-01  1.315e-01    -1.838 0.066119 .  \nORIGIN_ID687          1.158e+00  1.290e-01     8.980  < 2e-16 ***\nORIGIN_ID696          2.511e+00  1.275e-01    19.696  < 2e-16 ***\nORIGIN_ID697          2.986e+00  1.271e-01    23.498  < 2e-16 ***\nORIGIN_ID698          2.665e+00  1.271e-01    20.966  < 2e-16 ***\nORIGIN_ID699          1.300e+00  1.276e-01    10.186  < 2e-16 ***\nORIGIN_ID700          2.781e+00  1.271e-01    21.880  < 2e-16 ***\nORIGIN_ID701          2.842e+00  1.271e-01    22.354  < 2e-16 ***\nORIGIN_ID702          2.581e-01  1.287e-01     2.005 0.045015 *  \nORIGIN_ID703          3.462e+00  1.270e-01    27.254  < 2e-16 ***\nORIGIN_ID707         -6.093e-01  1.448e-01    -4.209 2.57e-05 ***\nORIGIN_ID716          1.399e+00  1.278e-01    10.949  < 2e-16 ***\nORIGIN_ID717          3.611e+00  1.271e-01    28.424  < 2e-16 ***\nORIGIN_ID718          4.515e+00  1.270e-01    35.550  < 2e-16 ***\nORIGIN_ID719          1.330e+00  1.285e-01    10.344  < 2e-16 ***\nORIGIN_ID720          1.386e+00  1.277e-01    10.852  < 2e-16 ***\nORIGIN_ID722          2.146e+00  1.273e-01    16.861  < 2e-16 ***\nORIGIN_ID723          3.789e+00  1.270e-01    29.823  < 2e-16 ***\nORIGIN_ID724          2.758e+00  1.273e-01    21.671  < 2e-16 ***\nORIGIN_ID726          5.532e-01  1.353e-01     4.088 4.35e-05 ***\nORIGIN_ID727          4.402e+00  1.270e-01    34.647  < 2e-16 ***\nORIGIN_ID728          3.073e+00  1.273e-01    24.134  < 2e-16 ***\nORIGIN_ID735         -1.787e+00  2.028e-01    -8.810  < 2e-16 ***\nORIGIN_ID736          2.246e+00  1.272e-01    17.659  < 2e-16 ***\nORIGIN_ID737          3.495e+00  1.270e-01    27.511  < 2e-16 ***\nORIGIN_ID738          2.898e+00  1.272e-01    22.792  < 2e-16 ***\nORIGIN_ID739          8.847e-01  1.290e-01     6.860 6.90e-12 ***\nORIGIN_ID740          1.074e+00  1.277e-01     8.410  < 2e-16 ***\nORIGIN_ID741          2.698e+00  1.271e-01    21.223  < 2e-16 ***\nORIGIN_ID742          1.408e+00  1.275e-01    11.041  < 2e-16 ***\nORIGIN_ID743          3.495e+00  1.271e-01    27.505  < 2e-16 ***\nORIGIN_ID747          2.301e-01  1.305e-01     1.763 0.077880 .  \nORIGIN_ID748          4.528e+00  1.270e-01    35.640  < 2e-16 ***\nORIGIN_ID757          1.892e+00  1.273e-01    14.868  < 2e-16 ***\nORIGIN_ID758          2.556e+00  1.271e-01    20.102  < 2e-16 ***\nORIGIN_ID759          2.779e+00  1.271e-01    21.862  < 2e-16 ***\nORIGIN_ID761          2.808e+00  1.271e-01    22.096  < 2e-16 ***\nORIGIN_ID762          8.118e-01  1.280e-01     6.342 2.27e-10 ***\nORIGIN_ID763          1.700e+00  1.275e-01    13.329  < 2e-16 ***\nORIGIN_ID764          3.923e+00  1.270e-01    30.884  < 2e-16 ***\nORIGIN_ID765          4.425e+00  1.271e-01    34.828  < 2e-16 ***\nORIGIN_ID767         -9.243e-01  2.095e-01    -4.411 1.03e-05 ***\nORIGIN_ID769          2.464e+00  1.272e-01    19.375  < 2e-16 ***\nORIGIN_ID770          4.845e+00  1.270e-01    38.140  < 2e-16 ***\nORIGIN_ID775          2.014e+00  1.273e-01    15.819  < 2e-16 ***\nORIGIN_ID776          5.414e-01  1.293e-01     4.186 2.84e-05 ***\nORIGIN_ID777          1.191e+00  1.275e-01     9.343  < 2e-16 ***\nORIGIN_ID778          2.148e+00  1.272e-01    16.891  < 2e-16 ***\nORIGIN_ID780          2.242e+00  1.272e-01    17.619  < 2e-16 ***\nORIGIN_ID782          3.081e+00  1.272e-01    24.219  < 2e-16 ***\nORIGIN_ID783          3.065e+00  1.272e-01    24.094  < 2e-16 ***\nORIGIN_ID787          3.844e+00  1.271e-01    30.258  < 2e-16 ***\nORIGIN_ID788          3.879e+00  1.270e-01    30.528  < 2e-16 ***\nORIGIN_ID795         -2.094e+00  2.224e-01    -9.415  < 2e-16 ***\nORIGIN_ID796          6.008e-01  1.289e-01     4.661 3.15e-06 ***\nORIGIN_ID797          1.795e+00  1.275e-01    14.077  < 2e-16 ***\nORIGIN_ID798          1.483e+00  1.274e-01    11.636  < 2e-16 ***\nORIGIN_ID799          3.157e+00  1.271e-01    24.843  < 2e-16 ***\nORIGIN_ID801          4.673e-01  1.308e-01     3.572 0.000354 ***\nORIGIN_ID802          5.374e+00  1.271e-01    42.285  < 2e-16 ***\nORIGIN_ID805          1.994e+00  1.283e-01    15.549  < 2e-16 ***\nORIGIN_ID807          3.155e+00  1.271e-01    24.825  < 2e-16 ***\nORIGIN_ID808          3.310e+00  1.271e-01    26.040  < 2e-16 ***\nORIGIN_ID813          9.730e-01  1.278e-01     7.614 2.66e-14 ***\nORIGIN_ID814         -1.663e-01  1.297e-01    -1.282 0.199847    \nORIGIN_ID815          2.794e+00  1.271e-01    21.983  < 2e-16 ***\nORIGIN_ID816          1.274e+00  1.275e-01     9.989  < 2e-16 ***\nORIGIN_ID817          2.854e+00  1.271e-01    22.454  < 2e-16 ***\nORIGIN_ID825          2.762e+00  1.272e-01    21.706  < 2e-16 ***\nORIGIN_ID826          3.510e+00  1.271e-01    27.621  < 2e-16 ***\nORIGIN_ID827         -4.657e-01  1.364e-01    -3.414 0.000640 ***\nORIGIN_ID831          3.219e+00  1.271e-01    25.333  < 2e-16 ***\nORIGIN_ID832          2.552e+00  1.271e-01    20.071  < 2e-16 ***\nORIGIN_ID833          3.231e+00  1.271e-01    25.428  < 2e-16 ***\nORIGIN_ID834          1.319e+00  1.275e-01    10.348  < 2e-16 ***\nORIGIN_ID842         -1.742e+00  1.880e-01    -9.266  < 2e-16 ***\nORIGIN_ID844          3.323e+00  1.271e-01    26.150  < 2e-16 ***\nORIGIN_ID845          3.391e+00  1.272e-01    26.667  < 2e-16 ***\nORIGIN_ID850          1.246e+00  1.278e-01     9.750  < 2e-16 ***\nORIGIN_ID851         -4.213e-01  1.361e-01    -3.096 0.001965 ** \nORIGIN_ID852          1.662e+00  1.273e-01    13.062  < 2e-16 ***\nORIGIN_ID853          2.651e+00  1.271e-01    20.858  < 2e-16 ***\nORIGIN_ID854         -6.516e-03  1.294e-01    -0.050 0.959832    \nORIGIN_ID855          2.264e+00  1.272e-01    17.800  < 2e-16 ***\nORIGIN_ID861          3.175e-02  1.417e-01     0.224 0.822705    \nORIGIN_ID863          2.765e+00  1.272e-01    21.737  < 2e-16 ***\nORIGIN_ID864          4.810e+00  1.270e-01    37.866  < 2e-16 ***\nORIGIN_ID865          2.644e+00  1.274e-01    20.752  < 2e-16 ***\nORIGIN_ID869         -1.174e-01  1.350e-01    -0.870 0.384487    \nORIGIN_ID870         -5.962e-02  1.321e-01    -0.451 0.651792    \nORIGIN_ID871          3.250e+00  1.270e-01    25.582  < 2e-16 ***\nORIGIN_ID872          5.876e-01  1.279e-01     4.594 4.34e-06 ***\nORIGIN_ID873         -8.717e-01  1.368e-01    -6.373 1.85e-10 ***\nORIGIN_ID880         -1.237e+00  1.602e-01    -7.722 1.14e-14 ***\nORIGIN_ID882          3.751e+00  1.271e-01    29.523  < 2e-16 ***\nORIGIN_ID883          3.192e+00  1.271e-01    25.106  < 2e-16 ***\nORIGIN_ID887          1.907e+00  1.273e-01    14.975  < 2e-16 ***\nORIGIN_ID888          2.474e-01  1.286e-01     1.923 0.054430 .  \nORIGIN_ID889          1.297e-01  1.289e-01     1.006 0.314380    \nORIGIN_ID890          2.309e+00  1.271e-01    18.165  < 2e-16 ***\nORIGIN_ID891          9.666e-01  1.278e-01     7.566 3.84e-14 ***\nORIGIN_ID892          1.056e+00  1.277e-01     8.270  < 2e-16 ***\nORIGIN_ID899          6.734e-01  1.404e-01     4.796 1.62e-06 ***\nORIGIN_ID900          3.369e+00  1.272e-01    26.481  < 2e-16 ***\nORIGIN_ID901          4.298e+00  1.270e-01    33.831  < 2e-16 ***\nORIGIN_ID902          2.851e+00  1.274e-01    22.386  < 2e-16 ***\nORIGIN_ID905          1.283e+00  1.298e-01     9.883  < 2e-16 ***\nORIGIN_ID907          9.671e-01  1.274e-01     7.589 3.23e-14 ***\nORIGIN_ID908          3.222e+00  1.270e-01    25.363  < 2e-16 ***\nORIGIN_ID910          2.362e+00  1.271e-01    18.578  < 2e-16 ***\nORIGIN_ID917          1.419e-01  1.636e-01     0.867 0.385673    \nORIGIN_ID919          4.394e+00  1.270e-01    34.588  < 2e-16 ***\nORIGIN_ID920          4.183e+00  1.270e-01    32.929  < 2e-16 ***\nORIGIN_ID921          6.033e-01  1.302e-01     4.634 3.58e-06 ***\nORIGIN_ID925          1.278e+00  1.274e-01    10.033  < 2e-16 ***\nORIGIN_ID926          2.586e+00  1.271e-01    20.350  < 2e-16 ***\nORIGIN_ID927          2.197e+00  1.271e-01    17.283  < 2e-16 ***\nORIGIN_ID928          1.269e+00  1.273e-01     9.965  < 2e-16 ***\nORIGIN_ID937          2.125e-01  1.356e-01     1.567 0.117055    \nORIGIN_ID938          2.812e+00  1.274e-01    22.079  < 2e-16 ***\nORIGIN_ID939          4.273e+00  1.270e-01    33.639  < 2e-16 ***\nORIGIN_ID940          3.081e+00  1.272e-01    24.230  < 2e-16 ***\nORIGIN_ID941          6.273e-01  1.300e-01     4.827 1.38e-06 ***\nORIGIN_ID944          7.085e-01  1.278e-01     5.543 2.97e-08 ***\nORIGIN_ID945          1.515e+00  1.272e-01    11.906  < 2e-16 ***\nORIGIN_ID946          2.755e+00  1.271e-01    21.676  < 2e-16 ***\nORIGIN_ID947          1.468e+00  1.273e-01    11.529  < 2e-16 ***\nORIGIN_ID948          2.614e+00  1.271e-01    20.569  < 2e-16 ***\nORIGIN_ID949          7.329e-01  1.278e-01     5.734 9.79e-09 ***\nORIGIN_ID956         -5.090e-01  1.640e-01    -3.104 0.001908 ** \nORIGIN_ID958          3.309e+00  1.271e-01    26.028  < 2e-16 ***\nORIGIN_ID959          3.945e+00  1.271e-01    31.050  < 2e-16 ***\nORIGIN_ID960          2.020e+00  1.275e-01    15.841  < 2e-16 ***\nORIGIN_ID961         -3.042e+00  4.649e-01    -6.544 6.00e-11 ***\nORIGIN_ID964          3.044e+00  1.271e-01    23.949  < 2e-16 ***\nORIGIN_ID965          2.656e+00  1.271e-01    20.898  < 2e-16 ***\nORIGIN_ID966          1.685e+00  1.276e-01    13.203  < 2e-16 ***\nORIGIN_ID967          1.099e+00  1.275e-01     8.617  < 2e-16 ***\nORIGIN_ID968          2.441e+00  1.271e-01    19.204  < 2e-16 ***\nORIGIN_ID975         -1.915e+00  2.277e-01    -8.411  < 2e-16 ***\nORIGIN_ID976         -2.208e-01  1.566e-01    -1.410 0.158588    \nORIGIN_ID978          3.503e+00  1.273e-01    27.513  < 2e-16 ***\nORIGIN_ID979          2.943e+00  1.277e-01    23.037  < 2e-16 ***\nORIGIN_ID980          2.059e+00  1.276e-01    16.136  < 2e-16 ***\nORIGIN_ID982          3.078e+00  1.271e-01    24.222  < 2e-16 ***\nORIGIN_ID983          1.971e+00  1.272e-01    15.499  < 2e-16 ***\nORIGIN_ID984          2.545e+00  1.271e-01    20.029  < 2e-16 ***\nORIGIN_ID985         -3.690e-02  1.287e-01    -0.287 0.774295    \nORIGIN_ID986          6.738e-02  1.284e-01     0.525 0.599602    \nORIGIN_ID987          1.570e-01  1.356e-01     1.157 0.247116    \nORIGIN_ID993         -2.362e+00  2.572e-01    -9.186  < 2e-16 ***\nORIGIN_ID997          2.970e+00  1.271e-01    23.358  < 2e-16 ***\nORIGIN_ID998         -7.652e-01  1.400e-01    -5.467 4.57e-08 ***\nORIGIN_ID999          8.354e-01  1.313e-01     6.361 2.01e-10 ***\nORIGIN_ID1002         1.907e+00  1.272e-01    14.994  < 2e-16 ***\nORIGIN_ID1003         3.059e+00  1.270e-01    24.081  < 2e-16 ***\nORIGIN_ID1004         4.255e-01  1.283e-01     3.316 0.000913 ***\nORIGIN_ID1006         2.037e+00  1.272e-01    16.017  < 2e-16 ***\nORIGIN_ID1013         4.877e-01  1.352e-01     3.607 0.000310 ***\nORIGIN_ID1016         7.120e-01  1.305e-01     5.457 4.84e-08 ***\nORIGIN_ID1017         4.119e+00  1.271e-01    32.420  < 2e-16 ***\nORIGIN_ID1018         1.641e+00  1.277e-01    12.849  < 2e-16 ***\nORIGIN_ID1021         1.379e+00  1.273e-01    10.836  < 2e-16 ***\nORIGIN_ID1022         2.447e+00  1.271e-01    19.256  < 2e-16 ***\nORIGIN_ID1023         1.183e+00  1.274e-01     9.289  < 2e-16 ***\nORIGIN_ID1024         1.459e+00  1.273e-01    11.462  < 2e-16 ***\nORIGIN_ID1026         8.553e-02  1.314e-01     0.651 0.515165    \nORIGIN_ID1027        -1.628e+00  1.861e-01    -8.746  < 2e-16 ***\nORIGIN_ID1031        -2.556e+00  2.177e-01   -11.744  < 2e-16 ***\nORIGIN_ID1032         3.333e+00  1.271e-01    26.222  < 2e-16 ***\nORIGIN_ID1036         4.052e+00  1.270e-01    31.895  < 2e-16 ***\nORIGIN_ID1037         2.898e+00  1.271e-01    22.792  < 2e-16 ***\nORIGIN_ID1040         3.342e+00  1.271e-01    26.306  < 2e-16 ***\nORIGIN_ID1041         3.096e+00  1.271e-01    24.365  < 2e-16 ***\nORIGIN_ID1042         2.725e+00  1.271e-01    21.446  < 2e-16 ***\nORIGIN_ID1043        -7.829e-01  1.308e-01    -5.985 2.17e-09 ***\nORIGIN_ID1045         7.679e-01  1.279e-01     6.002 1.95e-09 ***\nORIGIN_ID1046        -5.813e-01  1.357e-01    -4.283 1.84e-05 ***\nORIGIN_ID1051        -1.927e+00  1.775e-01   -10.855  < 2e-16 ***\nORIGIN_ID1052         2.122e+00  1.275e-01    16.651  < 2e-16 ***\nORIGIN_ID1053        -7.232e-02  1.315e-01    -0.550 0.582353    \nORIGIN_ID1055         1.743e+00  1.279e-01    13.629  < 2e-16 ***\nORIGIN_ID1056         3.835e+00  1.271e-01    30.184  < 2e-16 ***\nORIGIN_ID1060         2.417e+00  1.271e-01    19.015  < 2e-16 ***\nORIGIN_ID1061         3.103e+00  1.270e-01    24.422  < 2e-16 ***\nORIGIN_ID1062         1.975e+00  1.271e-01    15.533  < 2e-16 ***\nORIGIN_ID1063         1.038e+00  1.274e-01     8.151 3.60e-16 ***\nORIGIN_ID1064         1.770e+00  1.273e-01    13.903  < 2e-16 ***\nORIGIN_ID1066        -2.632e+00  2.013e-01   -13.074  < 2e-16 ***\nORIGIN_ID1068         1.418e-01  1.318e-01     1.076 0.282071    \nORIGIN_ID1070        -1.040e+00  1.411e-01    -7.373 1.67e-13 ***\nORIGIN_ID1072        -1.987e+00  1.727e-01   -11.506  < 2e-16 ***\nORIGIN_ID1073         1.692e+00  1.275e-01    13.276  < 2e-16 ***\nORIGIN_ID1074         2.787e+00  1.271e-01    21.924  < 2e-16 ***\nORIGIN_ID1075         3.073e+00  1.271e-01    24.176  < 2e-16 ***\nORIGIN_ID1076         6.116e-01  1.309e-01     4.673 2.97e-06 ***\nORIGIN_ID1081         2.582e+00  1.271e-01    20.319  < 2e-16 ***\nORIGIN_ID1082         3.236e+00  1.270e-01    25.474  < 2e-16 ***\nORIGIN_ID1083         1.011e+00  1.273e-01     7.942 1.98e-15 ***\nORIGIN_ID1084         1.035e+00  1.275e-01     8.118 4.74e-16 ***\nORIGIN_ID1085         2.374e+00  1.271e-01    18.676  < 2e-16 ***\nORIGIN_ID1088         2.359e+00  1.272e-01    18.548  < 2e-16 ***\nORIGIN_ID1089         2.128e+00  1.273e-01    16.715  < 2e-16 ***\nORIGIN_ID1090         1.835e+00  1.275e-01    14.394  < 2e-16 ***\nORIGIN_ID1092         1.241e+00  1.282e-01     9.677  < 2e-16 ***\nORIGIN_ID1094         3.859e+00  1.270e-01    30.373  < 2e-16 ***\nORIGIN_ID1095         2.659e+00  1.272e-01    20.906  < 2e-16 ***\nORIGIN_ID1096         3.284e+00  1.271e-01    25.831  < 2e-16 ***\nORIGIN_ID1102        -1.408e+00  1.366e-01   -10.306  < 2e-16 ***\nORIGIN_ID1103         2.243e+00  1.273e-01    17.616  < 2e-16 ***\nORIGIN_ID1104         1.866e+00  1.271e-01    14.680  < 2e-16 ***\nORIGIN_ID1105         2.526e+00  1.271e-01    19.877  < 2e-16 ***\nORIGIN_ID1106         1.628e+00  1.273e-01    12.788  < 2e-16 ***\nORIGIN_ID1108        -1.032e+00  1.355e-01    -7.616 2.61e-14 ***\nORIGIN_ID1109         2.085e+00  1.272e-01    16.389  < 2e-16 ***\nORIGIN_ID1110         1.671e+00  1.274e-01    13.119  < 2e-16 ***\nORIGIN_ID1111         1.495e+00  1.275e-01    11.728  < 2e-16 ***\nORIGIN_ID1112         1.738e-02  1.407e-01     0.124 0.901699    \nORIGIN_ID1113        -1.327e+00  1.716e-01    -7.732 1.06e-14 ***\nORIGIN_ID1114         2.237e+00  1.272e-01    17.583  < 2e-16 ***\nORIGIN_ID1115         2.810e+00  1.271e-01    22.101  < 2e-16 ***\nORIGIN_ID1116         3.289e+00  1.271e-01    25.881  < 2e-16 ***\nORIGIN_ID1117         4.309e+00  1.271e-01    33.914  < 2e-16 ***\nORIGIN_ID1118         2.719e-01  1.334e-01     2.039 0.041467 *  \nORIGIN_ID1125         2.028e+00  1.271e-01    15.953  < 2e-16 ***\nORIGIN_ID1126         2.047e+00  1.271e-01    16.103  < 2e-16 ***\nORIGIN_ID1127        -3.388e-01  1.284e-01    -2.638 0.008339 ** \nORIGIN_ID1128         1.784e+00  1.272e-01    14.032  < 2e-16 ***\nORIGIN_ID1129         9.917e-01  1.276e-01     7.770 7.82e-15 ***\nORIGIN_ID1130         4.554e-01  1.279e-01     3.561 0.000370 ***\nORIGIN_ID1133         2.887e+00  1.271e-01    22.718  < 2e-16 ***\nORIGIN_ID1134         2.481e+00  1.272e-01    19.513  < 2e-16 ***\nORIGIN_ID1135         1.593e+00  1.278e-01    12.464  < 2e-16 ***\nORIGIN_ID1137         4.251e+00  1.270e-01    33.463  < 2e-16 ***\nORIGIN_ID1138         4.097e+00  1.270e-01    32.251  < 2e-16 ***\nORIGIN_ID1139         2.624e+00  1.272e-01    20.628  < 2e-16 ***\nORIGIN_ID1140         1.688e-01  1.388e-01     1.217 0.223734    \nORIGIN_ID1141         1.048e+00  1.334e-01     7.859 3.89e-15 ***\nORIGIN_ID1146         6.690e-01  1.278e-01     5.235 1.65e-07 ***\nORIGIN_ID1147         2.159e+00  1.271e-01    16.990  < 2e-16 ***\nORIGIN_ID1148         1.489e+00  1.272e-01    11.706  < 2e-16 ***\nORIGIN_ID1149         8.770e-01  1.278e-01     6.861 6.83e-12 ***\nORIGIN_ID1150         1.143e+00  1.274e-01     8.977  < 2e-16 ***\nORIGIN_ID1151         1.319e+00  1.273e-01    10.368  < 2e-16 ***\nORIGIN_ID1152         1.624e+00  1.272e-01    12.769  < 2e-16 ***\nORIGIN_ID1153         2.366e+00  1.271e-01    18.611  < 2e-16 ***\nORIGIN_ID1154         2.217e+00  1.272e-01    17.421  < 2e-16 ***\nORIGIN_ID1155         3.397e+00  1.271e-01    26.735  < 2e-16 ***\nORIGIN_ID1156         2.025e+00  1.273e-01    15.909  < 2e-16 ***\nORIGIN_ID1158         1.506e+00  1.279e-01    11.773  < 2e-16 ***\nORIGIN_ID1159         2.525e+00  1.272e-01    19.857  < 2e-16 ***\nORIGIN_ID1160         3.934e+00  1.270e-01    30.964  < 2e-16 ***\nORIGIN_ID1162         3.137e+00  1.279e-01    24.519  < 2e-16 ***\nORIGIN_ID1167         1.902e+00  1.271e-01    14.965  < 2e-16 ***\nORIGIN_ID1168         1.493e+00  1.272e-01    11.740  < 2e-16 ***\nORIGIN_ID1169         1.307e+00  1.272e-01    10.276  < 2e-16 ***\nORIGIN_ID1170         1.286e+00  1.272e-01    10.107  < 2e-16 ***\nORIGIN_ID1171         1.924e+00  1.271e-01    15.134  < 2e-16 ***\nORIGIN_ID1172         2.212e+00  1.273e-01    17.380  < 2e-16 ***\nORIGIN_ID1173         6.171e-01  1.276e-01     4.835 1.33e-06 ***\nORIGIN_ID1174         2.796e+00  1.271e-01    22.000  < 2e-16 ***\nORIGIN_ID1175         3.252e+00  1.271e-01    25.592  < 2e-16 ***\nORIGIN_ID1176         2.777e+00  1.271e-01    21.842  < 2e-16 ***\nORIGIN_ID1177        -3.267e-01  1.333e-01    -2.450 0.014273 *  \nORIGIN_ID1179         4.165e+00  1.270e-01    32.782  < 2e-16 ***\nORIGIN_ID1180         3.199e+00  1.271e-01    25.174  < 2e-16 ***\nORIGIN_ID1181         2.546e+00  1.273e-01    19.991  < 2e-16 ***\nORIGIN_ID1188         8.757e-01  1.278e-01     6.854 7.18e-12 ***\nORIGIN_ID1189         2.026e+00  1.271e-01    15.941  < 2e-16 ***\nORIGIN_ID1190         7.526e-01  1.273e-01     5.911 3.40e-09 ***\nORIGIN_ID1192         2.299e+00  1.271e-01    18.088  < 2e-16 ***\nORIGIN_ID1193         2.915e+00  1.270e-01    22.941  < 2e-16 ***\nORIGIN_ID1194         3.039e+00  1.271e-01    23.912  < 2e-16 ***\nORIGIN_ID1195         2.599e+00  1.271e-01    20.451  < 2e-16 ***\nORIGIN_ID1196         3.220e+00  1.271e-01    25.341  < 2e-16 ***\nORIGIN_ID1197         2.277e+00  1.271e-01    17.910  < 2e-16 ***\nORIGIN_ID1198         1.578e+00  1.274e-01    12.385  < 2e-16 ***\nORIGIN_ID1201         4.429e+00  1.270e-01    34.866  < 2e-16 ***\nORIGIN_ID1202         3.955e+00  1.271e-01    31.126  < 2e-16 ***\nORIGIN_ID1210         1.110e+00  1.273e-01     8.719  < 2e-16 ***\nORIGIN_ID1211         1.240e+00  1.272e-01     9.750  < 2e-16 ***\nORIGIN_ID1212         2.248e+00  1.271e-01    17.694  < 2e-16 ***\nORIGIN_ID1213         1.187e+00  1.273e-01     9.326  < 2e-16 ***\nORIGIN_ID1214         2.349e+00  1.271e-01    18.475  < 2e-16 ***\nORIGIN_ID1215         3.694e+00  1.270e-01    29.080  < 2e-16 ***\nORIGIN_ID1216         2.117e+00  1.271e-01    16.651  < 2e-16 ***\nORIGIN_ID1217         3.075e+00  1.271e-01    24.200  < 2e-16 ***\nORIGIN_ID1218         4.249e+00  1.270e-01    33.452  < 2e-16 ***\nORIGIN_ID1219         4.018e+00  1.270e-01    31.633  < 2e-16 ***\nORIGIN_ID1220         1.394e+00  1.278e-01    10.905  < 2e-16 ***\nORIGIN_ID1222         2.735e+00  1.273e-01    21.490  < 2e-16 ***\nORIGIN_ID1223         4.463e+00  1.270e-01    35.129  < 2e-16 ***\nORIGIN_ID1233         1.002e+00  1.273e-01     7.874 3.43e-15 ***\nORIGIN_ID1234         1.668e+00  1.271e-01    13.126  < 2e-16 ***\nORIGIN_ID1235         2.497e+00  1.271e-01    19.656  < 2e-16 ***\nORIGIN_ID1236         1.692e+00  1.272e-01    13.308  < 2e-16 ***\nORIGIN_ID1237         2.305e+00  1.271e-01    18.140  < 2e-16 ***\nORIGIN_ID1238         2.731e+00  1.271e-01    21.492  < 2e-16 ***\nORIGIN_ID1239         2.566e+00  1.271e-01    20.191  < 2e-16 ***\nORIGIN_ID1240         3.099e+00  1.271e-01    24.393  < 2e-16 ***\nORIGIN_ID1241         2.929e+00  1.271e-01    23.043  < 2e-16 ***\nORIGIN_ID1245         2.911e+00  1.272e-01    22.888  < 2e-16 ***\nORIGIN_ID1253        -2.881e+00  1.626e-01   -17.721  < 2e-16 ***\nORIGIN_ID1254        -3.057e-01  1.279e-01    -2.391 0.016825 *  \nORIGIN_ID1255         2.020e+00  1.271e-01    15.895  < 2e-16 ***\nORIGIN_ID1256         3.081e+00  1.271e-01    24.246  < 2e-16 ***\nORIGIN_ID1257         3.091e+00  1.270e-01    24.331  < 2e-16 ***\nORIGIN_ID1258         3.993e+00  1.270e-01    31.435  < 2e-16 ***\nORIGIN_ID1259         2.902e+00  1.271e-01    22.838  < 2e-16 ***\nORIGIN_ID1260         1.411e+00  1.273e-01    11.081  < 2e-16 ***\nORIGIN_ID1261         3.632e+00  1.270e-01    28.586  < 2e-16 ***\nORIGIN_ID1263         2.249e+00  1.273e-01    17.664  < 2e-16 ***\nORIGIN_ID1266         3.149e+00  1.272e-01    24.755  < 2e-16 ***\nORIGIN_ID1272        -3.939e-01  1.288e-01    -3.057 0.002237 ** \nORIGIN_ID1273         4.776e-01  1.275e-01     3.746 0.000180 ***\nORIGIN_ID1274         1.742e+00  1.271e-01    13.705  < 2e-16 ***\nORIGIN_ID1275         1.926e+00  1.271e-01    15.152  < 2e-16 ***\nORIGIN_ID1276         2.904e+00  1.270e-01    22.860  < 2e-16 ***\nORIGIN_ID1277         2.711e+00  1.271e-01    21.334  < 2e-16 ***\nORIGIN_ID1278         1.071e+00  1.275e-01     8.405  < 2e-16 ***\nORIGIN_ID1279         3.683e+00  1.271e-01    28.991  < 2e-16 ***\nORIGIN_ID1280         2.559e+00  1.272e-01    20.119  < 2e-16 ***\nORIGIN_ID1281         1.344e+00  1.289e-01    10.431  < 2e-16 ***\nORIGIN_ID1283        -2.299e+00  2.077e-01   -11.067  < 2e-16 ***\nORIGIN_ID1289        -7.580e-01  1.536e-01    -4.935 8.00e-07 ***\nORIGIN_ID1290        -4.278e+00  1.008e+00    -4.244 2.19e-05 ***\nORIGIN_ID1291        -7.681e-01  1.293e-01    -5.939 2.87e-09 ***\nORIGIN_ID1292         9.317e-01  1.273e-01     7.317 2.53e-13 ***\nORIGIN_ID1293         2.138e+00  1.271e-01    16.823  < 2e-16 ***\nORIGIN_ID1294         2.819e+00  1.271e-01    22.184  < 2e-16 ***\nORIGIN_ID1295         3.777e+00  1.271e-01    29.721  < 2e-16 ***\nORIGIN_ID1296         6.965e-01  1.278e-01     5.449 5.06e-08 ***\nORIGIN_ID1297         7.537e-01  1.294e-01     5.824 5.74e-09 ***\nORIGIN_ID1298         1.892e+00  1.273e-01    14.865  < 2e-16 ***\nORIGIN_ID1300         4.010e-01  1.307e-01     3.068 0.002158 ** \nORIGIN_ID1301        -5.459e-01  1.415e-01    -3.858 0.000114 ***\nORIGIN_ID1302        -4.524e-01  1.366e-01    -3.313 0.000924 ***\nORIGIN_ID1307         8.327e-02  1.402e-01     0.594 0.552485    \nORIGIN_ID1308        -3.452e+00  1.008e+00    -3.425 0.000615 ***\nORIGIN_ID1310         2.253e+00  1.271e-01    17.731  < 2e-16 ***\nORIGIN_ID1311         1.771e+00  1.271e-01    13.927  < 2e-16 ***\nORIGIN_ID1312         2.275e+00  1.271e-01    17.898  < 2e-16 ***\nORIGIN_ID1313        -3.653e-01  1.346e-01    -2.714 0.006641 ** \nORIGIN_ID1314         2.378e+00  1.271e-01    18.711  < 2e-16 ***\nORIGIN_ID1315         2.059e+00  1.273e-01    16.173  < 2e-16 ***\nORIGIN_ID1316         2.017e+00  1.273e-01    15.840  < 2e-16 ***\nORIGIN_ID1317         1.414e+00  1.277e-01    11.075  < 2e-16 ***\nORIGIN_ID1320        -1.213e+00  1.591e-01    -7.623 2.49e-14 ***\nORIGIN_ID1325         2.042e+00  1.278e-01    15.973  < 2e-16 ***\nORIGIN_ID1326         2.318e+00  1.271e-01    18.239  < 2e-16 ***\nORIGIN_ID1327         3.161e+00  1.270e-01    24.883  < 2e-16 ***\nORIGIN_ID1328         2.740e+00  1.271e-01    21.561  < 2e-16 ***\nORIGIN_ID1329         1.386e+00  1.273e-01    10.882  < 2e-16 ***\nORIGIN_ID1330         1.885e+00  1.272e-01    14.818  < 2e-16 ***\nORIGIN_ID1331         3.144e+00  1.271e-01    24.741  < 2e-16 ***\nORIGIN_ID1332         2.288e-01  1.303e-01     1.756 0.079087 .  \nORIGIN_ID1333         2.898e+00  1.271e-01    22.794  < 2e-16 ***\nORIGIN_ID1334         4.942e-02  1.315e-01     0.376 0.707063    \nORIGIN_ID1338        -2.152e+00  2.877e-01    -7.480 7.43e-14 ***\nORIGIN_ID1339         2.839e+00  1.274e-01    22.273  < 2e-16 ***\nORIGIN_ID1341         1.427e+00  1.274e-01    11.200  < 2e-16 ***\nORIGIN_ID1342         3.104e+00  1.271e-01    24.429  < 2e-16 ***\nORIGIN_ID1343         2.829e+00  1.271e-01    22.261  < 2e-16 ***\nORIGIN_ID1344         3.522e+00  1.270e-01    27.728  < 2e-16 ***\nORIGIN_ID1345         2.303e+00  1.271e-01    18.119  < 2e-16 ***\nORIGIN_ID1346         2.833e+00  1.271e-01    22.287  < 2e-16 ***\nORIGIN_ID1347         3.248e+00  1.271e-01    25.558  < 2e-16 ***\nORIGIN_ID1348         3.484e+00  1.271e-01    27.417  < 2e-16 ***\nORIGIN_ID1349         3.169e-01  1.360e-01     2.330 0.019808 *  \nORIGIN_ID1355         1.507e+00  1.283e-01    11.752  < 2e-16 ***\nORIGIN_ID1356         2.911e+00  1.270e-01    22.911  < 2e-16 ***\nORIGIN_ID1357         8.308e-01  1.280e-01     6.488 8.68e-11 ***\nORIGIN_ID1358         2.879e+00  1.271e-01    22.653  < 2e-16 ***\nORIGIN_ID1359         2.140e+00  1.271e-01    16.835  < 2e-16 ***\nORIGIN_ID1360         2.170e+00  1.271e-01    17.068  < 2e-16 ***\nORIGIN_ID1361         3.695e+00  1.270e-01    29.087  < 2e-16 ***\nORIGIN_ID1362         2.579e+00  1.271e-01    20.283  < 2e-16 ***\nORIGIN_ID1363         3.880e+00  1.271e-01    30.538  < 2e-16 ***\nORIGIN_ID1364        -1.071e+00  1.458e-01    -7.344 2.07e-13 ***\nORIGIN_ID1370         1.289e+00  1.273e-01    10.124  < 2e-16 ***\nORIGIN_ID1371         2.842e+00  1.271e-01    22.363  < 2e-16 ***\nORIGIN_ID1372         2.021e+00  1.271e-01    15.895  < 2e-16 ***\nORIGIN_ID1373         2.237e+00  1.273e-01    17.573  < 2e-16 ***\nORIGIN_ID1374         2.687e+00  1.271e-01    21.148  < 2e-16 ***\nORIGIN_ID1376         3.861e+00  1.270e-01    30.398  < 2e-16 ***\nORIGIN_ID1377        -2.439e-01  1.338e-01    -1.822 0.068399 .  \nORIGIN_ID1378         7.540e-01  1.311e-01     5.753 8.78e-09 ***\nORIGIN_ID1383         1.288e+00  1.280e-01    10.064  < 2e-16 ***\nORIGIN_ID1384         2.723e+00  1.271e-01    21.432  < 2e-16 ***\nORIGIN_ID1385         2.029e+00  1.271e-01    15.959  < 2e-16 ***\nORIGIN_ID1386         1.341e+00  1.275e-01    10.521  < 2e-16 ***\nORIGIN_ID1387         2.048e+00  1.272e-01    16.101  < 2e-16 ***\nORIGIN_ID1388         1.206e+00  1.275e-01     9.458  < 2e-16 ***\nORIGIN_ID1389         3.569e+00  1.270e-01    28.094  < 2e-16 ***\nORIGIN_ID1390         3.695e+00  1.271e-01    29.083  < 2e-16 ***\nORIGIN_ID1391         3.117e+00  1.271e-01    24.525  < 2e-16 ***\nORIGIN_ID1396         2.742e+00  1.271e-01    21.572  < 2e-16 ***\nORIGIN_ID1397         2.587e+00  1.271e-01    20.357  < 2e-16 ***\nORIGIN_ID1398         2.661e+00  1.271e-01    20.940  < 2e-16 ***\nORIGIN_ID1399         1.545e+00  1.273e-01    12.144  < 2e-16 ***\nORIGIN_ID1400         3.417e+00  1.271e-01    26.894  < 2e-16 ***\nORIGIN_ID1401         1.881e+00  1.272e-01    14.783  < 2e-16 ***\nORIGIN_ID1402         3.964e+00  1.270e-01    31.204  < 2e-16 ***\nORIGIN_ID1403         2.581e+00  1.272e-01    20.282  < 2e-16 ***\nORIGIN_ID1408         2.085e+00  1.273e-01    16.381  < 2e-16 ***\nORIGIN_ID1409         2.835e+00  1.271e-01    22.311  < 2e-16 ***\nORIGIN_ID1410         2.282e+00  1.271e-01    17.960  < 2e-16 ***\nORIGIN_ID1411         2.510e+00  1.271e-01    19.753  < 2e-16 ***\nORIGIN_ID1412         1.336e-01  1.286e-01     1.039 0.299001    \nORIGIN_ID1413         2.697e+00  1.271e-01    21.224  < 2e-16 ***\nORIGIN_ID1414         3.567e+00  1.270e-01    28.082  < 2e-16 ***\nORIGIN_ID1415         2.808e+00  1.271e-01    22.093  < 2e-16 ***\nORIGIN_ID1416         4.064e+00  1.270e-01    31.990  < 2e-16 ***\nORIGIN_ID1417         3.830e+00  1.273e-01    30.081  < 2e-16 ***\nORIGIN_ID1421         1.241e+00  1.274e-01     9.742  < 2e-16 ***\nORIGIN_ID1422         2.802e+00  1.270e-01    22.057  < 2e-16 ***\nORIGIN_ID1423         1.591e+00  1.272e-01    12.507  < 2e-16 ***\nORIGIN_ID1424        -3.599e-01  1.298e-01    -2.773 0.005562 ** \nORIGIN_ID1425         3.002e+00  1.271e-01    23.626  < 2e-16 ***\nORIGIN_ID1426         3.604e+00  1.270e-01    28.367  < 2e-16 ***\nORIGIN_ID1427         3.316e+00  1.270e-01    26.101  < 2e-16 ***\nORIGIN_ID1428         3.213e+00  1.271e-01    25.290  < 2e-16 ***\nORIGIN_ID1429         3.399e+00  1.271e-01    26.747  < 2e-16 ***\nORIGIN_ID1432         1.622e+00  1.274e-01    12.732  < 2e-16 ***\nORIGIN_ID1433         2.125e+00  1.271e-01    16.718  < 2e-16 ***\nORIGIN_ID1434        -1.165e+00  1.316e-01    -8.855  < 2e-16 ***\nORIGIN_ID1435         1.075e+00  1.274e-01     8.442  < 2e-16 ***\nORIGIN_ID1436        -2.843e+00  2.224e-01   -12.785  < 2e-16 ***\nORIGIN_ID1437         2.644e+00  1.271e-01    20.800  < 2e-16 ***\nORIGIN_ID1438         3.239e+00  1.271e-01    25.496  < 2e-16 ***\nORIGIN_ID1439         3.246e+00  1.271e-01    25.549  < 2e-16 ***\nORIGIN_ID1440         3.833e+00  1.270e-01    30.175  < 2e-16 ***\nORIGIN_ID1441         3.898e+00  1.270e-01    30.683  < 2e-16 ***\nORIGIN_ID1444         1.971e+00  1.272e-01    15.500  < 2e-16 ***\nORIGIN_ID1445         2.716e+00  1.271e-01    21.373  < 2e-16 ***\nORIGIN_ID1446         2.344e+00  1.271e-01    18.441  < 2e-16 ***\nORIGIN_ID1447         1.359e+00  1.280e-01    10.618  < 2e-16 ***\nORIGIN_ID1448         1.245e+00  1.297e-01     9.600  < 2e-16 ***\nORIGIN_ID1449         1.784e+00  1.273e-01    14.015  < 2e-16 ***\nORIGIN_ID1450         3.379e+00  1.271e-01    26.592  < 2e-16 ***\nORIGIN_ID1451         3.705e+00  1.270e-01    29.161  < 2e-16 ***\nORIGIN_ID1452         2.649e+00  1.272e-01    20.833  < 2e-16 ***\nORIGIN_ID1453         3.238e+00  1.272e-01    25.459  < 2e-16 ***\nORIGIN_ID1455         2.089e+00  1.272e-01    16.420  < 2e-16 ***\nORIGIN_ID1456         2.495e+00  1.272e-01    19.620  < 2e-16 ***\nORIGIN_ID1457         2.238e+00  1.271e-01    17.608  < 2e-16 ***\nORIGIN_ID1458         2.009e+00  1.272e-01    15.801  < 2e-16 ***\nORIGIN_ID1459         1.333e+00  1.293e-01    10.308  < 2e-16 ***\nORIGIN_ID1461         2.034e+00  1.276e-01    15.942  < 2e-16 ***\nORIGIN_ID1462         3.010e+00  1.271e-01    23.680  < 2e-16 ***\nORIGIN_ID1463         4.399e+00  1.270e-01    34.631  < 2e-16 ***\nORIGIN_ID1464         3.899e+00  1.270e-01    30.693  < 2e-16 ***\nORIGIN_ID1465         3.298e+00  1.273e-01    25.905  < 2e-16 ***\nORIGIN_ID1466         3.026e+00  1.271e-01    23.815  < 2e-16 ***\nORIGIN_ID1467         3.151e+00  1.270e-01    24.801  < 2e-16 ***\nORIGIN_ID1468         3.291e+00  1.270e-01    25.905  < 2e-16 ***\nORIGIN_ID1471         3.969e-01  1.308e-01     3.035 0.002401 ** \nORIGIN_ID1472         3.381e+00  1.271e-01    26.600  < 2e-16 ***\nORIGIN_ID1473         3.409e+00  1.271e-01    26.828  < 2e-16 ***\nORIGIN_ID1474         4.503e+00  1.270e-01    35.453  < 2e-16 ***\nORIGIN_ID1475        -9.866e-03  1.317e-01    -0.075 0.940300    \nORIGIN_ID1478         2.379e+00  1.271e-01    18.714  < 2e-16 ***\nORIGIN_ID1479         1.731e+00  1.279e-01    13.538  < 2e-16 ***\nORIGIN_ID1480         3.042e+00  1.271e-01    23.935  < 2e-16 ***\nORIGIN_ID1483         1.009e+00  1.294e-01     7.800 6.21e-15 ***\nORIGIN_ID1485         3.073e+00  1.271e-01    24.175  < 2e-16 ***\nORIGIN_ID1486         1.759e+00  1.275e-01    13.794  < 2e-16 ***\nORIGIN_ID1487         7.078e-01  1.320e-01     5.364 8.14e-08 ***\nORIGIN_ID1488         3.280e+00  1.270e-01    25.819  < 2e-16 ***\nORIGIN_ID1489         1.532e+00  1.273e-01    12.036  < 2e-16 ***\nORIGIN_ID1490         3.348e+00  1.271e-01    26.352  < 2e-16 ***\nORIGIN_ID1491        -7.353e-01  1.341e-01    -5.484 4.17e-08 ***\nORIGIN_ID1494        -2.058e+00  1.985e-01   -10.371  < 2e-16 ***\nORIGIN_ID1495         2.003e+00  1.277e-01    15.687  < 2e-16 ***\nORIGIN_ID1496         3.225e+00  1.271e-01    25.375  < 2e-16 ***\nORIGIN_ID1500         1.957e+00  1.272e-01    15.387  < 2e-16 ***\nORIGIN_ID1501         2.877e+00  1.271e-01    22.641  < 2e-16 ***\nORIGIN_ID1502         3.220e+00  1.271e-01    25.340  < 2e-16 ***\nORIGIN_ID1506        -2.630e+00  4.649e-01    -5.658 1.54e-08 ***\nORIGIN_ID1507         3.302e+00  1.271e-01    25.977  < 2e-16 ***\nORIGIN_ID1508         3.784e+00  1.272e-01    29.757  < 2e-16 ***\nORIGIN_ID1510         2.249e+00  1.272e-01    17.684  < 2e-16 ***\nORIGIN_ID1511         1.420e+00  1.276e-01    11.131  < 2e-16 ***\nORIGIN_ID1512         2.760e+00  1.272e-01    21.697  < 2e-16 ***\nORIGIN_ID1513         1.620e+00  1.274e-01    12.718  < 2e-16 ***\nORIGIN_ID1516         1.096e+00  1.295e-01     8.459  < 2e-16 ***\nORIGIN_ID1518         3.063e+00  1.272e-01    24.077  < 2e-16 ***\nORIGIN_ID1521         2.252e+00  1.272e-01    17.710  < 2e-16 ***\nORIGIN_ID1522         3.124e+00  1.271e-01    24.588  < 2e-16 ***\nORIGIN_ID1523         2.813e+00  1.271e-01    22.127  < 2e-16 ***\nORIGIN_ID1526        -3.849e-01  1.414e-01    -2.721 0.006508 ** \nORIGIN_ID1530         2.323e+00  1.273e-01    18.246  < 2e-16 ***\nORIGIN_ID1531         1.872e+00  1.278e-01    14.645  < 2e-16 ***\nORIGIN_ID1532         3.713e+00  1.270e-01    29.231  < 2e-16 ***\nORIGIN_ID1533         2.275e+00  1.272e-01    17.883  < 2e-16 ***\nORIGIN_ID1534         1.708e+00  1.278e-01    13.363  < 2e-16 ***\nORIGIN_ID1535         1.051e+00  1.292e-01     8.134 4.17e-16 ***\nORIGIN_ID1536        -6.093e-01  1.514e-01    -4.024 5.73e-05 ***\nORIGIN_ID1541         2.316e+00  1.272e-01    18.209  < 2e-16 ***\nORIGIN_ID1542         3.895e+00  1.270e-01    30.667  < 2e-16 ***\nORIGIN_ID1543         3.213e+00  1.271e-01    25.286  < 2e-16 ***\nORIGIN_ID1544         3.423e+00  1.271e-01    26.943  < 2e-16 ***\nORIGIN_ID1545         2.070e+00  1.274e-01    16.257  < 2e-16 ***\nORIGIN_ID1546         1.949e+00  1.274e-01    15.295  < 2e-16 ***\nORIGIN_ID1553         1.775e+00  1.272e-01    13.946  < 2e-16 ***\nORIGIN_ID1554         3.185e+00  1.271e-01    25.065  < 2e-16 ***\nORIGIN_ID1555         2.286e+00  1.271e-01    17.984  < 2e-16 ***\nORIGIN_ID1556         3.961e+00  1.270e-01    31.182  < 2e-16 ***\nORIGIN_ID1557         2.583e+00  1.272e-01    20.311  < 2e-16 ***\nORIGIN_ID1558         3.365e+00  1.271e-01    26.483  < 2e-16 ***\nORIGIN_ID1562         2.329e+00  1.272e-01    18.310  < 2e-16 ***\nORIGIN_ID1563         3.177e+00  1.271e-01    25.007  < 2e-16 ***\nORIGIN_ID1564         3.227e+00  1.271e-01    25.400  < 2e-16 ***\nORIGIN_ID1565         2.608e+00  1.271e-01    20.518  < 2e-16 ***\nORIGIN_ID1566         4.015e+00  1.270e-01    31.607  < 2e-16 ***\nORIGIN_ID1568         3.726e+00  1.271e-01    29.323  < 2e-16 ***\nORIGIN_ID1573         2.736e+00  1.271e-01    21.529  < 2e-16 ***\nORIGIN_ID1574         3.524e+00  1.271e-01    27.733  < 2e-16 ***\nORIGIN_ID1575        -5.074e-01  1.295e-01    -3.918 8.94e-05 ***\nORIGIN_ID1576         2.794e+00  1.271e-01    21.992  < 2e-16 ***\nORIGIN_ID1577         3.138e+00  1.271e-01    24.691  < 2e-16 ***\nORIGIN_ID1578         3.842e+00  1.271e-01    30.243  < 2e-16 ***\nORIGIN_ID1584         3.408e+00  1.270e-01    26.825  < 2e-16 ***\nORIGIN_ID1585         2.155e+00  1.274e-01    16.914  < 2e-16 ***\nORIGIN_ID1586         3.287e+00  1.270e-01    25.876  < 2e-16 ***\nORIGIN_ID1587         3.356e+00  1.270e-01    26.413  < 2e-16 ***\nORIGIN_ID1588         2.267e+00  1.274e-01    17.797  < 2e-16 ***\nORIGIN_ID1589         3.086e+00  1.271e-01    24.269  < 2e-16 ***\nORIGIN_ID1593         3.089e+00  1.271e-01    24.306  < 2e-16 ***\nORIGIN_ID1594         3.595e+00  1.270e-01    28.297  < 2e-16 ***\nORIGIN_ID1595         1.656e+00  1.273e-01    13.017  < 2e-16 ***\nORIGIN_ID1596         4.045e+00  1.270e-01    31.842  < 2e-16 ***\nORIGIN_ID1597         2.517e+00  1.273e-01    19.779  < 2e-16 ***\nORIGIN_ID1598         3.198e+00  1.271e-01    25.167  < 2e-16 ***\nORIGIN_ID1602        -4.534e-01  1.607e-01    -2.820 0.004795 ** \nORIGIN_ID1603         7.509e-01  1.287e-01     5.832 5.47e-09 ***\nORIGIN_ID1604         1.900e+00  1.272e-01    14.932  < 2e-16 ***\nORIGIN_ID1605         2.413e+00  1.271e-01    18.984  < 2e-16 ***\nORIGIN_ID1606         3.070e+00  1.271e-01    24.159  < 2e-16 ***\nORIGIN_ID1607         3.119e+00  1.271e-01    24.541  < 2e-16 ***\nORIGIN_ID1608         1.046e+00  1.298e-01     8.057 7.79e-16 ***\nORIGIN_ID1611         7.349e-01  1.282e-01     5.731 9.96e-09 ***\nORIGIN_ID1612         1.169e+00  1.276e-01     9.167  < 2e-16 ***\nORIGIN_ID1613         2.907e+00  1.271e-01    22.873  < 2e-16 ***\nORIGIN_ID1614         3.505e+00  1.270e-01    27.590  < 2e-16 ***\nORIGIN_ID1615         3.464e+00  1.271e-01    27.254  < 2e-16 ***\nORIGIN_ID1616         3.577e+00  1.270e-01    28.158  < 2e-16 ***\nORIGIN_ID1620         2.091e+00  1.274e-01    16.407  < 2e-16 ***\nORIGIN_ID1621         6.219e-01  1.280e-01     4.859 1.18e-06 ***\nORIGIN_ID1622         3.141e+00  1.271e-01    24.717  < 2e-16 ***\nORIGIN_ID1623         3.863e+00  1.270e-01    30.414  < 2e-16 ***\nORIGIN_ID1624         3.787e+00  1.270e-01    29.811  < 2e-16 ***\nORIGIN_ID1629         1.179e+00  1.281e-01     9.201  < 2e-16 ***\nORIGIN_ID1630         2.582e+00  1.271e-01    20.314  < 2e-16 ***\nORIGIN_ID1631         3.350e+00  1.271e-01    26.356  < 2e-16 ***\nORIGIN_ID1632         3.048e+00  1.271e-01    23.984  < 2e-16 ***\nORIGIN_ID1633         3.649e+00  1.271e-01    28.716  < 2e-16 ***\nORIGIN_ID1638         2.701e+00  1.272e-01    21.231  < 2e-16 ***\nORIGIN_ID1639         2.291e+00  1.273e-01    17.989  < 2e-16 ***\nORIGIN_ID1640         3.093e+00  1.271e-01    24.344  < 2e-16 ***\nORIGIN_ID1641         3.388e+00  1.271e-01    26.662  < 2e-16 ***\nORIGIN_ID1642         2.926e+00  1.285e-01    22.765  < 2e-16 ***\nORIGIN_ID1646        -5.781e-01  1.342e-01    -4.307 1.65e-05 ***\nORIGIN_ID1647        -1.700e+00  1.448e-01   -11.740  < 2e-16 ***\nORIGIN_ID1648         1.609e+00  1.276e-01    12.610  < 2e-16 ***\nORIGIN_ID1649         2.698e+00  1.271e-01    21.226  < 2e-16 ***\nORIGIN_ID1654         1.057e-01  1.302e-01     0.812 0.416709    \nORIGIN_ID1655         2.527e+00  1.283e-01    19.702  < 2e-16 ***\nORIGIN_ID1656         2.662e+00  1.272e-01    20.929  < 2e-16 ***\nORIGIN_ID1657         2.487e+00  1.273e-01    19.547  < 2e-16 ***\nORIGIN_ID1658        -4.522e-01  1.467e-01    -3.081 0.002060 ** \nORIGIN_ID1664         6.834e-01  1.330e-01     5.137 2.79e-07 ***\nORIGIN_ID1665         8.195e-01  1.288e-01     6.361 2.00e-10 ***\nORIGIN_ID1666         8.266e-01  1.284e-01     6.436 1.22e-10 ***\nORIGIN_ID1667         6.562e-01  1.325e-01     4.953 7.33e-07 ***\nORIGIN_ID1674         2.583e+00  1.283e-01    20.126  < 2e-16 ***\nORIGIN_ID1675         1.774e+00  1.279e-01    13.864  < 2e-16 ***\nORIGIN_ID1676        -1.702e-01  1.318e-01    -1.291 0.196598    \nORIGIN_ID1682         2.972e+00  1.273e-01    23.346  < 2e-16 ***\nORIGIN_ID1685         1.064e+00  1.281e-01     8.304  < 2e-16 ***\nORIGIN_ID1686         1.163e+00  1.283e-01     9.067  < 2e-16 ***\nORIGIN_ID1691         1.487e+00  1.284e-01    11.583  < 2e-16 ***\nORIGIN_ID1693        -7.420e-01  1.438e-01    -5.160 2.46e-07 ***\nORIGIN_ID1695         1.388e-01  1.360e-01     1.021 0.307379    \nORIGIN_ID1698         3.648e+00  1.278e-01    28.541  < 2e-16 ***\nORIGIN_ID1704         2.621e+00  1.273e-01    20.595  < 2e-16 ***\nORIGIN_ID1711         4.083e+00  1.271e-01    32.116  < 2e-16 ***\nORIGIN_ID1714        -1.849e+00  2.959e-01    -6.249 4.12e-10 ***\nORIGIN_ID1722         2.153e+00  1.278e-01    16.843  < 2e-16 ***\nORIGIN_ID1723        -1.806e+00  1.711e-01   -10.555  < 2e-16 ***\nORIGIN_ID1726         3.585e+00  1.280e-01    27.999  < 2e-16 ***\nORIGIN_ID1731         1.764e+00  1.285e-01    13.727  < 2e-16 ***\nORIGIN_ID1732         1.310e+00  1.288e-01    10.164  < 2e-16 ***\nORIGIN_ID1741         1.482e+00  1.304e-01    11.367  < 2e-16 ***\nORIGIN_ID1742         3.108e+00  1.274e-01    24.403  < 2e-16 ***\nORIGIN_ID1750         1.226e+00  1.339e-01     9.150  < 2e-16 ***\nORIGIN_ID1751         7.163e-01  1.394e-01     5.139 2.77e-07 ***\nORIGIN_ID1768         2.532e+00  1.327e-01    19.085  < 2e-16 ***\nlog(DESTIN_BUSINESS)  6.335e-02  2.065e-04   306.758  < 2e-16 ***\nlog(DESTIN_FINSER)    3.577e-01  2.877e-04  1243.285  < 2e-16 ***\nlog(DESTIN_HDB)      -8.835e-03  7.125e-05  -124.007  < 2e-16 ***\nlog(DESTIN_RETAIL)    7.439e-02  2.428e-04   306.371  < 2e-16 ***\nlog(DESTIN_SCHOOLS)   3.693e-01  6.487e-04   569.325  < 2e-16 ***\nlog(dist)            -1.504e+00  2.623e-04 -5733.297  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 98394406  on 65075  degrees of freedom\nResidual deviance: 37628088  on 64250  degrees of freedom\nAIC: 37987035\n\nNumber of Fisher Scoring iterations: 7\n\noptions(max.print = 1000000)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/data/geospatial/F&B.html",
    "href": "Take-Home_Ex/Take-Home_Ex02/data/geospatial/F&B.html",
    "title": "",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/data/geospatial/Liesure&Recreation.html",
    "href": "Take-Home_Ex/Take-Home_Ex02/data/geospatial/Liesure&Recreation.html",
    "title": "",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/data/geospatial/MPSZ-2019.html",
    "href": "Take-Home_Ex/Take-Home_Ex02/data/geospatial/MPSZ-2019.html",
    "title": "",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/data/geospatial/entertn.html",
    "href": "Take-Home_Ex/Take-Home_Ex02/data/geospatial/entertn.html",
    "title": "",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/data/geospatial/Retails.html",
    "href": "Take-Home_Ex/Take-Home_Ex02/data/geospatial/Retails.html",
    "title": "",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/data/geospatial/FinServ.html",
    "href": "Take-Home_Ex/Take-Home_Ex02/data/geospatial/FinServ.html",
    "title": "",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/data/geospatial/Business.html",
    "href": "Take-Home_Ex/Take-Home_Ex02/data/geospatial/Business.html",
    "title": "",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "title": "In-class Exercise 3",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if the packages below are installed into the R environment. If they are, then they will be launched into R.\n\npacman::p_load(tmap, sf, sp, DT, spatstat,\n               performance, reshape2,\n               ggpubr, tidyverse)\n\n\n\n\nWe will be using three data sets for this exercise. Data were retrieved for the following:\n\nod_data_rds, weekday morning peak passenger flows at planning subzone level.\nMPSZ-2019 - Geospatial data that provides the sub-zone boundary of URA Master Plan 2019. To import and save as mpsz.rds\npop.csv, - attribute data\n\nIn this exercise, we are interested to calibrate Spatial Interaction Models (SIMs) to determine factors affecting the public bus passenger flows during the morning peak in Singapore.\n\n\nThe code chunk below uses read_rds() to import od_data.rds that was previously saved in Hands-on Exercise 3 into R.\n\nod_data <- read_rds(\"data/rds/od_data.rds\")\n\n\n\n\nThe code chunk below uses st_read() of sf package to import the data into R. The imported shapefile will be simple features object of sf and save as a output through write_rds().\n\n\nShow the code\nmpsz <- st_read(dsn = \"data/geospatial\",\n                   layer = \"MPSZ-2019\") %>%\n  st_transform(crs = 3414)\n\n\nReading layer `MPSZ-2019' from data source \n  `/Users/smu/Rworkshop/jiawenoh/ISSS624/In-class_Ex/In-class_Ex03/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\nShow the code\nwrite_rds(mpsz, \"data/rds/mpsz.rds\")\nmpsz <- read_rds(\"data/rds/mpsz.rds\")\n\n\n\n\n\nNext, we will import the population data with the use of read_csv().\n\npop <- read_csv(\"data/aspatial/pop.csv\")\n\n\n\n\n\nA distance matrix is a table that shows the distance between pairs of locations by computing a distance matrix by using URA Master Plan 2019 Planning Subzone boundary.\n\n\nFirst as.Spatial() will be used to convert mpsz from sf tibble data frame to SpatialPolygonsDataFrame of sp object as shown in the code chunk below.\n\nmpsz_sp <- as(mpsz, \"Spatial\")\n\nmpsz_sp\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 332 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 6\nnames       : SUBZONE_N, SUBZONE_C, PLN_AREA_N, PLN_AREA_C,       REGION_N, REGION_C \nmin values  : ADMIRALTY,    AMSZ01, ANG MO KIO,         AM, CENTRAL REGION,       CR \nmax values  :    YUNNAN,    YSSZ09,     YISHUN,         YS,    WEST REGION,       WR \n\n\n\n\n\nNext, spDists() of sp package will be used to compute the Euclidean distance between the centroids of the planning subzones.\n\ndist <- spDists(mpsz_sp, \n                longlat = FALSE)\nhead(dist, n=c(10, 10))\n\n           [,1]       [,2]      [,3]      [,4]       [,5]      [,6]      [,7]\n [1,]     0.000  3926.0025  3939.108 20252.964  2989.9839  1431.330 19211.836\n [2,]  3926.003     0.0000   305.737 16513.865   951.8314  5254.066 16242.523\n [3,]  3939.108   305.7370     0.000 16412.062  1045.9088  5299.849 16026.146\n [4,] 20252.964 16513.8648 16412.062     0.000 17450.3044 21665.795  7229.017\n [5,]  2989.984   951.8314  1045.909 17450.304     0.0000  4303.232 17020.916\n [6,]  1431.330  5254.0664  5299.849 21665.795  4303.2323     0.000 20617.082\n [7,] 19211.836 16242.5230 16026.146  7229.017 17020.9161 20617.082     0.000\n [8,] 14960.942 12749.4101 12477.871 11284.279 13336.0421 16281.453  5606.082\n [9,]  7515.256  7934.8082  7649.776 18427.503  7801.6163  8403.896 14810.930\n[10,]  6391.342  4975.0021  4669.295 15469.566  5226.8731  7707.091 13111.391\n           [,8]      [,9]     [,10]\n [1,] 14960.942  7515.256  6391.342\n [2,] 12749.410  7934.808  4975.002\n [3,] 12477.871  7649.776  4669.295\n [4,] 11284.279 18427.503 15469.566\n [5,] 13336.042  7801.616  5226.873\n [6,] 16281.453  8403.896  7707.091\n [7,]  5606.082 14810.930 13111.391\n [8,]     0.000  9472.024  8575.490\n [9,]  9472.024     0.000  3780.800\n[10,]  8575.490  3780.800     0.000\n\n\n\n\n\nWe will create a list sorted according to the the distance matrix by planning sub-zone code\n\nsz_names <- mpsz$SUBZONE_C\n\nThen, we will attach SUBZONE_C to row and column for distance matrix matching ahead\n\ncolnames(dist) <- paste0(sz_names)\nrownames(dist) <- paste0(sz_names)\n\n\n\n\nNext, we will pivot the distance matrix into a long table by using the row and column subzone codes as show in the code chunk below.\n\ndistPair <- melt(dist) %>%\n  rename(dist = value)\nhead(distPair, 10)\n\n     Var1   Var2      dist\n1  MESZ01 MESZ01     0.000\n2  RVSZ05 MESZ01  3926.003\n3  SRSZ01 MESZ01  3939.108\n4  WISZ01 MESZ01 20252.964\n5  MUSZ02 MESZ01  2989.984\n6  MPSZ05 MESZ01  1431.330\n7  WISZ03 MESZ01 19211.836\n8  WISZ02 MESZ01 14960.942\n9  SISZ02 MESZ01  7515.256\n10 SISZ01 MESZ01  6391.342\n\n\n\n\n\nWe are going to append a constant value to replace the intra-zonal distance of 0.\nFirst, we will select and find out the minimum value of the distance by using summary().\n\ndistPair %>%\n  filter(dist > 0) %>%\n  summary()\n\n      Var1             Var2             dist        \n MESZ01 :   331   MESZ01 :   331   Min.   :  173.8  \n RVSZ05 :   331   RVSZ05 :   331   1st Qu.: 7149.5  \n SRSZ01 :   331   SRSZ01 :   331   Median :11890.0  \n WISZ01 :   331   WISZ01 :   331   Mean   :12229.4  \n MUSZ02 :   331   MUSZ02 :   331   3rd Qu.:16401.7  \n MPSZ05 :   331   MPSZ05 :   331   Max.   :49894.4  \n (Other):107906   (Other):107906                    \n\n\nNext, a constant distance value of 50m is added into intra-zones distance.\n\ndistPair$dist <- ifelse(distPair$dist == 0,\n                        50, distPair$dist)\n\nThe code chunk below is used to rename the origin and destination fields.\n\n\nShow the code\n# to check the distPair data frame\ndistPair %>%\n  summary()\n\n\n      Var1             Var2             dist      \n MESZ01 :   332   MESZ01 :   332   Min.   :   50  \n RVSZ05 :   332   RVSZ05 :   332   1st Qu.: 7097  \n SRSZ01 :   332   SRSZ01 :   332   Median :11864  \n WISZ01 :   332   WISZ01 :   332   Mean   :12193  \n MUSZ02 :   332   MUSZ02 :   332   3rd Qu.:16388  \n MPSZ05 :   332   MPSZ05 :   332   Max.   :49894  \n (Other):108232   (Other):108232                  \n\n\nShow the code\n#to rename the fields\ndistPair <- distPair %>%\n  rename(orig = Var1,\n         dest = Var2)\n\n#to save output to rds \nwrite_rds(distPair, \"data/rds/distPair.rds\") \ndistPair <- read_rds(\"data/rds/distPair.rds\")\n\n\n\n\n\n\nTo get the flow data, we will compute the total passenger trip between and within planning subzones by using the code chunk below. The output will be flow_data. In addition, we will use head() to display the top 10 data frame.\n\nflow_data <- od_data %>%\n  group_by(ORIGIN_SZ, DESTIN_SZ) %>% \n  summarize(TRIPS = sum(MORNING_PEAK)) \n\nhead(flow_data, 10)\n\n# A tibble: 10 × 3\n# Groups:   ORIGIN_SZ [1]\n   ORIGIN_SZ DESTIN_SZ TRIPS\n   <chr>     <chr>     <dbl>\n 1 AMSZ01    AMSZ01     2694\n 2 AMSZ01    AMSZ02    10591\n 3 AMSZ01    AMSZ03    14980\n 4 AMSZ01    AMSZ04     3106\n 5 AMSZ01    AMSZ05     7734\n 6 AMSZ01    AMSZ06     2306\n 7 AMSZ01    AMSZ07     1824\n 8 AMSZ01    AMSZ08     2734\n 9 AMSZ01    AMSZ09     2300\n10 AMSZ01    AMSZ10      164\n\n\n\n\nWe will use ifelse()function to add three new fields in the dataframe with the condition that if Origin SZ matches Destination SZ, it will be force with 0.\n\nflow_data$FlowNoIntra <- ifelse(\n  flow_data$ORIGIN_SZ == flow_data$DESTIN_SZ, \n  0, flow_data$TRIPS)\nflow_data$offset <- ifelse(\n  flow_data$ORIGIN_SZ == flow_data$DESTIN_SZ, \n  0.000001, 1)\n\n\n\n\nBefore we proceed, we need to convert the data type for ORIGIN_SZ and DESTIN_SZ from <chr> to <fct> data type.\n\nflow_data$ORIGIN_SZ <- as.factor(flow_data$ORIGIN_SZ)\nflow_data$DESTIN_SZ <- as.factor(flow_data$DESTIN_SZ)\n\nThen, left_join() of dplyr will be used to flow_data dataframe and distPair dataframe. The output is called flow_data1.\n\nflow_data1 <- flow_data %>%\n  left_join (distPair,\n             by = c(\"ORIGIN_SZ\" = \"orig\",\n                    \"DESTIN_SZ\" = \"dest\"))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/data/geospatial/MPSZ-2019.html",
    "href": "In-class_Ex/In-class_Ex03/data/geospatial/MPSZ-2019.html",
    "title": "",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-class Exercise 4",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if the packages below are installed into the R environment. If they are, then they will be launched into R.\n\npacman::p_load(tmap, sf, httr,tidyverse)\n\n\n\n\n\n\n\nurl <- \"https://www.onemap.gov.sg/api/common/elastic/search\"\n\ncsv <- read_csv(\"data/aspatial/Generalinformationofschools.csv\")\npostcodes <- csv$postal_code\n\nfound <- data.frame()\nnot_found <- data.frame()\n\nfor (postcode in postcodes) {\n  query <- list('searchVal'=postcode, 'returnGeom'='Y', 'getAddrDetails'='Y', 'pageNum'='1')\n  res <- GET(url, query=query)\n  \n  if ((content(res)$found)!=0){\n    found <- rbind(found, data.frame(content(res))[4:13])\n  } else {\n    not_found = data.frame(postcode)\n  }\n}\n\nNext, we will combine both found and not_found data.frame into a single tibble data.frame called merged.\n\nmerged = merge(csv, found, by.x ='postal_code', by.y = 'results.POSTAL', all = TRUE)\nwrite.csv(merged, file= 'data/aspatial/schools.csv')\nwrite.csv(not_found, file = 'data/aspatial/not_found.csv')\n\nThen, we will import the school.csv. into R environment.\n\nschools <- read_csv(\"data/aspatial/schools.csv\") %>%\n  rename(latitude = 'results.LATITUDE', longitude ='results.LONGITUDE') %>%\n  select(postal_code, school_name, latitude, longitude)\n\n\n\n\n\nmpsz <- st_read(dsn = 'data/geospatial', layer = 'MPSZ-2019') %>%\n  st_transform(crs= 3414)\n\nReading layer `MPSZ-2019' from data source \n  `/Users/smu/Rworkshop/jiawenoh/ISSS624/In-class_Ex/In-class_Ex04/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\n\n\n\n\nNext, we will convert the aspatial data into a simple feature data frame called schools_sf.\n\nschools_sf <- st_as_sf(schools, \n                       coords = c(\"longitude\", \"latitude\"),\n                       crs=4326) %>%\n  st_transform(crs = 3414)\n\n#longitude before latitude \n\n\n\n\nTo ensure that schools sf tibble data frame has been projected and converted correctly, we will plot the schools point data for visual inspection.\n\ntmap_mode(\"view\")\nqtm(schools_sf) +\n  tm_view(set.zoom.limits = c(11,14))\n\n\n\n\n\ntmap_mode('plot') \n#to reduce resources consume\n\nNext, we will count the number of schools within the planning sub zone.\n\nmpsz$'SCHOOL_COUNT' <- lengths(\n  st_intersects(mpsz,schools_sf)\n)\n\nsummary(mpsz$SCHOOL_COUNT)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   0.000   0.000   1.054   2.000  12.000 \n\n\n\nbusiness_sf <- st_read(dsn = \"data/geospatial\",\n                       layer = \"Business\")\n\nReading layer `Business' from data source \n  `/Users/smu/Rworkshop/jiawenoh/ISSS624/In-class_Ex/In-class_Ex04/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 6550 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3669.148 ymin: 25408.41 xmax: 47034.83 ymax: 50148.54\nProjected CRS: SVY21 / Singapore TM\n\n\n\ntmap_options(check.and.fix = TRUE) #force close polygon \ntm_shape(mpsz) +  #base layer\n  tm_polygons() +  #plot the polygon then point \n  tm_shape(business_sf) +\n  tm_dots()\n\n\n\n\n\nsummary(mpsz$SCHOOL_COUNT)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   0.000   0.000   1.054   2.000  12.000"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#install-and-launch-r-packages",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#install-and-launch-r-packages",
    "title": "In-class Exercise 4",
    "section": "2.1 Install and launch R Packages",
    "text": "2.1 Install and launch R Packages\n\npacman::p_load(tmap, sf, performance, ggpubr,tidyverse)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#importing-data",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#importing-data",
    "title": "In-class Exercise 4",
    "section": "2.2 Importing data",
    "text": "2.2 Importing data\n\nflow_data <- read_rds(\"data/rds/flow_data_tidy.rds\")\n\nNext, we will use glimpse() to examine the data. Also, we will rename Morning_PEAK, and dist.\n\nglimpse(flow_data)\n\nRows: 14,734\nColumns: 13\n$ ORIGIN_SZ       <chr> \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMS…\n$ DESTIN_SZ       <chr> \"AMSZ01\", \"AMSZ02\", \"AMSZ03\", \"AMSZ04\", \"AMSZ05\", \"AMS…\n$ MORNING_PEAK    <dbl> 1998, 8289, 8971, 2252, 6136, 2148, 1620, 1925, 1773, …\n$ dist            <dbl> 50.0000, 810.4491, 1360.9294, 840.4432, 1076.7916, 805…\n$ ORIGIN_AGE7_12  <dbl> 310, 310, 310, 310, 310, 310, 310, 310, 310, 310, 310,…\n$ ORIGIN_AGE13_24 <dbl> 710, 710, 710, 710, 710, 710, 710, 710, 710, 710, 710,…\n$ ORIGIN_AGE25_64 <dbl> 2780, 2780, 2780, 2780, 2780, 2780, 2780, 2780, 2780, …\n$ DESTIN_AGE7_12  <dbl> 310.00, 1140.00, 1010.00, 980.00, 810.00, 1050.00, 420…\n$ DESTIN_AGE13_24 <dbl> 710.00, 2770.00, 2650.00, 2000.00, 1920.00, 2390.00, 1…\n$ DESTIN_AGE25_64 <dbl> 2780.00, 15700.00, 14240.00, 11320.00, 9650.00, 12460.…\n$ SCHOOL_COUNT    <dbl> 0.99, 2.00, 2.00, 1.00, 3.00, 2.00, 0.99, 0.99, 3.00, …\n$ RETAIL_COUNT    <dbl> 1.00, 0.99, 6.00, 0.99, 0.99, 0.99, 1.00, 117.00, 0.99…\n$ geometry        <LINESTRING [m]> LINESTRING (29501.77 39419...., LINESTRING …\n\n\n\nflow_data$FlowNoIntra <- ifelse(\n  flow_data$ORIGIN_SZ== flow_data$DESTIN_SZ, \n  0, flow_data$MORNING_PEAK)\nflow_data$offset <- ifelse(\n  flow_data$ORIGIN_SZ == flow_data$DESTIN_SZ,\n  0.000001,1)\n\ninter_zonal_flow <- flow_data %>%\n  filter (FlowNoIntra > 0 )\n\ninter_zonal_flow <- inter_zonal_flow %>%\n  rename(TRIPS = MORNING_PEAK,\n         DIST = dist) \n\nTip: Remember to save the output and use evaluation = false."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#origin-production-constrained-sim",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#origin-production-constrained-sim",
    "title": "In-class Exercise 4",
    "section": "2.3 Origin (Production) constrained SIM",
    "text": "2.3 Origin (Production) constrained SIM\nNext, we will construct the origin constrained model.\n\norcSIM_Poisson <- glm(formula = TRIPS ~\n                        ORIGIN_SZ +\n                        log(SCHOOL_COUNT) + \n                        log(RETAIL_COUNT) +\n                        log(DIST) -1, #to remove intersect \n                      family = poisson(link ='log'),\n                      data = inter_zonal_flow,\n                      na.action = na.exclude)\n\nsummary(orcSIM_Poisson)\n\n\nCall:\nglm(formula = TRIPS ~ ORIGIN_SZ + log(SCHOOL_COUNT) + log(RETAIL_COUNT) + \n    log(DIST) - 1, family = poisson(link = \"log\"), data = inter_zonal_flow, \n    na.action = na.exclude)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-250.52   -17.17    -7.98     1.24   470.15  \n\nCoefficients:\n                    Estimate Std. Error  z value Pr(>|z|)    \nORIGIN_SZAMSZ01   19.8739840  0.0047627  4172.84   <2e-16 ***\nORIGIN_SZAMSZ02   20.5902203  0.0042786  4812.33   <2e-16 ***\nORIGIN_SZAMSZ03   20.2327026  0.0045531  4443.70   <2e-16 ***\nORIGIN_SZAMSZ04   19.7744438  0.0049837  3967.79   <2e-16 ***\nORIGIN_SZAMSZ05   19.6574529  0.0056396  3485.61   <2e-16 ***\nORIGIN_SZAMSZ06   19.9659115  0.0048946  4079.16   <2e-16 ***\nORIGIN_SZAMSZ07   18.6746164  0.0096316  1938.90   <2e-16 ***\nORIGIN_SZAMSZ08   19.2701601  0.0090776  2122.82   <2e-16 ***\nORIGIN_SZAMSZ09   19.9889467  0.0052858  3781.64   <2e-16 ***\nORIGIN_SZAMSZ10   20.3422035  0.0045778  4443.62   <2e-16 ***\nORIGIN_SZAMSZ11   18.3944113  0.0129212  1423.58   <2e-16 ***\nORIGIN_SZAMSZ12   18.3484209  0.0109652  1673.33   <2e-16 ***\nORIGIN_SZBDSZ01   20.9668587  0.0043388  4832.36   <2e-16 ***\nORIGIN_SZBDSZ02   20.4059518  0.0050601  4032.75   <2e-16 ***\nORIGIN_SZBDSZ03   20.6725514  0.0045276  4565.93   <2e-16 ***\nORIGIN_SZBDSZ04   21.6703853  0.0038930  5566.44   <2e-16 ***\nORIGIN_SZBDSZ05   20.7497445  0.0046085  4502.46   <2e-16 ***\nORIGIN_SZBDSZ06   20.9119361  0.0046432  4503.77   <2e-16 ***\nORIGIN_SZBDSZ07   18.9749815  0.0097896  1938.28   <2e-16 ***\nORIGIN_SZBDSZ08   19.1933901  0.0091312  2101.95   <2e-16 ***\nORIGIN_SZBKSZ01   19.5422606  0.0064732  3018.96   <2e-16 ***\nORIGIN_SZBKSZ02   20.1748913  0.0050076  4028.89   <2e-16 ***\nORIGIN_SZBKSZ03   20.3984624  0.0047226  4319.35   <2e-16 ***\nORIGIN_SZBKSZ04   19.6182212  0.0059652  3288.76   <2e-16 ***\nORIGIN_SZBKSZ05   19.6033818  0.0063181  3102.74   <2e-16 ***\nORIGIN_SZBKSZ06   19.7145224  0.0056372  3497.20   <2e-16 ***\nORIGIN_SZBKSZ07   20.4237448  0.0041912  4873.03   <2e-16 ***\nORIGIN_SZBKSZ08   19.7992538  0.0050405  3928.02   <2e-16 ***\nORIGIN_SZBKSZ09   19.7821586  0.0055558  3560.66   <2e-16 ***\nORIGIN_SZBLSZ01   17.7977276  0.0149058  1194.01   <2e-16 ***\nORIGIN_SZBLSZ02   17.4287491  0.0192364   906.03   <2e-16 ***\nORIGIN_SZBLSZ03   16.5884288  0.0459848   360.74   <2e-16 ***\nORIGIN_SZBLSZ04   17.7851626  0.0232823   763.89   <2e-16 ***\nORIGIN_SZBMSZ01   20.0751840  0.0052887  3795.89   <2e-16 ***\nORIGIN_SZBMSZ02   18.6956140  0.0066656  2804.80   <2e-16 ***\nORIGIN_SZBMSZ03   19.3204425  0.0054755  3528.56   <2e-16 ***\nORIGIN_SZBMSZ04   19.4724220  0.0049390  3942.59   <2e-16 ***\nORIGIN_SZBMSZ05   16.9581801  0.0168804  1004.61   <2e-16 ***\nORIGIN_SZBMSZ06   16.9898638  0.0181852   934.27   <2e-16 ***\nORIGIN_SZBMSZ07   19.2868403  0.0056231  3429.91   <2e-16 ***\nORIGIN_SZBMSZ08   19.1477543  0.0055918  3424.28   <2e-16 ***\nORIGIN_SZBMSZ09   18.7564539  0.0086298  2173.46   <2e-16 ***\nORIGIN_SZBMSZ10   18.3617854  0.0089250  2057.35   <2e-16 ***\nORIGIN_SZBMSZ11   18.9167941  0.0063340  2986.54   <2e-16 ***\nORIGIN_SZBMSZ12   18.7874661  0.0093024  2019.63   <2e-16 ***\nORIGIN_SZBMSZ13   19.5654046  0.0057517  3401.70   <2e-16 ***\nORIGIN_SZBMSZ14   19.0685619  0.0063346  3010.24   <2e-16 ***\nORIGIN_SZBMSZ15   19.4403124  0.0058147  3343.30   <2e-16 ***\nORIGIN_SZBMSZ16   18.4469203  0.0092638  1991.28   <2e-16 ***\nORIGIN_SZBMSZ17   18.3430175  0.0157692  1163.22   <2e-16 ***\nORIGIN_SZBPSZ01   20.1806714  0.0053660  3760.81   <2e-16 ***\nORIGIN_SZBPSZ02   19.8116707  0.0061485  3222.19   <2e-16 ***\nORIGIN_SZBPSZ03   19.8467602  0.0059769  3320.57   <2e-16 ***\nORIGIN_SZBPSZ04   20.4613200  0.0048398  4227.72   <2e-16 ***\nORIGIN_SZBPSZ05   20.5379711  0.0043769  4692.39   <2e-16 ***\nORIGIN_SZBPSZ06   18.8948034  0.0093668  2017.21   <2e-16 ***\nORIGIN_SZBPSZ07   19.4104568  0.0087961  2206.70   <2e-16 ***\nORIGIN_SZBSSZ01   20.0139503  0.0056561  3538.45   <2e-16 ***\nORIGIN_SZBSSZ02   20.2543885  0.0047198  4291.38   <2e-16 ***\nORIGIN_SZBSSZ03   19.5428803  0.0052713  3707.41   <2e-16 ***\nORIGIN_SZBTSZ01   20.0198045  0.0058541  3419.77   <2e-16 ***\nORIGIN_SZBTSZ02   19.3618525  0.0081472  2376.51   <2e-16 ***\nORIGIN_SZBTSZ03   19.5883853  0.0068935  2841.59   <2e-16 ***\nORIGIN_SZBTSZ04   18.7720238  0.0103909  1806.58   <2e-16 ***\nORIGIN_SZBTSZ05   18.8069026  0.0120628  1559.08   <2e-16 ***\nORIGIN_SZBTSZ06   18.7068633  0.0094575  1978.00   <2e-16 ***\nORIGIN_SZBTSZ07   17.6292257  0.0141551  1245.43   <2e-16 ***\nORIGIN_SZBTSZ08   18.6989374  0.0109610  1705.94   <2e-16 ***\nORIGIN_SZCBSZ01   18.2189868  0.0548317   332.27   <2e-16 ***\nORIGIN_SZCCSZ01   18.9734563  0.0139450  1360.59   <2e-16 ***\nORIGIN_SZCHSZ01   19.5955119  0.0121035  1619.00   <2e-16 ***\nORIGIN_SZCHSZ02   19.3320960  0.0081620  2368.55   <2e-16 ***\nORIGIN_SZCHSZ03   21.2164518  0.0063552  3338.43   <2e-16 ***\nORIGIN_SZCKSZ01   20.1046845  0.0049333  4075.29   <2e-16 ***\nORIGIN_SZCKSZ02   20.5371946  0.0050256  4086.53   <2e-16 ***\nORIGIN_SZCKSZ03   20.7210560  0.0042184  4912.07   <2e-16 ***\nORIGIN_SZCKSZ04   21.4013886  0.0042524  5032.80   <2e-16 ***\nORIGIN_SZCKSZ05   20.9413146  0.0049434  4236.18   <2e-16 ***\nORIGIN_SZCKSZ06   20.2557727  0.0071832  2819.88   <2e-16 ***\nORIGIN_SZCLSZ01   19.3383703  0.0076634  2523.46   <2e-16 ***\nORIGIN_SZCLSZ02   18.5226956  0.0135522  1366.77   <2e-16 ***\nORIGIN_SZCLSZ03   19.0225512  0.0080145  2373.51   <2e-16 ***\nORIGIN_SZCLSZ04   20.7981505  0.0042400  4905.22   <2e-16 ***\nORIGIN_SZCLSZ05   18.3015625  0.0146815  1246.58   <2e-16 ***\nORIGIN_SZCLSZ06   20.8207386  0.0039567  5262.09   <2e-16 ***\nORIGIN_SZCLSZ07   19.6728958  0.0054199  3629.76   <2e-16 ***\nORIGIN_SZCLSZ08   20.0851929  0.0056956  3526.43   <2e-16 ***\nORIGIN_SZCLSZ09   18.5749589  0.0165415  1122.93   <2e-16 ***\nORIGIN_SZDTSZ02   15.8276209  0.0833992   189.78   <2e-16 ***\nORIGIN_SZDTSZ03   16.2512838  0.0737972   220.22   <2e-16 ***\nORIGIN_SZDTSZ13   16.7744385  0.0312450   536.87   <2e-16 ***\nORIGIN_SZGLSZ01   18.2368248  0.0096104  1897.62   <2e-16 ***\nORIGIN_SZGLSZ02   19.8705255  0.0049014  4054.06   <2e-16 ***\nORIGIN_SZGLSZ03   19.8249435  0.0053109  3732.85   <2e-16 ***\nORIGIN_SZGLSZ04   20.7800335  0.0041261  5036.20   <2e-16 ***\nORIGIN_SZGLSZ05   20.6040494  0.0043049  4786.23   <2e-16 ***\nORIGIN_SZHGSZ01   20.0273475  0.0044824  4468.04   <2e-16 ***\nORIGIN_SZHGSZ02   20.2480656  0.0044575  4542.47   <2e-16 ***\nORIGIN_SZHGSZ03   20.0756442  0.0049003  4096.81   <2e-16 ***\nORIGIN_SZHGSZ04   20.7577748  0.0040465  5129.84   <2e-16 ***\nORIGIN_SZHGSZ05   20.9779992  0.0040123  5228.42   <2e-16 ***\nORIGIN_SZHGSZ06   19.7403058  0.0054229  3640.20   <2e-16 ***\nORIGIN_SZHGSZ07   20.1896268  0.0046051  4384.22   <2e-16 ***\nORIGIN_SZHGSZ08   19.8646492  0.0052403  3790.72   <2e-16 ***\nORIGIN_SZHGSZ09   18.3647736  0.0069196  2654.04   <2e-16 ***\nORIGIN_SZHGSZ10   16.8720475  0.0421046   400.72   <2e-16 ***\nORIGIN_SZJESZ01   20.2673794  0.0046723  4337.79   <2e-16 ***\nORIGIN_SZJESZ02   20.0595982  0.0046503  4313.61   <2e-16 ***\nORIGIN_SZJESZ03   19.9128778  0.0049848  3994.75   <2e-16 ***\nORIGIN_SZJESZ04   18.5053667  0.0099227  1864.94   <2e-16 ***\nORIGIN_SZJESZ05   17.8172930  0.0138840  1283.29   <2e-16 ***\nORIGIN_SZJESZ06   20.0124157  0.0045009  4446.36   <2e-16 ***\nORIGIN_SZJESZ07   18.1821423  0.0117267  1550.49   <2e-16 ***\nORIGIN_SZJESZ08   18.8713046  0.0116456  1620.46   <2e-16 ***\nORIGIN_SZJESZ09   20.5535527  0.0048456  4241.72   <2e-16 ***\nORIGIN_SZJESZ10   18.4922322  0.0191243   966.95   <2e-16 ***\nORIGIN_SZJESZ11   18.2891211  0.0197114   927.85   <2e-16 ***\nORIGIN_SZJWSZ01   20.4912737  0.0063102  3247.35   <2e-16 ***\nORIGIN_SZJWSZ02   20.8236694  0.0042249  4928.82   <2e-16 ***\nORIGIN_SZJWSZ03   21.2587613  0.0039733  5350.40   <2e-16 ***\nORIGIN_SZJWSZ04   20.3816464  0.0046199  4411.67   <2e-16 ***\nORIGIN_SZJWSZ05   18.0607448  0.0128857  1401.61   <2e-16 ***\nORIGIN_SZJWSZ06   18.7015202  0.0107614  1737.83   <2e-16 ***\nORIGIN_SZJWSZ07   17.3991822  0.0277096   627.91   <2e-16 ***\nORIGIN_SZJWSZ08   21.8044465  0.0037356  5836.95   <2e-16 ***\nORIGIN_SZJWSZ09   21.5414930  0.0036033  5978.19   <2e-16 ***\nORIGIN_SZKLSZ01   20.0307712  0.0047868  4184.59   <2e-16 ***\nORIGIN_SZKLSZ02   19.0634769  0.0062318  3059.05   <2e-16 ***\nORIGIN_SZKLSZ03   19.2685700  0.0057172  3370.25   <2e-16 ***\nORIGIN_SZKLSZ04   17.7085067  0.0119809  1478.06   <2e-16 ***\nORIGIN_SZKLSZ05   18.6384471  0.0107596  1732.26   <2e-16 ***\nORIGIN_SZKLSZ06   13.7280296  0.1857160    73.92   <2e-16 ***\nORIGIN_SZKLSZ07   18.6425146  0.0084952  2194.47   <2e-16 ***\nORIGIN_SZKLSZ08   18.0928506  0.0101567  1781.37   <2e-16 ***\nORIGIN_SZLKSZ01   17.8907138  0.0397083   450.55   <2e-16 ***\nORIGIN_SZMDSZ01   18.7605188  0.0285455   657.22   <2e-16 ***\nORIGIN_SZMDSZ02   19.1533927  0.0102815  1862.90   <2e-16 ***\nORIGIN_SZMDSZ03   17.8404982  0.0169690  1051.36   <2e-16 ***\nORIGIN_SZMPSZ01   19.0765941  0.0083937  2272.74   <2e-16 ***\nORIGIN_SZMPSZ02   19.2162527  0.0068331  2812.24   <2e-16 ***\nORIGIN_SZMPSZ03   19.9965344  0.0054569  3664.44   <2e-16 ***\nORIGIN_SZMUSZ02   15.9130765  0.1037472   153.38   <2e-16 ***\nORIGIN_SZNTSZ01   17.0840999  0.0352513   484.64   <2e-16 ***\nORIGIN_SZNTSZ02   16.5792122  0.0233186   710.99   <2e-16 ***\nORIGIN_SZNTSZ03   18.9506415  0.0075957  2494.93   <2e-16 ***\nORIGIN_SZNTSZ05   15.8770261  0.0495825   320.21   <2e-16 ***\nORIGIN_SZNTSZ06   15.3997415  0.0557029   276.46   <2e-16 ***\nORIGIN_SZNVSZ01   20.2241694  0.0043487  4650.65   <2e-16 ***\nORIGIN_SZNVSZ02   19.1897826  0.0065383  2934.97   <2e-16 ***\nORIGIN_SZNVSZ03   18.8854268  0.0080459  2347.22   <2e-16 ***\nORIGIN_SZNVSZ04   18.8940191  0.0090985  2076.61   <2e-16 ***\nORIGIN_SZNVSZ05   17.6278585  0.0168107  1048.61   <2e-16 ***\nORIGIN_SZPGSZ01   19.4825220  0.0122960  1584.46   <2e-16 ***\nORIGIN_SZPGSZ02   19.4726761  0.0073116  2663.25   <2e-16 ***\nORIGIN_SZPGSZ03   20.5515713  0.0045631  4503.86   <2e-16 ***\nORIGIN_SZPGSZ04   21.0527131  0.0041500  5072.89   <2e-16 ***\nORIGIN_SZPGSZ05   20.1436604  0.0057267  3517.48   <2e-16 ***\nORIGIN_SZPLSZ01   19.1832002  0.0120006  1598.53   <2e-16 ***\nORIGIN_SZPLSZ02   18.8752206  0.0149740  1260.53   <2e-16 ***\nORIGIN_SZPLSZ03   18.1000818  0.0371769   486.86   <2e-16 ***\nORIGIN_SZPLSZ04   17.1730559  0.0370280   463.79   <2e-16 ***\nORIGIN_SZPLSZ05   17.9084439  0.0225031   795.82   <2e-16 ***\nORIGIN_SZPNSZ01   21.0804425  0.0044829  4702.41   <2e-16 ***\nORIGIN_SZPNSZ02   19.8822123  0.0111507  1783.05   <2e-16 ***\nORIGIN_SZPNSZ03   17.9293289  0.0193571   926.24   <2e-16 ***\nORIGIN_SZPNSZ04   17.1039594  0.0334954   510.64   <2e-16 ***\nORIGIN_SZPNSZ05   18.2543864  0.0275554   662.46   <2e-16 ***\nORIGIN_SZPRSZ01   19.8777935  0.0117586  1690.49   <2e-16 ***\nORIGIN_SZPRSZ02   21.0751780  0.0044832  4700.88   <2e-16 ***\nORIGIN_SZPRSZ03   20.6717019  0.0045577  4535.55   <2e-16 ***\nORIGIN_SZPRSZ04   19.6365125  0.0074923  2620.90   <2e-16 ***\nORIGIN_SZPRSZ05   21.3132151  0.0042119  5060.24   <2e-16 ***\nORIGIN_SZPRSZ06   18.9314574  0.0117278  1614.24   <2e-16 ***\nORIGIN_SZPRSZ07   17.2822918  0.0162430  1063.98   <2e-16 ***\nORIGIN_SZPRSZ08   19.9267642  0.0062298  3198.62   <2e-16 ***\nORIGIN_SZQTSZ01   19.7357175  0.0066359  2974.08   <2e-16 ***\nORIGIN_SZQTSZ02   19.2082141  0.0061402  3128.26   <2e-16 ***\nORIGIN_SZQTSZ03   19.7771883  0.0056220  3517.83   <2e-16 ***\nORIGIN_SZQTSZ04   18.7114421  0.0072842  2568.76   <2e-16 ***\nORIGIN_SZQTSZ05   19.3049324  0.0062401  3093.69   <2e-16 ***\nORIGIN_SZQTSZ06   19.2643228  0.0065590  2937.09   <2e-16 ***\nORIGIN_SZQTSZ07   18.5697347  0.0095373  1947.06   <2e-16 ***\nORIGIN_SZQTSZ08   19.6147001  0.0061330  3198.21   <2e-16 ***\nORIGIN_SZQTSZ09   19.2550793  0.0069947  2752.82   <2e-16 ***\nORIGIN_SZQTSZ10   19.5801866  0.0064513  3035.07   <2e-16 ***\nORIGIN_SZQTSZ11   17.7398366  0.0143648  1234.95   <2e-16 ***\nORIGIN_SZQTSZ12   17.2420354  0.0186736   923.34   <2e-16 ***\nORIGIN_SZQTSZ13   19.3857418  0.0078878  2457.69   <2e-16 ***\nORIGIN_SZQTSZ14   18.1300753  0.0122096  1484.90   <2e-16 ***\nORIGIN_SZQTSZ15   19.4222283  0.0120871  1606.86   <2e-16 ***\nORIGIN_SZRCSZ01   18.1549045  0.0125108  1451.13   <2e-16 ***\nORIGIN_SZRCSZ06   18.8836400  0.0082161  2298.38   <2e-16 ***\nORIGIN_SZRVSZ01   16.7864438  0.0323796   518.43   <2e-16 ***\nORIGIN_SZRVSZ02   16.4203244  0.0276836   593.14   <2e-16 ***\nORIGIN_SZRVSZ03   16.6453738  0.0244992   679.42   <2e-16 ***\nORIGIN_SZRVSZ04   15.9559213  0.0556344   286.80   <2e-16 ***\nORIGIN_SZRVSZ05   17.0476331  0.0164122  1038.71   <2e-16 ***\nORIGIN_SZSBSZ01   20.0417968  0.0062488  3207.29   <2e-16 ***\nORIGIN_SZSBSZ02   19.1869565  0.0081051  2367.26   <2e-16 ***\nORIGIN_SZSBSZ03   20.5769861  0.0045108  4561.70   <2e-16 ***\nORIGIN_SZSBSZ04   20.5154199  0.0050548  4058.57   <2e-16 ***\nORIGIN_SZSBSZ05   19.6250669  0.0065562  2993.35   <2e-16 ***\nORIGIN_SZSBSZ06   18.8419757  0.0171135  1101.00   <2e-16 ***\nORIGIN_SZSBSZ07   19.4897259  0.0124528  1565.09   <2e-16 ***\nORIGIN_SZSBSZ08   18.7027917  0.0140545  1330.73   <2e-16 ***\nORIGIN_SZSBSZ09   18.8893480  0.0088571  2132.67   <2e-16 ***\nORIGIN_SZSESZ02   20.8962192  0.0041665  5015.34   <2e-16 ***\nORIGIN_SZSESZ03   20.9452771  0.0039737  5270.94   <2e-16 ***\nORIGIN_SZSESZ04   20.6576142  0.0046364  4455.55   <2e-16 ***\nORIGIN_SZSESZ05   19.5170732  0.0058912  3312.92   <2e-16 ***\nORIGIN_SZSESZ06   20.7595824  0.0045747  4537.89   <2e-16 ***\nORIGIN_SZSESZ07   17.6888256  0.0195787   903.47   <2e-16 ***\nORIGIN_SZSGSZ01   19.1359250  0.0085781  2230.79   <2e-16 ***\nORIGIN_SZSGSZ02   18.5614369  0.0102037  1819.10   <2e-16 ***\nORIGIN_SZSGSZ03   19.9933176  0.0050434  3964.23   <2e-16 ***\nORIGIN_SZSGSZ04   20.2426871  0.0047211  4287.71   <2e-16 ***\nORIGIN_SZSGSZ05   18.0114965  0.0107743  1671.70   <2e-16 ***\nORIGIN_SZSGSZ06   20.2593194  0.0044538  4548.76   <2e-16 ***\nORIGIN_SZSGSZ07   19.0763664  0.0062968  3029.54   <2e-16 ***\nORIGIN_SZSKSZ01   19.9222451  0.0085136  2340.04   <2e-16 ***\nORIGIN_SZSKSZ02   20.8633383  0.0055248  3776.33   <2e-16 ***\nORIGIN_SZSKSZ03   19.6528148  0.0080534  2440.33   <2e-16 ***\nORIGIN_SZSKSZ04   18.0754470  0.0275771   655.45   <2e-16 ***\nORIGIN_SZSKSZ05   19.1192521  0.0155579  1228.91   <2e-16 ***\nORIGIN_SZSLSZ01   17.1501034  0.0329384   520.67   <2e-16 ***\nORIGIN_SZSLSZ04   19.5949774  0.0076753  2552.98   <2e-16 ***\nORIGIN_SZSRSZ01   16.9761403  0.0162020  1047.78   <2e-16 ***\nORIGIN_SZTHSZ01   17.9695687  0.0488559   367.81   <2e-16 ***\nORIGIN_SZTHSZ03   18.5427522  0.0223617   829.22   <2e-16 ***\nORIGIN_SZTHSZ04   17.4760374  0.0286247   610.52   <2e-16 ***\nORIGIN_SZTHSZ06   17.8401186  0.0183322   973.16   <2e-16 ***\nORIGIN_SZTMSZ01   20.3406361  0.0056607  3593.33   <2e-16 ***\nORIGIN_SZTMSZ02   22.0307026  0.0037386  5892.85   <2e-16 ***\nORIGIN_SZTMSZ03   21.3451920  0.0040606  5256.65   <2e-16 ***\nORIGIN_SZTMSZ04   20.6611593  0.0049896  4140.87   <2e-16 ***\nORIGIN_SZTMSZ05   19.3323133  0.0112868  1712.82   <2e-16 ***\nORIGIN_SZTNSZ01   17.9513571  0.0128266  1399.54   <2e-16 ***\nORIGIN_SZTNSZ02   18.0267387  0.0098372  1832.51   <2e-16 ***\nORIGIN_SZTNSZ03   17.7253700  0.0134668  1316.23   <2e-16 ***\nORIGIN_SZTNSZ04   19.4474075  0.0073760  2636.59   <2e-16 ***\nORIGIN_SZTPSZ01   19.1078631  0.0065635  2911.25   <2e-16 ***\nORIGIN_SZTPSZ02   20.2837634  0.0041411  4898.18   <2e-16 ***\nORIGIN_SZTPSZ03   19.1838238  0.0059552  3221.37   <2e-16 ***\nORIGIN_SZTPSZ04   19.1805388  0.0054778  3501.53   <2e-16 ***\nORIGIN_SZTPSZ05   19.3718076  0.0058610  3305.18   <2e-16 ***\nORIGIN_SZTPSZ06   19.6605723  0.0054968  3576.70   <2e-16 ***\nORIGIN_SZTPSZ07   19.4499807  0.0060491  3215.36   <2e-16 ***\nORIGIN_SZTPSZ08   18.7996538  0.0095757  1963.28   <2e-16 ***\nORIGIN_SZTPSZ09   19.0025110  0.0067068  2833.31   <2e-16 ***\nORIGIN_SZTPSZ10   18.8899657  0.0076094  2482.46   <2e-16 ***\nORIGIN_SZTPSZ11   19.6277780  0.0053983  3635.93   <2e-16 ***\nORIGIN_SZTPSZ12   19.1471104  0.0065742  2912.45   <2e-16 ***\nORIGIN_SZTSSZ01   17.4901113  0.0478954   365.17   <2e-16 ***\nORIGIN_SZTSSZ02   20.4997466  0.0081850  2504.55   <2e-16 ***\nORIGIN_SZTSSZ03   20.1076553  0.0084728  2373.19   <2e-16 ***\nORIGIN_SZTSSZ04   20.0646610  0.0089008  2254.26   <2e-16 ***\nORIGIN_SZTSSZ05   19.3962067  0.0151392  1281.19   <2e-16 ***\nORIGIN_SZTSSZ06   20.9235857  0.0178278  1173.65   <2e-16 ***\nORIGIN_SZWCSZ01   20.8411600  0.0086519  2408.86   <2e-16 ***\nORIGIN_SZWCSZ02   17.7355404  0.0328889   539.26   <2e-16 ***\nORIGIN_SZWCSZ03   14.9380886  0.1240699   120.40   <2e-16 ***\nORIGIN_SZWDSZ01   21.1969012  0.0037830  5603.23   <2e-16 ***\nORIGIN_SZWDSZ02   20.5930001  0.0044572  4620.13   <2e-16 ***\nORIGIN_SZWDSZ03   21.2521867  0.0041672  5099.85   <2e-16 ***\nORIGIN_SZWDSZ04   21.0702687  0.0048648  4331.13   <2e-16 ***\nORIGIN_SZWDSZ05   20.4008998  0.0051801  3938.35   <2e-16 ***\nORIGIN_SZWDSZ06   20.6669176  0.0049280  4193.78   <2e-16 ***\nORIGIN_SZWDSZ07   19.0500370  0.0082729  2302.71   <2e-16 ***\nORIGIN_SZWDSZ08   19.0816252  0.0080667  2365.49   <2e-16 ***\nORIGIN_SZWDSZ09   21.4182096  0.0040391  5302.73   <2e-16 ***\nORIGIN_SZYSSZ01   19.5355157  0.0057540  3395.14   <2e-16 ***\nORIGIN_SZYSSZ02   20.8737972  0.0048278  4323.64   <2e-16 ***\nORIGIN_SZYSSZ03   21.6614437  0.0040011  5413.81   <2e-16 ***\nORIGIN_SZYSSZ04   20.9305289  0.0043595  4801.10   <2e-16 ***\nORIGIN_SZYSSZ05   20.1727678  0.0058466  3450.34   <2e-16 ***\nORIGIN_SZYSSZ06   19.1481507  0.0116724  1640.47   <2e-16 ***\nORIGIN_SZYSSZ07   18.7919074  0.0141636  1326.78   <2e-16 ***\nORIGIN_SZYSSZ08   19.9733515  0.0061229  3262.07   <2e-16 ***\nORIGIN_SZYSSZ09   20.9366181  0.0040347  5189.15   <2e-16 ***\nlog(SCHOOL_COUNT)  0.4755516  0.0004701  1011.55   <2e-16 ***\nlog(RETAIL_COUNT)  0.1796905  0.0001856   968.12   <2e-16 ***\nlog(DIST)         -1.6929522  0.0004093 -4136.01   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 189463537  on 14471  degrees of freedom\nResidual deviance:  15526121  on 14189  degrees of freedom\nAIC: 15615824\n\nNumber of Fisher Scoring iterations: 6\n\noptions(max.print = 1000000)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#goodness-of-fit",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#goodness-of-fit",
    "title": "In-class Exercise 4",
    "section": "2.4 Goodness-of-Fit",
    "text": "2.4 Goodness-of-Fit\nWe will fit an origin constraint SIM.\n\nCalcRSquared <- function(observed,estimated) {\n  r <- cor(observed, estimated)\n  R2 <- r^2\n  R2\n}\n\nWe can now examine how the constraints hold for destination this time.\n\nCalcRSquared(orcSIM_Poisson$data$TRIPS, orcSIM_Poisson$fitted.values)\n\n[1] 0.4362208\n\n\n\nperformance_rmse(orcSIM_Poisson,\n                 normalized = FALSE)\n\n[1] 2613.236"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#doubly-constrained",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#doubly-constrained",
    "title": "In-class Exercise 4",
    "section": "2.5 Doubly Constrained",
    "text": "2.5 Doubly Constrained\nWe will fit a doubly constrained SIM by using the code chunk below.\n\ndbsSIM_Poisson <- glm(formula = TRIPS ~\n                        ORIGIN_SZ +\n                        DESTIN_SZ +\n                        log(DIST),\n                      family = poisson(link = 'log'),\n                      data = inter_zonal_flow,\n                      na.action = na.exclude)\n\ndbsSIM_Poisson\n\n\nCall:  glm(formula = TRIPS ~ ORIGIN_SZ + DESTIN_SZ + log(DIST), family = poisson(link = \"log\"), \n    data = inter_zonal_flow, na.action = na.exclude)\n\nCoefficients:\n    (Intercept)  ORIGIN_SZAMSZ02  ORIGIN_SZAMSZ03  ORIGIN_SZAMSZ04  \n     21.8312374        0.5263502        0.3139982       -0.2146257  \nORIGIN_SZAMSZ05  ORIGIN_SZAMSZ06  ORIGIN_SZAMSZ07  ORIGIN_SZAMSZ08  \n     -0.1890446        0.1539201       -0.9826565       -0.4488417  \nORIGIN_SZAMSZ09  ORIGIN_SZAMSZ10  ORIGIN_SZAMSZ11  ORIGIN_SZAMSZ12  \n      0.0713474        0.4313742       -1.4712226       -1.7250733  \nORIGIN_SZBDSZ01  ORIGIN_SZBDSZ02  ORIGIN_SZBDSZ03  ORIGIN_SZBDSZ04  \n      0.8810576        0.1100240        0.3606166        1.4624347  \nORIGIN_SZBDSZ05  ORIGIN_SZBDSZ06  ORIGIN_SZBDSZ07  ORIGIN_SZBDSZ08  \n      0.6207557        0.6712973       -1.2338669       -1.0444562  \nORIGIN_SZBKSZ01  ORIGIN_SZBKSZ02  ORIGIN_SZBKSZ03  ORIGIN_SZBKSZ04  \n     -0.2838426        0.5550522        0.7396640       -0.2242451  \nORIGIN_SZBKSZ05  ORIGIN_SZBKSZ06  ORIGIN_SZBKSZ07  ORIGIN_SZBKSZ08  \n     -0.2371614       -0.1413812        0.7089989       -0.0907065  \nORIGIN_SZBKSZ09  ORIGIN_SZBLSZ01  ORIGIN_SZBLSZ02  ORIGIN_SZBLSZ03  \n     -0.1775146       -2.3684539       -2.8078475       -3.3122763  \nORIGIN_SZBLSZ04  ORIGIN_SZBMSZ01  ORIGIN_SZBMSZ02  ORIGIN_SZBMSZ03  \n     -2.6770542        0.0618035       -1.3535767       -0.7569095  \nORIGIN_SZBMSZ04  ORIGIN_SZBMSZ05  ORIGIN_SZBMSZ06  ORIGIN_SZBMSZ07  \n     -0.2949304       -2.6131992       -3.0315024       -0.6962524  \nORIGIN_SZBMSZ08  ORIGIN_SZBMSZ09  ORIGIN_SZBMSZ10  ORIGIN_SZBMSZ11  \n     -0.9310730       -1.2911253       -1.6687004       -1.1152794  \nORIGIN_SZBMSZ12  ORIGIN_SZBMSZ13  ORIGIN_SZBMSZ14  ORIGIN_SZBMSZ15  \n     -1.5323954       -0.6267376       -1.0475467       -0.5049444  \nORIGIN_SZBMSZ16  ORIGIN_SZBMSZ17  ORIGIN_SZBPSZ01  ORIGIN_SZBPSZ02  \n     -1.5282897       -1.5722349        0.5814175        0.0875442  \nORIGIN_SZBPSZ03  ORIGIN_SZBPSZ04  ORIGIN_SZBPSZ05  ORIGIN_SZBPSZ06  \n      0.3358227        0.6507586        0.9502124       -1.0480314  \nORIGIN_SZBPSZ07  ORIGIN_SZBSSZ01  ORIGIN_SZBSSZ02  ORIGIN_SZBSSZ03  \n     -0.5467931        0.2998334        0.2841036       -0.2331505  \nORIGIN_SZBTSZ01  ORIGIN_SZBTSZ02  ORIGIN_SZBTSZ03  ORIGIN_SZBTSZ04  \n      0.0987284       -0.6261229       -0.4326963       -1.4998668  \nORIGIN_SZBTSZ05  ORIGIN_SZBTSZ06  ORIGIN_SZBTSZ07  ORIGIN_SZBTSZ08  \n     -0.9564768       -1.2853131       -2.3870991       -1.3715855  \nORIGIN_SZCBSZ01  ORIGIN_SZCCSZ01  ORIGIN_SZCHSZ01  ORIGIN_SZCHSZ02  \n     -3.5940232       -0.7008220       -0.9109524       -0.8566547  \nORIGIN_SZCHSZ03  ORIGIN_SZCKSZ01  ORIGIN_SZCKSZ02  ORIGIN_SZCKSZ03  \n      1.1153731        0.3001815        0.7185711        1.1389824  \nORIGIN_SZCKSZ04  ORIGIN_SZCKSZ05  ORIGIN_SZCKSZ06  ORIGIN_SZCLSZ01  \n      1.6281772        0.8338470        0.6528993       -0.7174758  \nORIGIN_SZCLSZ02  ORIGIN_SZCLSZ03  ORIGIN_SZCLSZ04  ORIGIN_SZCLSZ05  \n     -1.7513100       -1.0362873        0.6160017       -2.1005122  \nORIGIN_SZCLSZ06  ORIGIN_SZCLSZ07  ORIGIN_SZCLSZ08  ORIGIN_SZCLSZ09  \n      0.7252108       -0.5343482       -0.2153408       -1.8019961  \nORIGIN_SZDTSZ02  ORIGIN_SZDTSZ03  ORIGIN_SZDTSZ13  ORIGIN_SZGLSZ01  \n     -3.9057711       -3.4152419       -3.0183438       -1.7812384  \nORIGIN_SZGLSZ02  ORIGIN_SZGLSZ03  ORIGIN_SZGLSZ04  ORIGIN_SZGLSZ05  \n     -0.1074991       -0.2461106        0.8657186        0.5871393  \nORIGIN_SZHGSZ01  ORIGIN_SZHGSZ02  ORIGIN_SZHGSZ03  ORIGIN_SZHGSZ04  \n      0.3543819        0.4218178        0.2411309        0.8180622  \nORIGIN_SZHGSZ05  ORIGIN_SZHGSZ06  ORIGIN_SZHGSZ07  ORIGIN_SZHGSZ08  \n      1.2173687       -0.1826300        0.3172839       -0.1151369  \nORIGIN_SZHGSZ09  ORIGIN_SZHGSZ10  ORIGIN_SZJESZ01  ORIGIN_SZJESZ02  \n     -1.2873441       -3.3783178        0.4859234        0.1766088  \nORIGIN_SZJESZ03  ORIGIN_SZJESZ04  ORIGIN_SZJESZ05  ORIGIN_SZJESZ06  \n     -0.2177441       -1.5532182       -2.3332926        0.3007382  \nORIGIN_SZJESZ07  ORIGIN_SZJESZ08  ORIGIN_SZJESZ09  ORIGIN_SZJESZ10  \n     -1.9687994       -1.3032070        0.5762635       -1.4423113  \nORIGIN_SZJESZ11  ORIGIN_SZJWSZ01  ORIGIN_SZJWSZ02  ORIGIN_SZJWSZ03  \n     -1.9720897        0.3808627        0.7963999        1.5429636  \nORIGIN_SZJWSZ04  ORIGIN_SZJWSZ05  ORIGIN_SZJWSZ06  ORIGIN_SZJWSZ07  \n      0.6410760       -2.1571049       -1.5174532       -2.7089963  \nORIGIN_SZJWSZ08  ORIGIN_SZJWSZ09  ORIGIN_SZKLSZ01  ORIGIN_SZKLSZ02  \n      1.5343415        1.8837410        0.1081286       -0.8844695  \nORIGIN_SZKLSZ03  ORIGIN_SZKLSZ04  ORIGIN_SZKLSZ05  ORIGIN_SZKLSZ06  \n     -0.6872640       -2.2090319       -1.1728726       -6.1162315  \nORIGIN_SZKLSZ07  ORIGIN_SZKLSZ08  ORIGIN_SZLKSZ01  ORIGIN_SZMDSZ01  \n     -1.4082749       -1.7781551       -2.0531568       -0.8825639  \nORIGIN_SZMDSZ02  ORIGIN_SZMDSZ03  ORIGIN_SZMPSZ01  ORIGIN_SZMPSZ02  \n     -0.6219993       -2.0840156       -0.9659093       -1.0411153  \nORIGIN_SZMPSZ03  ORIGIN_SZMUSZ02  ORIGIN_SZNTSZ01  ORIGIN_SZNTSZ02  \n      0.0001659       -3.7599031       -3.0388366       -3.4230640  \nORIGIN_SZNTSZ03  ORIGIN_SZNTSZ05  ORIGIN_SZNTSZ06  ORIGIN_SZNVSZ01  \n     -0.9094796       -4.0861681       -3.9497128        0.3235636  \nORIGIN_SZNVSZ02  ORIGIN_SZNVSZ03  ORIGIN_SZNVSZ04  ORIGIN_SZNVSZ05  \n     -0.6946748       -1.0540196       -0.9897977       -2.2578432  \nORIGIN_SZPGSZ01  ORIGIN_SZPGSZ02  ORIGIN_SZPGSZ03  ORIGIN_SZPGSZ04  \n      0.2399827       -0.3352342        0.9515148        1.3998952  \nORIGIN_SZPGSZ05  ORIGIN_SZPLSZ01  ORIGIN_SZPLSZ02  ORIGIN_SZPLSZ03  \n      0.4451629       -0.9705918       -1.0670151       -2.1229124  \nORIGIN_SZPLSZ04  ORIGIN_SZPLSZ05  ORIGIN_SZPNSZ01  ORIGIN_SZPNSZ02  \n     -3.0911932       -2.1705708        0.9052637       -0.1720425  \nORIGIN_SZPNSZ03  ORIGIN_SZPNSZ04  ORIGIN_SZPNSZ05  ORIGIN_SZPRSZ01  \n     -2.3973459       -3.4483689       -2.0588530       -0.6399015  \nORIGIN_SZPRSZ02  ORIGIN_SZPRSZ03  ORIGIN_SZPRSZ04  ORIGIN_SZPRSZ05  \n      0.8122270        0.3990960       -0.8485348        0.8008791  \nORIGIN_SZPRSZ06  ORIGIN_SZPRSZ07  ORIGIN_SZPRSZ08  ORIGIN_SZQTSZ01  \n     -1.4498806       -3.2025045       -0.5862269       -0.1859270  \nORIGIN_SZQTSZ02  ORIGIN_SZQTSZ03  ORIGIN_SZQTSZ04  ORIGIN_SZQTSZ05  \n     -0.8715122       -0.1259816       -1.4620032       -0.6675643  \nORIGIN_SZQTSZ06  ORIGIN_SZQTSZ07  ORIGIN_SZQTSZ08  ORIGIN_SZQTSZ09  \n     -0.8190026       -1.5189403       -0.4976238       -0.9006162  \nORIGIN_SZQTSZ10  ORIGIN_SZQTSZ11  ORIGIN_SZQTSZ12  ORIGIN_SZQTSZ13  \n     -0.6690184       -2.5203437       -3.0461675       -0.7501068  \nORIGIN_SZQTSZ14  ORIGIN_SZQTSZ15  ORIGIN_SZRCSZ01  ORIGIN_SZRCSZ06  \n     -1.9321849       -0.9576828       -1.8167951       -0.5560563  \nORIGIN_SZRVSZ01  ORIGIN_SZRVSZ02  ORIGIN_SZRVSZ03  ORIGIN_SZRVSZ04  \n     -2.8862570       -3.1555662       -2.9836089       -3.5520422  \nORIGIN_SZRVSZ05  ORIGIN_SZSBSZ01  ORIGIN_SZSBSZ02  ORIGIN_SZSBSZ03  \n     -2.5866584        0.2867444       -0.9012334        0.8311038  \nORIGIN_SZSBSZ04  ORIGIN_SZSBSZ05  ORIGIN_SZSBSZ06  ORIGIN_SZSBSZ07  \n      0.4044170       -0.2661845       -0.9023075        0.0505870  \nORIGIN_SZSBSZ08  ORIGIN_SZSBSZ09  ORIGIN_SZSESZ02  ORIGIN_SZSESZ03  \n     -1.1158011       -0.9682835        1.1452735        1.2815277  \nORIGIN_SZSESZ04  ORIGIN_SZSESZ05  ORIGIN_SZSESZ06  ORIGIN_SZSESZ07  \n      0.8085857       -0.2329413        1.0576879       -2.3165908  \nORIGIN_SZSGSZ01  ORIGIN_SZSGSZ02  ORIGIN_SZSGSZ03  ORIGIN_SZSGSZ04  \n     -0.6606350       -1.3638984        0.1152591        0.2954067  \nORIGIN_SZSGSZ05  ORIGIN_SZSGSZ06  ORIGIN_SZSGSZ07  ORIGIN_SZSKSZ01  \n     -2.0792678        0.4563227       -0.8955254       -0.3184402  \nORIGIN_SZSKSZ02  ORIGIN_SZSKSZ03  ORIGIN_SZSKSZ04  ORIGIN_SZSKSZ05  \n      1.1160484       -0.2566692       -1.5781827       -0.2724361  \nORIGIN_SZSLSZ01  ORIGIN_SZSLSZ04  ORIGIN_SZSRSZ01  ORIGIN_SZTHSZ01  \n     -2.4458625       -0.0987076       -2.2584977       -2.5878524  \nORIGIN_SZTHSZ03  ORIGIN_SZTHSZ04  ORIGIN_SZTHSZ06  ORIGIN_SZTMSZ01  \n     -0.8101746       -2.4186655       -1.7080541       -0.2193476  \nORIGIN_SZTMSZ02  ORIGIN_SZTMSZ03  ORIGIN_SZTMSZ04  ORIGIN_SZTMSZ05  \n      1.7772464        1.0051343        0.1642370       -1.2878706  \nORIGIN_SZTNSZ01  ORIGIN_SZTNSZ02  ORIGIN_SZTNSZ03  ORIGIN_SZTNSZ04  \n     -1.7163504       -1.6508988       -2.1545577       -0.3949120  \nORIGIN_SZTPSZ01  ORIGIN_SZTPSZ02  ORIGIN_SZTPSZ03  ORIGIN_SZTPSZ04  \n     -0.8058100        0.5369060       -0.7779333       -0.8153581  \nORIGIN_SZTPSZ05  ORIGIN_SZTPSZ06  ORIGIN_SZTPSZ07  ORIGIN_SZTPSZ08  \n     -0.5073676        0.0847301       -0.5839519       -1.0577941  \nORIGIN_SZTPSZ09  ORIGIN_SZTPSZ10  ORIGIN_SZTPSZ11  ORIGIN_SZTPSZ12  \n     -0.9067707       -1.1362091       -0.2374621       -0.8028874  \nORIGIN_SZTSSZ01  ORIGIN_SZTSSZ02  ORIGIN_SZTSSZ03  ORIGIN_SZTSSZ04  \n     -2.7809271        0.0425804        0.1142369       -0.6186261  \nORIGIN_SZTSSZ05  ORIGIN_SZTSSZ06  ORIGIN_SZWCSZ01  ORIGIN_SZWCSZ02  \n     -1.0846732        0.3980173        1.3545143       -2.9863278  \nORIGIN_SZWCSZ03  ORIGIN_SZWDSZ01  ORIGIN_SZWDSZ02  ORIGIN_SZWDSZ03  \n     -5.0504916        1.5238429        0.2832576        1.3702524  \nORIGIN_SZWDSZ04  ORIGIN_SZWDSZ05  ORIGIN_SZWDSZ06  ORIGIN_SZWDSZ07  \n      1.0248225        0.2356778        0.3146925       -1.4971897  \nORIGIN_SZWDSZ08  ORIGIN_SZWDSZ09  ORIGIN_SZYSSZ01  ORIGIN_SZYSSZ02  \n     -0.8894079        1.4437633       -0.2519398        0.8726785  \nORIGIN_SZYSSZ03  ORIGIN_SZYSSZ04  ORIGIN_SZYSSZ05  ORIGIN_SZYSSZ06  \n      1.7868139        0.8418040        0.4292096       -0.7459961  \nORIGIN_SZYSSZ07  ORIGIN_SZYSSZ08  ORIGIN_SZYSSZ09  DESTIN_SZAMSZ02  \n     -0.8422281        0.1829428        1.1159712        0.0694567  \nDESTIN_SZAMSZ03  DESTIN_SZAMSZ04  DESTIN_SZAMSZ05  DESTIN_SZAMSZ06  \n      0.0760100       -1.1306391       -1.0751133       -0.9624298  \nDESTIN_SZAMSZ07  DESTIN_SZAMSZ08  DESTIN_SZAMSZ09  DESTIN_SZAMSZ10  \n     -1.5060319       -0.4813202       -1.0220675        0.1235142  \nDESTIN_SZAMSZ11  DESTIN_SZAMSZ12  DESTIN_SZBDSZ01  DESTIN_SZBDSZ02  \n     -0.8917993        0.0195208        0.9736349       -0.1969470  \nDESTIN_SZBDSZ03  DESTIN_SZBDSZ04  DESTIN_SZBDSZ05  DESTIN_SZBDSZ06  \n      0.1266471        1.1608485        0.9293840        0.4090567  \nDESTIN_SZBDSZ07  DESTIN_SZBDSZ08  DESTIN_SZBKSZ01  DESTIN_SZBKSZ02  \n     -0.8171478       -1.5895287       -1.3793311       -0.5253670  \nDESTIN_SZBKSZ03  DESTIN_SZBKSZ04  DESTIN_SZBKSZ05  DESTIN_SZBKSZ06  \n     -1.0095362       -0.5662858       -0.9406607       -1.3129276  \nDESTIN_SZBKSZ07  DESTIN_SZBKSZ08  DESTIN_SZBKSZ09  DESTIN_SZBLSZ01  \n      0.0120605       -1.3658471       -0.1771310       -0.8175223  \nDESTIN_SZBLSZ02  DESTIN_SZBLSZ03  DESTIN_SZBLSZ04  DESTIN_SZBMSZ01  \n      0.1631280        1.2598494       -0.5642975        0.6921844  \nDESTIN_SZBMSZ02  DESTIN_SZBMSZ03  DESTIN_SZBMSZ04  DESTIN_SZBMSZ05  \n     -0.1209392       -0.2373881       -0.0407117       -0.2363309  \nDESTIN_SZBMSZ06  DESTIN_SZBMSZ07  DESTIN_SZBMSZ08  DESTIN_SZBMSZ09  \n     -1.1930710        0.4625103       -0.8604731       -2.1290239  \nDESTIN_SZBMSZ10  DESTIN_SZBMSZ11  DESTIN_SZBMSZ12  DESTIN_SZBMSZ13  \n     -1.4617153       -1.3234050       -0.8399230        0.1366529  \nDESTIN_SZBMSZ14  DESTIN_SZBMSZ15  DESTIN_SZBMSZ16  DESTIN_SZBMSZ17  \n     -1.0491968       -0.6726684       -1.4011734       -1.5682752  \nDESTIN_SZBPSZ01  DESTIN_SZBPSZ02  DESTIN_SZBPSZ03  DESTIN_SZBPSZ04  \n     -1.1120017       -2.0833466       -1.6937265       -0.7964999  \nDESTIN_SZBPSZ05  DESTIN_SZBPSZ06  DESTIN_SZBPSZ07  DESTIN_SZBSSZ01  \n      0.2109118       -1.1808365       -0.2077428        0.3164175  \nDESTIN_SZBSSZ02  DESTIN_SZBSSZ03  DESTIN_SZBTSZ01  DESTIN_SZBTSZ02  \n     -0.4852688        0.4130432        0.6215095       -0.0145076  \nDESTIN_SZBTSZ03  DESTIN_SZBTSZ04  DESTIN_SZBTSZ05  DESTIN_SZBTSZ06  \n      0.4919981       -0.6957555        0.3329814       -0.1333295  \nDESTIN_SZBTSZ07  DESTIN_SZBTSZ08  DESTIN_SZCBSZ01  DESTIN_SZCCSZ01  \n     -1.4449581       -0.7079056       -5.7344725       -0.0009541  \nDESTIN_SZCHSZ01  DESTIN_SZCHSZ02  DESTIN_SZCHSZ03  DESTIN_SZCKSZ01  \n     -0.2083016        0.5369606        2.5530638       -0.5725975  \nDESTIN_SZCKSZ02  DESTIN_SZCKSZ03  DESTIN_SZCKSZ04  DESTIN_SZCKSZ05  \n     -1.1181852        0.1156680       -0.8647725       -1.1641791  \nDESTIN_SZCKSZ06  DESTIN_SZCLSZ01  DESTIN_SZCLSZ02  DESTIN_SZCLSZ03  \n     -0.4397612        0.1930552       -2.0436501       -0.9338571  \nDESTIN_SZCLSZ04  DESTIN_SZCLSZ05  DESTIN_SZCLSZ06  DESTIN_SZCLSZ07  \n      0.0532041       -1.0782781        0.4068171       -0.3579507  \nDESTIN_SZCLSZ08  DESTIN_SZCLSZ09  DESTIN_SZDTSZ02  DESTIN_SZDTSZ03  \n     -0.2487993        0.1611080       -1.7308348       -0.5994253  \nDESTIN_SZDTSZ13  DESTIN_SZGLSZ01  DESTIN_SZGLSZ02  DESTIN_SZGLSZ03  \n     -1.3685031       -0.0910001       -0.0692224        0.6493421  \nDESTIN_SZGLSZ04  DESTIN_SZGLSZ05  DESTIN_SZHGSZ01  DESTIN_SZHGSZ02  \n      0.9327947        0.8161728        0.0658625       -0.8134329  \nDESTIN_SZHGSZ03  DESTIN_SZHGSZ04  DESTIN_SZHGSZ05  DESTIN_SZHGSZ06  \n     -1.3546132       -0.4500588       -0.5026431       -0.8673686  \nDESTIN_SZHGSZ07  DESTIN_SZHGSZ08  DESTIN_SZHGSZ09  DESTIN_SZHGSZ10  \n      0.0560490       -0.0443189       -0.0126355       -3.5821793  \nDESTIN_SZJESZ01  DESTIN_SZJESZ02  DESTIN_SZJESZ03  DESTIN_SZJESZ04  \n     -0.3704281       -0.7369159       -0.8985484       -1.0511995  \nDESTIN_SZJESZ05  DESTIN_SZJESZ06  DESTIN_SZJESZ07  DESTIN_SZJESZ08  \n     -1.5324974        0.3105267       -1.3234483       -0.6559742  \nDESTIN_SZJESZ09  DESTIN_SZJESZ10  DESTIN_SZJESZ11  DESTIN_SZJWSZ01  \n      0.2663752        0.8529026        0.5559641       -0.9790971  \nDESTIN_SZJWSZ02  DESTIN_SZJWSZ03  DESTIN_SZJWSZ04  DESTIN_SZJWSZ05  \n     -0.8746590        0.5689062        0.4520963       -1.0249671  \nDESTIN_SZJWSZ06  DESTIN_SZJWSZ07  DESTIN_SZJWSZ08  DESTIN_SZJWSZ09  \n     -0.7451483       -2.8453099       -0.3372309        1.0505330  \nDESTIN_SZKLSZ01  DESTIN_SZKLSZ02  DESTIN_SZKLSZ03  DESTIN_SZKLSZ04  \n     -0.2334836       -0.5416148       -0.8026495       -1.2918594  \nDESTIN_SZKLSZ05  DESTIN_SZKLSZ06  DESTIN_SZKLSZ07  DESTIN_SZKLSZ08  \n     -0.4069101       -2.5333101       -0.6623343       -0.1408205  \nDESTIN_SZLKSZ01  DESTIN_SZMDSZ01  DESTIN_SZMDSZ02  DESTIN_SZMDSZ03  \n     -1.2639235       -1.5655800       -0.9767682       -3.3328109  \nDESTIN_SZMPSZ01  DESTIN_SZMPSZ02  DESTIN_SZMPSZ03  DESTIN_SZMUSZ02  \n     -0.4552859       -0.5386560        0.4952000       -1.4434175  \nDESTIN_SZNTSZ01  DESTIN_SZNTSZ02  DESTIN_SZNTSZ03  DESTIN_SZNTSZ05  \n     -2.9194067       -1.3780179       -0.5044699       -2.0017134  \nDESTIN_SZNTSZ06  DESTIN_SZNVSZ01  DESTIN_SZNVSZ02  DESTIN_SZNVSZ03  \n     -3.8120537       -0.1071506       -0.0274710        0.1076352  \nDESTIN_SZNVSZ04  DESTIN_SZNVSZ05  DESTIN_SZPGSZ01  DESTIN_SZPGSZ02  \n     -1.2087250       -1.0058290       -1.2029931       -1.2878671  \nDESTIN_SZPGSZ03  DESTIN_SZPGSZ04  DESTIN_SZPGSZ05  DESTIN_SZPLSZ01  \n     -0.1520894       -0.1985959       -1.5290983       -0.3567934  \nDESTIN_SZPLSZ02  DESTIN_SZPLSZ03  DESTIN_SZPLSZ04  DESTIN_SZPLSZ05  \n     -1.7114351       -0.3241427       -1.7117196       -0.5086379  \nDESTIN_SZPNSZ01  DESTIN_SZPNSZ02  DESTIN_SZPNSZ03  DESTIN_SZPNSZ04  \n      0.2026781        0.8313754       -0.4041254        1.5814539  \nDESTIN_SZPNSZ05  DESTIN_SZPRSZ01  DESTIN_SZPRSZ02  DESTIN_SZPRSZ03  \n      1.1823430       -1.1057553        0.0895099        0.6921925  \nDESTIN_SZPRSZ04  DESTIN_SZPRSZ05  DESTIN_SZPRSZ06  DESTIN_SZPRSZ07  \n     -0.2848336        0.1744480        0.4279206       -1.5123108  \nDESTIN_SZPRSZ08  DESTIN_SZQTSZ01  DESTIN_SZQTSZ02  DESTIN_SZQTSZ03  \n     -0.5650226       -0.5952360       -0.7728170       -0.5066812  \nDESTIN_SZQTSZ04  DESTIN_SZQTSZ05  DESTIN_SZQTSZ06  DESTIN_SZQTSZ07  \n     -0.6398414       -0.4354527       -0.6597391       -0.9392696  \nDESTIN_SZQTSZ08  DESTIN_SZQTSZ09  DESTIN_SZQTSZ10  DESTIN_SZQTSZ11  \n      0.4617774       -0.3174497        0.1993449        0.2551535  \nDESTIN_SZQTSZ12  DESTIN_SZQTSZ13  DESTIN_SZQTSZ14  DESTIN_SZQTSZ15  \n     -0.1662603        0.5500978        0.5364435        1.3611043  \nDESTIN_SZRCSZ01  DESTIN_SZRCSZ06  DESTIN_SZRVSZ01  DESTIN_SZRVSZ02  \n     -0.1034049       -1.0633902       -1.5486221       -2.4092611  \nDESTIN_SZRVSZ03  DESTIN_SZRVSZ04  DESTIN_SZRVSZ05  DESTIN_SZSBSZ01  \n     -1.5172079       -1.1663615       -2.2404292       -1.3783780  \nDESTIN_SZSBSZ02  DESTIN_SZSBSZ03  DESTIN_SZSBSZ04  DESTIN_SZSBSZ05  \n     -1.4445213        0.5149906        0.2389086       -1.2737442  \nDESTIN_SZSBSZ06  DESTIN_SZSBSZ07  DESTIN_SZSBSZ08  DESTIN_SZSBSZ09  \n     -1.8683520       -0.5993154        0.8156302        0.0900611  \nDESTIN_SZSESZ02  DESTIN_SZSESZ03  DESTIN_SZSESZ04  DESTIN_SZSESZ05  \n     -0.6397704        0.1714103       -1.0596175       -0.8071891  \nDESTIN_SZSESZ06  DESTIN_SZSESZ07  DESTIN_SZSGSZ01  DESTIN_SZSGSZ02  \n     -0.5580934       -3.1448863       -0.1795225       -0.2986570  \nDESTIN_SZSGSZ03  DESTIN_SZSGSZ04  DESTIN_SZSGSZ05  DESTIN_SZSGSZ06  \n     -0.4074671       -0.1505164       -1.9908372        0.6715268  \nDESTIN_SZSGSZ07  DESTIN_SZSISZ01  DESTIN_SZSKSZ01  DESTIN_SZSKSZ02  \n     -0.4494757       -0.5517983       -0.4749154        0.9400302  \nDESTIN_SZSKSZ03  DESTIN_SZSKSZ04  DESTIN_SZSKSZ05  DESTIN_SZSLSZ01  \n     -0.2800377       -1.2570212       -0.2600474       -0.7775604  \nDESTIN_SZSLSZ04  DESTIN_SZSRSZ01  DESTIN_SZTHSZ01  DESTIN_SZTHSZ03  \n     -0.8586515       -1.1370887       -4.3259988       -2.6632914  \nDESTIN_SZTHSZ04  DESTIN_SZTHSZ06  DESTIN_SZTMSZ01  DESTIN_SZTMSZ02  \n     -3.1000906       -2.5952642       -0.2092828        1.8238139  \nDESTIN_SZTMSZ03  DESTIN_SZTMSZ04  DESTIN_SZTMSZ05  DESTIN_SZTNSZ01  \n      0.8518259        1.0222812        0.6323777       -0.3336078  \nDESTIN_SZTNSZ02  DESTIN_SZTNSZ03  DESTIN_SZTNSZ04  DESTIN_SZTPSZ01  \n     -1.0820469       -1.4186505       -0.3058199       -0.4872299  \nDESTIN_SZTPSZ02  DESTIN_SZTPSZ03  DESTIN_SZTPSZ04  DESTIN_SZTPSZ05  \n      0.7158441       -0.4314229       -1.5898245       -1.0445550  \nDESTIN_SZTPSZ06  DESTIN_SZTPSZ07  DESTIN_SZTPSZ08  DESTIN_SZTPSZ09  \n     -0.4319582       -2.1602303       -1.1920493       -0.2022481  \nDESTIN_SZTPSZ10  DESTIN_SZTPSZ11  DESTIN_SZTPSZ12  DESTIN_SZTSSZ01  \n     -1.2464793       -0.0808445       -0.6784376       -1.5845062  \nDESTIN_SZTSSZ02  DESTIN_SZTSSZ03  DESTIN_SZTSSZ04  DESTIN_SZTSSZ05  \n     -0.1886010        0.6525526        0.5285464        1.4670106  \nDESTIN_SZTSSZ06  DESTIN_SZWCSZ01  DESTIN_SZWCSZ02  DESTIN_SZWCSZ03  \n      2.5043588        1.9787931       -2.2593108       -3.1897655  \nDESTIN_SZWDSZ01  DESTIN_SZWDSZ02  DESTIN_SZWDSZ03  DESTIN_SZWDSZ04  \n      1.0476108       -1.3176990        0.3432057       -0.7895927  \nDESTIN_SZWDSZ05  DESTIN_SZWDSZ06  DESTIN_SZWDSZ07  DESTIN_SZWDSZ08  \n     -0.8751665       -0.2106221       -1.6050834       -0.5124717  \nDESTIN_SZWDSZ09  DESTIN_SZYSSZ01  DESTIN_SZYSSZ02  DESTIN_SZYSSZ03  \n      0.3813542        0.0853753       -0.3227172       -0.4151283  \nDESTIN_SZYSSZ04  DESTIN_SZYSSZ05  DESTIN_SZYSSZ06  DESTIN_SZYSSZ07  \n     -0.4637327       -1.5888242       -1.4606209       -0.7839065  \nDESTIN_SZYSSZ08  DESTIN_SZYSSZ09        log(DIST)  \n      0.6265412        0.1520067       -1.8468315  \n\nDegrees of Freedom: 14470 Total (i.e. Null);  13912 Residual\nNull Deviance:      47090000 \nResidual Deviance: 10420000     AIC: 10510000\n\n\nAnother useful model,\n\n#unconstrained = uncSIM,\nmodel_list <- list (\n                    originConstrained = orcSIM_Poisson,\n                    doublyConstrained = dbsSIM_Poisson)\n\n\ncompare_performance(model_list,\n                    metrics = 'RMSE')\n\n# Comparison of Model Performance Indices\n\nName              | Model |     RMSE\n------------------------------------\noriginConstrained |   glm | 2613.236\ndoublyConstrained |   glm | 1906.694"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/data/geospatial/MPSZ-2019.html",
    "href": "In-class_Ex/In-class_Ex04/data/geospatial/MPSZ-2019.html",
    "title": "",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/data/geospatial/Business.html",
    "href": "In-class_Ex/In-class_Ex04/data/geospatial/Business.html",
    "title": "",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html",
    "href": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html",
    "title": "In-class Exercise 2",
    "section": "",
    "text": "The code chunk below load the following packages:\n\ntmap : for thematic mapping\nsf : for geospatial data handling\nsfdep : for spatial dependence for Simple Features\ntidyverse: for non-spatial data handling\nknitr : for dynamic report generation\nplotly : for creating interactive graphs\n\n\npacman::p_load(tmap, sf, sfdep, tidyverse, knitr,plotly)\n\n\n\n\nWe will be using two data sets for this exercise. Data were retrieved on 25th Nov 2023. They are :\n\nHunan , a geospatial data set in ESRI shapefile format, and\nHunan_2012.csv, an attribute data set in csv format\n\nIn this exercise, we are interested to examine the spatial pattern of GDPPC (a.k.a GPD per Capital) of Hunan Provice, People Republic of China.\n\n\nThe code chunk below uses st_read() of sf package to import the 1st data set into R. The imported shapefile will be simple features object of sf.\n\nhunan <- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `/Users/smu/Rworkshop/jiawenoh/ISSS624/In-class_Ex/In-class_Ex02/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n\n\nNext, we will import the 2nd dataset (csv) into R. We will use read_csv() of readr package. The output is in R dataframe class.\n\nhunan2012 <- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\n\n\n\nAfter importing, we will performed a left_join() with the aid of dplyr package.\n\nhunan_GDPPC <- left_join(hunan,hunan2012) %>%\n    select(1:4,7,15)\n\n\n\n\nWe will be using the qtm() of tmap package to prepare a basemap and a choropleth map to see the distribution of GDPPC 2012 as a form of quick visualization.\n\n\nShow the code\nbasemap <- tm_shape(hunan_GDPPC) +\n  tm_polygons() +\n  tm_text(\"NAME_3\", size=0.5)\n \ngdppc <- qtm(hunan_GDPPC, \"GDPPC\")\ntmap_arrange(basemap, gdppc, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\nQueen method is used to derive the contiguity weights:\n\nwm_q <- hunan_GDPPC %>%\n  mutate (nb = st_contiguity(geometry),\n          wt = st_weights(nb, \n                          style = \"W\"),\n          .before = 1)\n\n\n\n\nIn the code chunk below, we will compute local Moran’s I test.\n\nlisa <- wm_q %>%\n  mutate(local_moran = local_moran(\n    GDPPC, nb, wt, nsim = 99),\n    .before =1) %>%\n  unnest(local_moran) #to unnest individual columns"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#importing-the-data",
    "href": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#importing-the-data",
    "title": "In-class Exercise 2",
    "section": "1. Importing the data",
    "text": "1. Importing the data\nWe will be using the Hunan_GDPPC data for this exercise.\n\nGDPPC <- read_csv(\"data/aspatial/Hunan_GDPPC.csv\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#create-a-time-series-cube",
    "href": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#create-a-time-series-cube",
    "title": "In-class Exercise 2",
    "section": "2. Create a time series cube",
    "text": "2. Create a time series cube\nTo get the concept of spatio-temporal cube, we will be using the spacetime() of sfdep to create a spacetime cube.\n\nGDPPC_st <- spacetime(GDPPC, hunan, \n                       .loc_col = \"County\",\n                       .time_col = \"Year\")\n\nTo confirm if it is spacetime cube, we can check through the following code by using is_spacetime_cube() of sfdep package:\n\nis_spacetime_cube(GDPPC_st)\n\n[1] TRUE"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#compute-gi",
    "href": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#compute-gi",
    "title": "In-class Exercise 2",
    "section": "3. Compute Gi*",
    "text": "3. Compute Gi*\n\nGDPPC_nb <- GDPPC_st %>%\n  activate(\"geometry\") %>% #must-do this first to activate \n  mutate(nb = include_self(st_contiguity(geometry)),\n         wt = st_inverse_distance(nb,geometry,\n                                  scale = 1,\n                                  alpha = 1),\n         .before = 1) %>%\n  set_nbs(\"nb\") %>%\n  set_wts(\"wt\")\n\nWe can use the new columns to manually calculate the local Gi*. We can do so by grouping by year and using local_gstar_perm() of spdep. Thereafter, we will use unnest() to unnest gi_star column of the newly created gi_starts data frame.\n\ngi_stars <- GDPPC_nb %>%\n  group_by(Year) %>%\n  mutate(gi_star = local_gstar_perm(\n    GDPPC, nb, wt)) %>%\n  tidyr::unnest(gi_star)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#mann-kendall-test",
    "href": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#mann-kendall-test",
    "title": "In-class Exercise 2",
    "section": "4. Mann-Kendall Test",
    "text": "4. Mann-Kendall Test\nWith these Gi* measures, we can evaluate each location for a trend using the Mann-Kendall test. The code chunk below uses Changsha county.\n\ncbg <- gi_stars %>%\n  ungroup() %>%\n  filter(County == \"Changsha\") |>\n  select(County, Year, gi_star)\n\nNext, we will plot the result by using ggplot2 functions.\n\np <- ggplot(data = cbg,\n            aes(x = Year,\n                y = gi_star)) +\n  geom_line() + \n  theme_light()\n \nggplotly(p)\n\n\n\n\n\nNote: we could need to install kendall package. (Install packages via tools > cran as I am not able to run on pacman due to version issues)\n\ncbg %>%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %>% \n  tidyr::unnest_wider(mk)\n\n# A tibble: 1 × 5\n    tau      sl     S     D  varS\n  <dbl>   <dbl> <dbl> <dbl> <dbl>\n1 0.485 0.00742    66  136.  589."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#perform-emerging-hotspot-analysis",
    "href": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#perform-emerging-hotspot-analysis",
    "title": "In-class Exercise 2",
    "section": "5. Perform Emerging Hotspot Analysis",
    "text": "5. Perform Emerging Hotspot Analysis\nLastly, we will perform EHSA analysis by using emerging_hotspot_analysis() of sfdep package. It takes a spacetime object c (i.e GDPPC_st), and the quoted name of the variable of interest (i.e. GDPPC) for .var argument. The k argument is used to specify the number of time lags which is set to 1 by default. Lastly, nsim map numbers of simulation is performed.\n\nehsa <- emerging_hotspot_analysis(\n  x = GDPPC_st,\n  .var = \"GDPPC\",\n  k = 1,\n  nsim =99\n  )\n\n\nggplot(data = ehsa,\n       aes(x = classification)) +\n  geom_bar()\n\n\n\n\nWe could observe that the sporadic coldspot has the higher number of county."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#visualizing-ehsa",
    "href": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#visualizing-ehsa",
    "title": "In-class Exercise 2",
    "section": "Visualizing EHSA",
    "text": "Visualizing EHSA\nWe will visualize the geographic distribution EHSA classes. Before we do so, we will need to join both hunna and ehsa together.\n\nhunan_ehsa <- hunan %>%\n  left_join(ehsa,\n            by = join_by(County == location))\n\nNext, tmap functions will be used to plot a categorical choropleth map by using the code chunk below.\n\nehsa_sig <- hunan_ehsa %>%\n  filter(p_value <0.05)\ntmap_mode(\"plot\")\ntm_shape(hunan_ehsa) +\n  tm_polygons() +\n  tm_borders(alpha =0.5) +\ntm_shape(ehsa_sig) +\n  tm_fill(\"classification\") +\n  tm_borders(alpha = 0.4)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "title": "In-class Exercise 1",
    "section": "",
    "text": "The code chunk below load the following packages:\n\ntmap : for thematic mapping\nsf : for geospatial data handling\ntidyverse: for non-spatial data handling\n\n\npacman::p_load(tmap, sf, tidyverse)\n\n\n\n\nFirstly, we will import the Passenger Volume by Origin Destination Bus Stops data set downloaded from LTA DataMall by using read_csv() of readr package.\n\nodbus <- read_csv(\"data/origin_destination_bus_202308.csv\")\n\nA quick check of odbus tibble data frame shows that the value in ORIGIN_PT_CODE.\n\nodbus$ORIGIN_PT_CODE <- as.factor(odbus$ORIGIN_PT_CODE)\n\nodbus$DESTINATION_PT_CODE <- as.factor(odbus$DESTINATION_PT_CODE)\n\n\n\nFor the purpose of this exercise, we will extract commuting flows on weekday between 7 to 9 o’clock.\n\norigtrip_7_9 <- odbus %>%\n  filter(DAY_TYPE == \"WEEKDAY\") %>%\n  filter(TIME_PER_HOUR >= 7 &\n           TIME_PER_HOUR <= 9 ) %>%\n  group_by(ORIGIN_PT_CODE) %>%\n  summarise(TRIPS = sum(TOTAL_TRIPS)) %>%\n  ungroup()\n\nTwo geospatial data will be used in this exercise, they are:\n\nbusstop <- st_read(dsn = 'data', layer = 'BusStop') %>%\n  st_transform(crs= 3414)\n\n\nmpsz <- st_read(dsn = 'data', layer = 'MPSZ-2019') %>%\n  st_transform(crs= 3414)\n\nReading layer `MPSZ-2019' from data source \n  `/Users/smu/Rworkshop/jiawenoh/ISSS624/In-class_Ex/In-class_Ex01/data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\nmpsz\n\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n                 SUBZONE_N SUBZONE_C       PLN_AREA_N PLN_AREA_C       REGION_N\n1              MARINA EAST    MESZ01      MARINA EAST         ME CENTRAL REGION\n2         INSTITUTION HILL    RVSZ05     RIVER VALLEY         RV CENTRAL REGION\n3           ROBERTSON QUAY    SRSZ01  SINGAPORE RIVER         SR CENTRAL REGION\n4  JURONG ISLAND AND BUKOM    WISZ01  WESTERN ISLANDS         WI    WEST REGION\n5             FORT CANNING    MUSZ02           MUSEUM         MU CENTRAL REGION\n6         MARINA EAST (MP)    MPSZ05    MARINE PARADE         MP CENTRAL REGION\n7                   SUDONG    WISZ03  WESTERN ISLANDS         WI    WEST REGION\n8                  SEMAKAU    WISZ02  WESTERN ISLANDS         WI    WEST REGION\n9           SOUTHERN GROUP    SISZ02 SOUTHERN ISLANDS         SI CENTRAL REGION\n10                 SENTOSA    SISZ01 SOUTHERN ISLANDS         SI CENTRAL REGION\n   REGION_C                       geometry\n1        CR MULTIPOLYGON (((33222.98 29...\n2        CR MULTIPOLYGON (((28481.45 30...\n3        CR MULTIPOLYGON (((28087.34 30...\n4        WR MULTIPOLYGON (((14557.7 304...\n5        CR MULTIPOLYGON (((29542.53 31...\n6        CR MULTIPOLYGON (((35279.55 30...\n7        WR MULTIPOLYGON (((15772.59 21...\n8        WR MULTIPOLYGON (((19843.41 21...\n9        CR MULTIPOLYGON (((30870.53 22...\n10       CR MULTIPOLYGON (((26879.04 26..."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/data/MPSZ-2019.html",
    "href": "In-class_Ex/In-class_Ex01/data/MPSZ-2019.html",
    "title": "",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "title": "In-class Exercise 5",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if the packages below are installed into the R environment. If they are, then they will be launched into R.\n\npacman::p_load(tmap,sf,spdep,sp,Matrix,reshape2,knitr,tidyverse)\n\nNoting that spFlow has a updated version from its github, we will load using devtools() instead of installing the spflow package.\n\n#|eval: false\ndevtools::install_github(\"LukeCe/spFlow\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#building-the-greographical-area.",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#building-the-greographical-area.",
    "title": "In-class Exercise 5",
    "section": "2.1 Building the greographical area.",
    "text": "2.1 Building the greographical area.\nWe will be using the URA Master Planning 2019 Subzone GIS data. The code chunk below will impot MPSZ-2019 shapefile into R environment as a sf tibble data.frame called mpsz.\n\nmpsz <- st_read(dsn = 'data/geospatial', layer = 'MPSZ-2019') %>%\n  st_transform(crs= 3414)\n\nSecondly, we will import the bus_stop shapefile into R environmetn as a sf tibble data.frame called busstop.\n\nbusstop <- st_read(dsn = 'data/geospatial', layer = 'BusStop') %>%\n  st_transform(crs= 3414)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#preparing-the-spatial-weights",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#preparing-the-spatial-weights",
    "title": "In-class Exercise 5",
    "section": "2.2 Preparing the Spatial Weights",
    "text": "2.2 Preparing the Spatial Weights\nIn this study, our analysis will focused on planning subzone with bus stops.\n\nmpsz$`BUSSTOP_COUNT` <- lengths(st_intersects(mpsz,busstop))\n\n\nmpsz_busstop <- mpsz %>%\n  filter(BUSSTOP_COUNT >0) \n\nmpsz_busstop\n\n\ncentroids <- suppressWarnings(\n  {st_point_on_surface(st_geometry(mpsz_busstop))}\n)\n\nmpsz_nb <- list(\n  \"by_contiguity\" = poly2nb(mpsz_busstop),\n  \"by_distance\" = dnearneigh(centroids, d1=0, d2= 5000),\n  \"by_knn\" = knn2nb(knearneigh(centroids,3))\n)\n\nTo view the summary of mpsz_nb :\n\nmpsz_nb\n\n\nplot(st_geometry(mpsz))\n\nplot(mpsz_nb$by_contiguity,\n     centroids,\n     add = T,\n     col = rgb(0,0,0, alpha =0.5))\ntitle(\"Contiguity\")\n\nplot(mpsz_nb$by_distance,\n     centroids,\n     add = T,\n     col = rgb(0,0,0, alpha =0.5))\ntitle(\"Distance\")\n\nplot(mpsz_nb$by_knn,\n     centroids,\n     add = T,\n     col = rgb(0,0,0, alpha =0.5))\ntitle(\"KNN\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#preparing-the-flow-data",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#preparing-the-flow-data",
    "title": "In-class Exercise 5",
    "section": "2.3 Preparing the Flow data",
    "text": "2.3 Preparing the Flow data\n\nodbus <- read_rds(\"data/rds/odbus6_9.rds\")\n\n\n#|eval: false\nbusstop_mpsz <- st_intersections(busstop, mpsz) %>%\n  select(BUS_STOP_N, SUBZONE_C) %>%\n  st_drop_geometry()\n\nNext, we will append the planning subzone code from busstop_mpsz data.frame onto odbus6_9 data frame.\n\n#|eval: false\nod_data <- left_join(odbus6_9, busstop_mpsz,\n                     by = c(\"ORIGIN_PT_CODE\", \"BUS_STOP_N\"))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#using-spflow_network_class-objects",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#using-spflow_network_class-objects",
    "title": "In-class Exercise 5",
    "section": "4.1 Using spflow_network_class objects",
    "text": "4.1 Using spflow_network_class objects\nspflow_network_class() is an S$ class that contains all information on a spatial network which is composed by a set of nodes that are linked by some neighborhood relation. We will be using the contiguity based neighborhood structure.\n\n#|eval: false\nmpsz_net <- sp_network_nodes(\n  id_net= \"sg\",\n  node_neighborhood = nb2mat(mpsz_nb$by_contiguity),\n  node_data = mpsz_var,\n  node_key_column = \"SZ_CODE\")\n\nmpsz_net"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#spatial-network-class",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#spatial-network-class",
    "title": "In-class Exercise 5",
    "section": "4.2 Spatial Network Class",
    "text": "4.2 Spatial Network Class\nEach OD pair is composed of two nodes, each belonging to one network. All origin nodes must belong to the same origin network should be contained in one spflow_network_class object. This applies to destinations too.\nIn spflow package,\n\nmpsz_net_pairs <- spflow_network_pair(\n  id_orig_net =\"sg\",\n  id_dest_net = \"sg\",\n  pair_data = mpsz_flow,\n  orig_key_column = \"ORIGIN_SZ\",\n  dest_key_column = \"DESTIN_SZ\")\n  \nmpsz_net_pairs"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#joining-data",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#joining-data",
    "title": "In-class Exercise 5",
    "section": "4.3 Joining Data",
    "text": "4.3 Joining Data\nThe sp_multi_network-class combines information on the nodes and the node-pairs and also ensures that both data sources are consistent. E.g., if some of the origin in the sp_network_pair-class are not identified with the nodes in the sp_network_nodes-class an error will be raised.\n\n#|eval: false\nmpsz_multi_net <- spflow_network_multi(mpsz_net, mpsz_net_pairs)\n\nmpsz_multi_net"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#view-uncsim",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#view-uncsim",
    "title": "Take Home Exercise 2",
    "section": "View uncSIM",
    "text": "View uncSIM\n\nuncSIM\n\n\nCall:  glm(formula = TRIPS ~ log(ORIGIN_BUSINESS) + log(DESTIN_BUSINESS) + \n    log(ORIGIN_FINSER) + log(DESTIN_FINSER) + log(ORIGIN_HDB) + \n    log(DESTIN_HDB) + log(ORIGIN_RETAIL) + log(DESTIN_RETAIL) + \n    log(ORIGIN_SCHOOLS) + log(DESTIN_SCHOOLS) + log(dist), family = poisson(link = \"log\"), \n    data = flow_data2, na.action = na.exclude)\n\nCoefficients:\n         (Intercept)  log(ORIGIN_BUSINESS)  log(DESTIN_BUSINESS)  \n            16.04170              -0.13531               0.04363  \n  log(ORIGIN_FINSER)    log(DESTIN_FINSER)       log(ORIGIN_HDB)  \n             0.16080               0.31340               0.15163  \n     log(DESTIN_HDB)    log(ORIGIN_RETAIL)    log(DESTIN_RETAIL)  \n             0.01262              -0.03330               0.01250  \n log(ORIGIN_SCHOOLS)   log(DESTIN_SCHOOLS)             log(dist)  \n             0.27070               0.41777              -1.46077  \n\nDegrees of Freedom: 65075 Total (i.e. Null);  65064 Residual\nNull Deviance:      98390000 \nResidual Deviance: 50260000     AIC: 50610000"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#destination-constrained-sim",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#destination-constrained-sim",
    "title": "Take Home Exercise 2",
    "section": "Destination constrained SIM",
    "text": "Destination constrained SIM\n\n\nShow the code\ndecSIM <- glm(formula = TRIPS ~ \n                DESTIN_ID + \n                log(ORIGIN_BUSINESS) + \n                log(ORIGIN_FINSER) + \n                log(ORIGIN_HDB) + \n                log(ORIGIN_RETAIL) + \n                log(ORIGIN_SCHOOLS) + \n                log(dist),\n              family = poisson(link = \"log\"),\n              data = flow_data2,\n              na.action = na.exclude)\n#save RDS\nwrite_rds(decSIM, \"data/rds/decSIM.rds\")\n\n\n\n\n\n\n\n\nLoad decSIM RDS\n\n\n\n\n\n\ndecSIM <- read_rds(\"data/rds/decSIM.rds\")\n\n\n\n\n\n\n\n\n\n\nSummary(decSIM)\n\n\n\n\n\n\nsummary(decSIM)\n\n\nCall:\nglm(formula = TRIPS ~ DESTIN_ID + log(ORIGIN_BUSINESS) + log(ORIGIN_FINSER) + \n    log(ORIGIN_HDB) + log(ORIGIN_RETAIL) + log(ORIGIN_SCHOOLS) + \n    log(dist), family = poisson(link = \"log\"), data = flow_data2, \n    na.action = na.exclude)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-206.87   -12.26    -5.65     0.61   609.91  \n\nCoefficients:\n                       Estimate Std. Error   z value Pr(>|z|)    \n(Intercept)           1.672e+01  5.049e-02   331.216  < 2e-16 ***\nDESTIN_ID29           9.818e-01  5.526e-02    17.767  < 2e-16 ***\nDESTIN_ID40           1.995e-01  5.782e-02     3.451 0.000559 ***\nDESTIN_ID41           5.198e-01  5.398e-02     9.629  < 2e-16 ***\nDESTIN_ID48           1.398e-01  6.106e-02     2.289 0.022059 *  \nDESTIN_ID49           3.961e-01  5.224e-02     7.581 3.43e-14 ***\nDESTIN_ID50          -6.075e-01  5.573e-02   -10.902  < 2e-16 ***\nDESTIN_ID51           4.535e-01  5.423e-02     8.362  < 2e-16 ***\nDESTIN_ID59          -1.273e+00  6.462e-02   -19.701  < 2e-16 ***\nDESTIN_ID60          -1.612e-01  5.317e-02    -3.031 0.002435 ** \nDESTIN_ID61          -3.065e+00  1.125e-01   -27.252  < 2e-16 ***\nDESTIN_ID62           9.092e-01  5.162e-02    17.613  < 2e-16 ***\nDESTIN_ID63          -1.335e+00  5.992e-02   -22.278  < 2e-16 ***\nDESTIN_ID69           3.807e-01  5.368e-02     7.093 1.32e-12 ***\nDESTIN_ID70          -2.158e-01  5.405e-02    -3.992 6.56e-05 ***\nDESTIN_ID71           9.127e-01  5.192e-02    17.578  < 2e-16 ***\nDESTIN_ID72          -7.957e-01  5.460e-02   -14.575  < 2e-16 ***\nDESTIN_ID73          -5.230e-02  5.472e-02    -0.956 0.339180    \nDESTIN_ID74          -2.014e-01  5.263e-02    -3.827 0.000130 ***\nDESTIN_ID82          -1.664e+00  6.649e-02   -25.033  < 2e-16 ***\nDESTIN_ID83          -1.091e+00  5.787e-02   -18.849  < 2e-16 ***\nDESTIN_ID85           8.726e-01  5.129e-02    17.012  < 2e-16 ***\nDESTIN_ID86           2.086e-02  5.178e-02     0.403 0.687081    \nDESTIN_ID87           2.009e-01  5.140e-02     3.908 9.29e-05 ***\nDESTIN_ID98           5.749e-01  5.181e-02    11.096  < 2e-16 ***\nDESTIN_ID99          -4.885e-01  5.593e-02    -8.734  < 2e-16 ***\nDESTIN_ID100         -1.040e-01  5.308e-02    -1.958 0.050180 .  \nDESTIN_ID109         -1.278e+00  6.536e-02   -19.553  < 2e-16 ***\nDESTIN_ID111         -5.530e-01  5.556e-02    -9.952  < 2e-16 ***\nDESTIN_ID112         -1.564e+00  5.630e-02   -27.788  < 2e-16 ***\nDESTIN_ID113         -2.838e+00  2.631e-01   -10.788  < 2e-16 ***\nDESTIN_ID125         -5.692e-01  5.274e-02   -10.792  < 2e-16 ***\nDESTIN_ID126          3.713e-01  5.165e-02     7.189 6.55e-13 ***\nDESTIN_ID135         -2.205e-01  5.817e-02    -3.790 0.000151 ***\nDESTIN_ID136         -4.565e-01  5.344e-02    -8.542  < 2e-16 ***\nDESTIN_ID137          9.377e-01  5.115e-02    18.333  < 2e-16 ***\nDESTIN_ID138         -2.134e+00  9.337e-02   -22.851  < 2e-16 ***\nDESTIN_ID148          9.143e-01  5.340e-02    17.120  < 2e-16 ***\nDESTIN_ID149          2.326e-01  5.268e-02     4.416 1.00e-05 ***\nDESTIN_ID150         -8.538e-02  5.558e-02    -1.536 0.124501    \nDESTIN_ID159          1.193e+00  5.188e-02    22.994  < 2e-16 ***\nDESTIN_ID160         -9.056e-01  5.420e-02   -16.709  < 2e-16 ***\nDESTIN_ID161         -3.102e-01  5.331e-02    -5.818 5.94e-09 ***\nDESTIN_ID171         -1.242e+00  5.979e-02   -20.777  < 2e-16 ***\nDESTIN_ID172          7.365e-01  5.190e-02    14.191  < 2e-16 ***\nDESTIN_ID173         -1.876e-01  5.292e-02    -3.545 0.000392 ***\nDESTIN_ID185          3.954e-01  5.194e-02     7.613 2.68e-14 ***\nDESTIN_ID186         -4.248e-01  5.256e-02    -8.081 6.41e-16 ***\nDESTIN_ID201          1.139e+00  5.141e-02    22.156  < 2e-16 ***\nDESTIN_ID202          8.165e-01  5.281e-02    15.459  < 2e-16 ***\nDESTIN_ID203          1.488e+00  5.105e-02    29.148  < 2e-16 ***\nDESTIN_ID217          5.190e-01  5.400e-02     9.611  < 2e-16 ***\nDESTIN_ID218         -2.536e+00  7.773e-02   -32.633  < 2e-16 ***\nDESTIN_ID219          8.921e-01  5.148e-02    17.329  < 2e-16 ***\nDESTIN_ID220          1.238e+00  5.129e-02    24.140  < 2e-16 ***\nDESTIN_ID234          1.084e+00  5.110e-02    21.213  < 2e-16 ***\nDESTIN_ID235         -1.353e-01  5.182e-02    -2.610 0.009043 ** \nDESTIN_ID251          1.830e-01  5.337e-02     3.428 0.000608 ***\nDESTIN_ID252          4.767e-01  5.186e-02     9.192  < 2e-16 ***\nDESTIN_ID253          7.568e-01  5.069e-02    14.931  < 2e-16 ***\nDESTIN_ID254          8.527e-01  5.108e-02    16.692  < 2e-16 ***\nDESTIN_ID255         -1.041e+00  5.730e-02   -18.172  < 2e-16 ***\nDESTIN_ID268          8.907e-01  5.235e-02    17.015  < 2e-16 ***\nDESTIN_ID269          6.211e-01  5.143e-02    12.076  < 2e-16 ***\nDESTIN_ID270         -5.301e-01  5.168e-02   -10.258  < 2e-16 ***\nDESTIN_ID272          1.804e+00  5.061e-02    35.650  < 2e-16 ***\nDESTIN_ID285         -2.041e-01  5.475e-02    -3.727 0.000194 ***\nDESTIN_ID286          1.057e+00  5.172e-02    20.442  < 2e-16 ***\nDESTIN_ID287         -4.865e-01  5.135e-02    -9.475  < 2e-16 ***\nDESTIN_ID288          1.036e-01  5.121e-02     2.022 0.043146 *  \nDESTIN_ID289         -5.418e-01  5.175e-02   -10.470  < 2e-16 ***\nDESTIN_ID303         -4.211e-01  5.314e-02    -7.924 2.30e-15 ***\nDESTIN_ID304          9.275e-02  5.134e-02     1.807 0.070837 .  \nDESTIN_ID306         -9.723e-01  5.211e-02   -18.659  < 2e-16 ***\nDESTIN_ID307         -1.370e+00  5.629e-02   -24.333  < 2e-16 ***\nDESTIN_ID320         -5.850e-01  5.491e-02   -10.654  < 2e-16 ***\nDESTIN_ID321         -5.849e-01  5.298e-02   -11.040  < 2e-16 ***\nDESTIN_ID322         -8.313e-01  5.155e-02   -16.127  < 2e-16 ***\nDESTIN_ID323          7.047e-01  5.068e-02    13.905  < 2e-16 ***\nDESTIN_ID324         -1.036e+00  5.394e-02   -19.207  < 2e-16 ***\nDESTIN_ID325         -2.860e+00  7.234e-02   -39.539  < 2e-16 ***\nDESTIN_ID338          5.500e-01  5.117e-02    10.748  < 2e-16 ***\nDESTIN_ID339          9.636e-02  5.121e-02     1.882 0.059881 .  \nDESTIN_ID340         -9.931e-01  5.113e-02   -19.422  < 2e-16 ***\nDESTIN_ID341         -9.509e-01  5.122e-02   -18.566  < 2e-16 ***\nDESTIN_ID342          5.381e-01  5.093e-02    10.567  < 2e-16 ***\nDESTIN_ID343         -1.100e+00  5.407e-02   -20.351  < 2e-16 ***\nDESTIN_ID353         -7.222e-01  5.296e-02   -13.638  < 2e-16 ***\nDESTIN_ID354          1.140e+00  5.084e-02    22.423  < 2e-16 ***\nDESTIN_ID355         -1.948e-01  5.092e-02    -3.826 0.000130 ***\nDESTIN_ID356          7.985e-01  5.055e-02    15.796  < 2e-16 ***\nDESTIN_ID357         -1.520e+00  5.223e-02   -29.101  < 2e-16 ***\nDESTIN_ID358         -4.408e-01  5.182e-02    -8.506  < 2e-16 ***\nDESTIN_ID359         -8.613e-01  5.271e-02   -16.340  < 2e-16 ***\nDESTIN_ID360         -4.588e+00  1.788e-01   -25.667  < 2e-16 ***\nDESTIN_ID361         -1.878e+00  6.605e-02   -28.437  < 2e-16 ***\nDESTIN_ID370         -9.294e-01  5.325e-02   -17.454  < 2e-16 ***\nDESTIN_ID371         -1.503e+00  6.856e-02   -21.925  < 2e-16 ***\nDESTIN_ID372          4.325e-01  5.060e-02     8.547  < 2e-16 ***\nDESTIN_ID373         -2.339e-01  5.075e-02    -4.608 4.06e-06 ***\nDESTIN_ID375         -3.729e+00  8.884e-02   -41.969  < 2e-16 ***\nDESTIN_ID376         -1.565e+00  6.018e-02   -26.007  < 2e-16 ***\nDESTIN_ID378         -1.837e+00  7.312e-02   -25.126  < 2e-16 ***\nDESTIN_ID379          8.139e-02  5.287e-02     1.539 0.123686    \nDESTIN_ID386         -2.397e-01  5.346e-02    -4.483 7.36e-06 ***\nDESTIN_ID387          4.390e-01  5.167e-02     8.497  < 2e-16 ***\nDESTIN_ID388         -9.475e-02  5.157e-02    -1.837 0.066178 .  \nDESTIN_ID389          1.628e+00  5.048e-02    32.260  < 2e-16 ***\nDESTIN_ID390          1.970e-01  5.066e-02     3.889 0.000101 ***\nDESTIN_ID395         -4.293e+00  2.063e-01   -20.811  < 2e-16 ***\nDESTIN_ID396         -1.852e+00  7.120e-02   -26.014  < 2e-16 ***\nDESTIN_ID406         -8.477e-01  5.446e-02   -15.566  < 2e-16 ***\nDESTIN_ID407          5.737e-01  5.126e-02    11.191  < 2e-16 ***\nDESTIN_ID408         -8.068e-01  5.093e-02   -15.842  < 2e-16 ***\nDESTIN_ID409         -6.309e-01  5.078e-02   -12.425  < 2e-16 ***\nDESTIN_ID411         -5.406e+00  2.025e-01   -26.697  < 2e-16 ***\nDESTIN_ID416         -2.127e+00  7.171e-02   -29.659  < 2e-16 ***\nDESTIN_ID417         -8.234e-01  6.165e-02   -13.356  < 2e-16 ***\nDESTIN_ID424          3.682e-02  5.191e-02     0.709 0.478153    \nDESTIN_ID425          1.290e-01  5.090e-02     2.535 0.011245 *  \nDESTIN_ID426         -1.109e+00  5.094e-02   -21.774  < 2e-16 ***\nDESTIN_ID427         -8.245e-01  5.099e-02   -16.169  < 2e-16 ***\nDESTIN_ID434         -2.353e+00  1.451e-01   -16.210  < 2e-16 ***\nDESTIN_ID435         -1.164e+00  6.941e-02   -16.763  < 2e-16 ***\nDESTIN_ID441         -8.450e-01  5.332e-02   -15.847  < 2e-16 ***\nDESTIN_ID442         -1.292e+00  5.372e-02   -24.044  < 2e-16 ***\nDESTIN_ID443          2.608e-02  5.083e-02     0.513 0.607935    \nDESTIN_ID444         -2.636e-01  5.069e-02    -5.200 1.99e-07 ***\nDESTIN_ID446          1.705e-01  5.196e-02     3.281 0.001034 ** \nDESTIN_ID462         -1.607e-01  5.120e-02    -3.138 0.001700 ** \nDESTIN_ID463         -1.028e+00  5.169e-02   -19.891  < 2e-16 ***\nDESTIN_ID464         -5.241e-01  5.074e-02   -10.330  < 2e-16 ***\nDESTIN_ID465         -2.068e-01  5.067e-02    -4.082 4.47e-05 ***\nDESTIN_ID467         -2.646e-02  5.141e-02    -0.515 0.606724    \nDESTIN_ID480          9.515e-01  5.073e-02    18.754  < 2e-16 ***\nDESTIN_ID481         -2.283e-01  5.080e-02    -4.494 6.98e-06 ***\nDESTIN_ID482         -6.082e-01  5.084e-02   -11.964  < 2e-16 ***\nDESTIN_ID483          1.504e+00  5.049e-02    29.796  < 2e-16 ***\nDESTIN_ID501         -1.336e+00  5.371e-02   -24.885  < 2e-16 ***\nDESTIN_ID502          1.766e-01  5.065e-02     3.488 0.000487 ***\nDESTIN_ID503         -1.680e+00  5.169e-02   -32.502  < 2e-16 ***\nDESTIN_ID504         -1.314e-01  5.064e-02    -2.594 0.009480 ** \nDESTIN_ID506         -2.370e-01  5.152e-02    -4.599 4.24e-06 ***\nDESTIN_ID521         -7.196e-01  5.414e-02   -13.292  < 2e-16 ***\nDESTIN_ID522         -1.981e+00  5.259e-02   -37.672  < 2e-16 ***\nDESTIN_ID523         -2.620e+00  5.469e-02   -47.902  < 2e-16 ***\nDESTIN_ID524         -7.838e-01  5.076e-02   -15.440  < 2e-16 ***\nDESTIN_ID543          7.680e-02  5.070e-02     1.515 0.129812    \nDESTIN_ID544         -3.732e-01  5.070e-02    -7.360 1.84e-13 ***\nDESTIN_ID546         -2.379e+00  5.671e-02   -41.958  < 2e-16 ***\nDESTIN_ID558          7.052e-01  5.077e-02    13.890  < 2e-16 ***\nDESTIN_ID559         -2.600e+00  5.986e-02   -43.436  < 2e-16 ***\nDESTIN_ID560         -2.645e+00  5.352e-02   -49.431  < 2e-16 ***\nDESTIN_ID561         -1.699e-01  5.061e-02    -3.357 0.000788 ***\nDESTIN_ID569         -1.799e+00  6.305e-02   -28.528  < 2e-16 ***\nDESTIN_ID575         -1.409e-01  5.154e-02    -2.734 0.006252 ** \nDESTIN_ID576         -1.535e+00  5.234e-02   -29.324  < 2e-16 ***\nDESTIN_ID577         -3.016e+00  5.550e-02   -54.330  < 2e-16 ***\nDESTIN_ID578         -6.329e-01  5.073e-02   -12.477  < 2e-16 ***\nDESTIN_ID579         -5.125e-01  5.081e-02   -10.087  < 2e-16 ***\nDESTIN_ID581         -5.392e-02  5.079e-02    -1.062 0.288379    \nDESTIN_ID582         -3.124e+00  6.833e-02   -45.714  < 2e-16 ***\nDESTIN_ID594         -7.283e-01  5.100e-02   -14.280  < 2e-16 ***\nDESTIN_ID595          1.015e+00  5.050e-02    20.091  < 2e-16 ***\nDESTIN_ID596         -2.140e-01  5.064e-02    -4.226 2.38e-05 ***\nDESTIN_ID597         -7.555e-01  5.092e-02   -14.836  < 2e-16 ***\nDESTIN_ID598         -4.344e+00  7.846e-02   -55.367  < 2e-16 ***\nDESTIN_ID599         -5.807e-01  5.083e-02   -11.423  < 2e-16 ***\nDESTIN_ID600         -5.910e-02  5.096e-02    -1.160 0.246191    \nDESTIN_ID604         -5.360e-01  5.409e-02    -9.909  < 2e-16 ***\nDESTIN_ID609         -2.544e+00  6.018e-02   -42.279  < 2e-16 ***\nDESTIN_ID610         -6.509e-01  5.105e-02   -12.751  < 2e-16 ***\nDESTIN_ID611         -1.267e+00  5.116e-02   -24.772  < 2e-16 ***\nDESTIN_ID612         -2.689e-01  5.066e-02    -5.308 1.11e-07 ***\nDESTIN_ID613         -7.129e-01  5.073e-02   -14.053  < 2e-16 ***\nDESTIN_ID614         -9.113e-01  5.092e-02   -17.896  < 2e-16 ***\nDESTIN_ID615         -6.222e-01  5.094e-02   -12.215  < 2e-16 ***\nDESTIN_ID616          1.300e+00  5.050e-02    25.741  < 2e-16 ***\nDESTIN_ID617         -3.082e+00  6.189e-02   -49.799  < 2e-16 ***\nDESTIN_ID620         -1.946e+00  5.845e-02   -33.298  < 2e-16 ***\nDESTIN_ID624         -3.894e-01  5.168e-02    -7.534 4.90e-14 ***\nDESTIN_ID625          7.967e-01  5.100e-02    15.620  < 2e-16 ***\nDESTIN_ID626         -1.664e-01  5.068e-02    -3.283 0.001026 ** \nDESTIN_ID627         -1.854e-01  5.068e-02    -3.658 0.000255 ***\nDESTIN_ID628         -6.975e-01  5.075e-02   -13.744  < 2e-16 ***\nDESTIN_ID629         -1.535e+00  5.120e-02   -29.974  < 2e-16 ***\nDESTIN_ID630         -2.833e+00  5.347e-02   -52.984  < 2e-16 ***\nDESTIN_ID631         -2.750e-04  5.061e-02    -0.005 0.995665    \nDESTIN_ID632         -4.280e-01  5.089e-02    -8.411  < 2e-16 ***\nDESTIN_ID633         -1.998e-01  5.134e-02    -3.891 9.98e-05 ***\nDESTIN_ID635         -7.744e-01  5.273e-02   -14.687  < 2e-16 ***\nDESTIN_ID641         -1.067e+00  5.223e-02   -20.438  < 2e-16 ***\nDESTIN_ID642         -6.417e-01  5.099e-02   -12.584  < 2e-16 ***\nDESTIN_ID643          3.897e-01  5.064e-02     7.694 1.43e-14 ***\nDESTIN_ID645          7.894e-01  5.051e-02    15.629  < 2e-16 ***\nDESTIN_ID646         -2.210e-01  5.069e-02    -4.361 1.30e-05 ***\nDESTIN_ID647         -2.918e-01  5.065e-02    -5.760 8.40e-09 ***\nDESTIN_ID649          1.042e+00  5.058e-02    20.610  < 2e-16 ***\nDESTIN_ID650         -6.203e-01  5.239e-02   -11.842  < 2e-16 ***\nDESTIN_ID651         -9.459e-01  5.309e-02   -17.816  < 2e-16 ***\nDESTIN_ID652         -8.863e-01  5.317e-02   -16.670  < 2e-16 ***\nDESTIN_ID658         -8.558e-01  5.221e-02   -16.392  < 2e-16 ***\nDESTIN_ID659         -3.663e-01  5.085e-02    -7.204 5.87e-13 ***\nDESTIN_ID660         -1.294e+00  5.131e-02   -25.211  < 2e-16 ***\nDESTIN_ID661          9.850e-01  5.068e-02    19.436  < 2e-16 ***\nDESTIN_ID662         -1.185e-01  5.062e-02    -2.341 0.019244 *  \nDESTIN_ID663          1.080e+00  5.056e-02    21.360  < 2e-16 ***\nDESTIN_ID665          3.436e-01  5.062e-02     6.788 1.14e-11 ***\nDESTIN_ID666         -1.906e+00  5.196e-02   -36.679  < 2e-16 ***\nDESTIN_ID667          4.598e-01  5.075e-02     9.058  < 2e-16 ***\nDESTIN_ID668         -2.126e+00  5.605e-02   -37.932  < 2e-16 ***\nDESTIN_ID669         -9.020e-01  5.264e-02   -17.135  < 2e-16 ***\nDESTIN_ID670         -2.311e+00  8.051e-02   -28.705  < 2e-16 ***\nDESTIN_ID676          7.940e-02  5.137e-02     1.546 0.122149    \nDESTIN_ID677         -1.383e+00  5.134e-02   -26.945  < 2e-16 ***\nDESTIN_ID678         -7.219e-01  5.098e-02   -14.161  < 2e-16 ***\nDESTIN_ID679          4.344e-01  5.061e-02     8.582  < 2e-16 ***\nDESTIN_ID680         -8.617e-01  5.087e-02   -16.938  < 2e-16 ***\nDESTIN_ID682         -7.305e-01  5.076e-02   -14.391  < 2e-16 ***\nDESTIN_ID683         -5.302e-01  5.079e-02   -10.438  < 2e-16 ***\nDESTIN_ID684         -1.695e+00  5.327e-02   -31.824  < 2e-16 ***\nDESTIN_ID685          6.621e-02  5.098e-02     1.299 0.194056    \nDESTIN_ID686         -2.435e+00  5.658e-02   -43.040  < 2e-16 ***\nDESTIN_ID687         -4.242e-01  5.208e-02    -8.145 3.80e-16 ***\nDESTIN_ID696         -1.207e+00  5.194e-02   -23.247  < 2e-16 ***\nDESTIN_ID697         -5.061e-01  5.074e-02    -9.973  < 2e-16 ***\nDESTIN_ID698         -1.023e+00  5.112e-02   -20.001  < 2e-16 ***\nDESTIN_ID699         -7.154e-02  5.075e-02    -1.410 0.158657    \nDESTIN_ID700         -1.537e+00  5.143e-02   -29.890  < 2e-16 ***\nDESTIN_ID701         -8.210e-01  5.116e-02   -16.049  < 2e-16 ***\nDESTIN_ID702         -1.075e+00  5.113e-02   -21.034  < 2e-16 ***\nDESTIN_ID703          1.259e-01  5.057e-02     2.491 0.012749 *  \nDESTIN_ID707         -1.420e+00  5.494e-02   -25.847  < 2e-16 ***\nDESTIN_ID716         -1.679e+00  5.250e-02   -31.989  < 2e-16 ***\nDESTIN_ID717          1.578e-01  5.064e-02     3.116 0.001833 ** \nDESTIN_ID718          1.220e+00  5.049e-02    24.159  < 2e-16 ***\nDESTIN_ID719          1.382e-01  5.098e-02     2.710 0.006723 ** \nDESTIN_ID720         -2.386e+00  5.433e-02   -43.908  < 2e-16 ***\nDESTIN_ID722          5.925e-02  5.069e-02     1.169 0.242493    \nDESTIN_ID723          1.060e+00  5.050e-02    20.992  < 2e-16 ***\nDESTIN_ID724         -1.256e+00  5.151e-02   -24.384  < 2e-16 ***\nDESTIN_ID726         -4.211e-01  5.382e-02    -7.825 5.09e-15 ***\nDESTIN_ID727          1.536e+00  5.054e-02    30.400  < 2e-16 ***\nDESTIN_ID728         -1.272e+00  5.323e-02   -23.895  < 2e-16 ***\nDESTIN_ID735         -3.419e+00  1.018e-01   -33.598  < 2e-16 ***\nDESTIN_ID736          5.508e-02  5.068e-02     1.087 0.277110    \nDESTIN_ID737         -5.239e-01  5.067e-02   -10.341  < 2e-16 ***\nDESTIN_ID738         -1.578e+00  5.166e-02   -30.552  < 2e-16 ***\nDESTIN_ID739         -1.361e+00  5.322e-02   -25.575  < 2e-16 ***\nDESTIN_ID740         -1.852e+00  5.195e-02   -35.647  < 2e-16 ***\nDESTIN_ID741         -1.217e+00  5.133e-02   -23.707  < 2e-16 ***\nDESTIN_ID742         -7.885e-01  5.096e-02   -15.472  < 2e-16 ***\nDESTIN_ID743         -1.187e+00  5.103e-02   -23.269  < 2e-16 ***\nDESTIN_ID747         -1.055e+00  5.178e-02   -20.376  < 2e-16 ***\nDESTIN_ID748          2.641e-01  5.069e-02     5.209 1.90e-07 ***\nDESTIN_ID757         -2.755e-01  5.078e-02    -5.425 5.80e-08 ***\nDESTIN_ID758         -1.414e-01  5.069e-02    -2.789 0.005285 ** \nDESTIN_ID759         -1.085e+00  5.095e-02   -21.292  < 2e-16 ***\nDESTIN_ID761         -4.676e-01  5.081e-02    -9.203  < 2e-16 ***\nDESTIN_ID762         -2.760e+00  5.508e-02   -50.103  < 2e-16 ***\nDESTIN_ID763          1.184e-01  5.085e-02     2.329 0.019853 *  \nDESTIN_ID764         -4.286e-02  5.068e-02    -0.846 0.397705    \nDESTIN_ID765         -4.170e-01  5.096e-02    -8.182 2.79e-16 ***\nDESTIN_ID767         -7.266e-01  5.858e-02   -12.403  < 2e-16 ***\nDESTIN_ID769         -4.561e-01  5.080e-02    -8.980  < 2e-16 ***\nDESTIN_ID770          8.714e-01  5.064e-02    17.208  < 2e-16 ***\nDESTIN_ID775         -6.317e-02  5.083e-02    -1.243 0.213915    \nDESTIN_ID776         -4.570e-02  5.097e-02    -0.897 0.369966    \nDESTIN_ID777         -7.507e-01  5.084e-02   -14.764  < 2e-16 ***\nDESTIN_ID778         -1.879e+00  5.186e-02   -36.230  < 2e-16 ***\nDESTIN_ID780         -1.359e+00  5.158e-02   -26.339  < 2e-16 ***\nDESTIN_ID782         -1.575e+00  5.251e-02   -29.988  < 2e-16 ***\nDESTIN_ID783         -7.263e-01  5.115e-02   -14.200  < 2e-16 ***\nDESTIN_ID787          1.041e+00  5.053e-02    20.599  < 2e-16 ***\nDESTIN_ID788         -1.044e-01  5.072e-02    -2.058 0.039605 *  \nDESTIN_ID795         -1.220e+00  5.651e-02   -21.591  < 2e-16 ***\nDESTIN_ID796         -1.418e+00  5.176e-02   -27.392  < 2e-16 ***\nDESTIN_ID797         -1.579e+00  5.346e-02   -29.537  < 2e-16 ***\nDESTIN_ID798          1.059e+00  5.053e-02    20.963  < 2e-16 ***\nDESTIN_ID799          8.760e-01  5.054e-02    17.333  < 2e-16 ***\nDESTIN_ID801         -1.229e+00  5.266e-02   -23.335  < 2e-16 ***\nDESTIN_ID802         -7.857e-01  5.102e-02   -15.400  < 2e-16 ***\nDESTIN_ID805          2.464e-01  5.125e-02     4.808 1.52e-06 ***\nDESTIN_ID807         -6.984e-01  5.085e-02   -13.735  < 2e-16 ***\nDESTIN_ID808          7.998e-03  5.081e-02     0.157 0.874916    \nDESTIN_ID813          5.047e-01  5.064e-02     9.966  < 2e-16 ***\nDESTIN_ID814          3.524e-02  5.080e-02     0.694 0.487864    \nDESTIN_ID815          2.156e-02  5.066e-02     0.426 0.670355    \nDESTIN_ID816         -2.127e+00  5.281e-02   -40.277  < 2e-16 ***\nDESTIN_ID817         -2.903e-01  5.072e-02    -5.723 1.05e-08 ***\nDESTIN_ID825         -9.345e-01  5.119e-02   -18.255  < 2e-16 ***\nDESTIN_ID826         -4.396e-01  5.084e-02    -8.647  < 2e-16 ***\nDESTIN_ID827         -3.977e+00  8.420e-02   -47.234  < 2e-16 ***\nDESTIN_ID831          1.620e-01  5.072e-02     3.195 0.001400 ** \nDESTIN_ID832          4.866e-01  5.062e-02     9.614  < 2e-16 ***\nDESTIN_ID833         -1.294e-01  5.067e-02    -2.554 0.010651 *  \nDESTIN_ID834         -1.159e+00  5.124e-02   -22.612  < 2e-16 ***\nDESTIN_ID842         -2.522e+00  6.605e-02   -38.184  < 2e-16 ***\nDESTIN_ID844          5.886e-01  5.057e-02    11.638  < 2e-16 ***\nDESTIN_ID845          1.432e-01  5.082e-02     2.818 0.004826 ** \nDESTIN_ID850         -1.834e+00  5.319e-02   -34.489  < 2e-16 ***\nDESTIN_ID851          6.116e-01  5.091e-02    12.013  < 2e-16 ***\nDESTIN_ID852         -6.213e-01  5.081e-02   -12.229  < 2e-16 ***\nDESTIN_ID853         -8.993e-01  5.095e-02   -17.651  < 2e-16 ***\nDESTIN_ID854         -2.986e+00  5.887e-02   -50.725  < 2e-16 ***\nDESTIN_ID855         -1.137e+00  5.121e-02   -22.198  < 2e-16 ***\nDESTIN_ID861          7.429e-01  5.113e-02    14.529  < 2e-16 ***\nDESTIN_ID863         -1.152e+00  5.146e-02   -22.392  < 2e-16 ***\nDESTIN_ID864          1.869e+00  5.047e-02    37.024  < 2e-16 ***\nDESTIN_ID865         -1.733e+00  5.450e-02   -31.797  < 2e-16 ***\nDESTIN_ID869         -1.697e+00  6.143e-02   -27.630  < 2e-16 ***\nDESTIN_ID870         -4.222e-01  5.174e-02    -8.159 3.39e-16 ***\nDESTIN_ID871          5.523e-03  5.059e-02     0.109 0.913058    \nDESTIN_ID872         -2.203e+00  5.271e-02   -41.796  < 2e-16 ***\nDESTIN_ID873         -3.109e+00  6.593e-02   -47.159  < 2e-16 ***\nDESTIN_ID880         -3.480e+00  1.053e-01   -33.040  < 2e-16 ***\nDESTIN_ID882          1.270e-01  5.062e-02     2.508 0.012140 *  \nDESTIN_ID883         -3.923e-01  5.103e-02    -7.688 1.50e-14 ***\nDESTIN_ID887          1.123e-01  5.073e-02     2.213 0.026916 *  \nDESTIN_ID888         -7.894e-01  5.114e-02   -15.436  < 2e-16 ***\nDESTIN_ID889         -2.369e+00  5.456e-02   -43.422  < 2e-16 ***\nDESTIN_ID890         -7.911e-01  5.080e-02   -15.571  < 2e-16 ***\nDESTIN_ID891         -2.137e+00  5.368e-02   -39.822  < 2e-16 ***\nDESTIN_ID892         -1.415e+00  5.152e-02   -27.467  < 2e-16 ***\nDESTIN_ID899         -1.531e+00  6.156e-02   -24.874  < 2e-16 ***\nDESTIN_ID900         -3.027e-02  5.079e-02    -0.596 0.551173    \nDESTIN_ID901         -2.899e-01  5.069e-02    -5.718 1.07e-08 ***\nDESTIN_ID902          1.154e+00  5.067e-02    22.781  < 2e-16 ***\nDESTIN_ID905         -4.032e-01  5.115e-02    -7.883 3.19e-15 ***\nDESTIN_ID907         -2.295e+00  5.195e-02   -44.169  < 2e-16 ***\nDESTIN_ID908         -4.148e-02  5.060e-02    -0.820 0.412380    \nDESTIN_ID910         -1.107e+00  5.117e-02   -21.639  < 2e-16 ***\nDESTIN_ID917         -1.853e+00  7.031e-02   -26.358  < 2e-16 ***\nDESTIN_ID919         -3.559e-01  5.077e-02    -7.010 2.38e-12 ***\nDESTIN_ID920          9.286e-03  5.071e-02     0.183 0.854713    \nDESTIN_ID921          3.319e-02  5.117e-02     0.649 0.516556    \nDESTIN_ID925          6.602e-01  5.054e-02    13.063  < 2e-16 ***\nDESTIN_ID926         -4.159e-01  5.067e-02    -8.208 2.26e-16 ***\nDESTIN_ID927         -6.878e-01  5.071e-02   -13.562  < 2e-16 ***\nDESTIN_ID928         -1.605e+00  5.123e-02   -31.336  < 2e-16 ***\nDESTIN_ID937         -1.638e+00  5.993e-02   -27.335  < 2e-16 ***\nDESTIN_ID938         -1.042e+00  5.175e-02   -20.132  < 2e-16 ***\nDESTIN_ID939          1.561e+00  5.049e-02    30.922  < 2e-16 ***\nDESTIN_ID940         -6.521e-03  5.080e-02    -0.128 0.897875    \nDESTIN_ID941          2.854e-01  5.103e-02     5.592 2.25e-08 ***\nDESTIN_ID944         -2.507e+00  5.327e-02   -47.071  < 2e-16 ***\nDESTIN_ID945         -9.310e-01  5.084e-02   -18.312  < 2e-16 ***\nDESTIN_ID946         -8.339e-01  5.084e-02   -16.403  < 2e-16 ***\nDESTIN_ID947         -2.533e+00  5.277e-02   -47.999  < 2e-16 ***\nDESTIN_ID948         -6.636e-01  5.087e-02   -13.045  < 2e-16 ***\nDESTIN_ID949          4.272e-01  5.062e-02     8.439  < 2e-16 ***\nDESTIN_ID956         -2.025e+00  6.411e-02   -31.583  < 2e-16 ***\nDESTIN_ID958         -5.587e-02  5.078e-02    -1.100 0.271205    \nDESTIN_ID959         -1.748e-02  5.069e-02    -0.345 0.730278    \nDESTIN_ID960          3.875e-01  5.077e-02     7.633 2.30e-14 ***\nDESTIN_ID961         -1.396e+00  5.771e-02   -24.192  < 2e-16 ***\nDESTIN_ID964         -1.028e+00  5.132e-02   -20.040  < 2e-16 ***\nDESTIN_ID965         -1.039e-01  5.060e-02    -2.053 0.040084 *  \nDESTIN_ID966         -1.257e+00  5.169e-02   -24.325  < 2e-16 ***\nDESTIN_ID967         -2.746e+00  5.406e-02   -50.800  < 2e-16 ***\nDESTIN_ID968         -8.724e-01  5.098e-02   -17.112  < 2e-16 ***\nDESTIN_ID975         -3.866e+00  1.305e-01   -29.619  < 2e-16 ***\nDESTIN_ID976         -1.032e+00  5.532e-02   -18.664  < 2e-16 ***\nDESTIN_ID978         -7.735e-02  5.128e-02    -1.508 0.131468    \nDESTIN_ID979          1.045e+00  5.070e-02    20.617  < 2e-16 ***\nDESTIN_ID980          2.259e-01  5.088e-02     4.439 9.04e-06 ***\nDESTIN_ID982         -4.829e-01  5.076e-02    -9.513  < 2e-16 ***\nDESTIN_ID983         -5.549e-01  5.093e-02   -10.895  < 2e-16 ***\nDESTIN_ID984         -6.795e-01  5.074e-02   -13.391  < 2e-16 ***\nDESTIN_ID985         -1.236e+00  5.123e-02   -24.133  < 2e-16 ***\nDESTIN_ID986         -1.401e+00  5.138e-02   -27.256  < 2e-16 ***\nDESTIN_ID987         -2.305e+00  5.529e-02   -41.686  < 2e-16 ***\nDESTIN_ID993         -2.702e+00  8.110e-02   -33.314  < 2e-16 ***\nDESTIN_ID997         -1.288e-01  5.074e-02    -2.539 0.011107 *  \nDESTIN_ID998         -1.055e+00  5.213e-02   -20.236  < 2e-16 ***\nDESTIN_ID999          8.481e-01  5.113e-02    16.587  < 2e-16 ***\nDESTIN_ID1002        -1.946e+00  5.182e-02   -37.545  < 2e-16 ***\nDESTIN_ID1003         1.825e-01  5.055e-02     3.611 0.000306 ***\nDESTIN_ID1004        -1.506e+00  5.160e-02   -29.191  < 2e-16 ***\nDESTIN_ID1006        -5.429e-01  5.078e-02   -10.691  < 2e-16 ***\nDESTIN_ID1013        -2.730e+00  8.182e-02   -33.364  < 2e-16 ***\nDESTIN_ID1016        -1.028e+00  5.219e-02   -19.707  < 2e-16 ***\nDESTIN_ID1017        -2.495e-01  5.083e-02    -4.908 9.21e-07 ***\nDESTIN_ID1018         4.526e-01  5.068e-02     8.932  < 2e-16 ***\nDESTIN_ID1021        -7.598e-01  5.079e-02   -14.960  < 2e-16 ***\nDESTIN_ID1022         5.075e-01  5.052e-02    10.046  < 2e-16 ***\nDESTIN_ID1023        -1.227e+00  5.102e-02   -24.039  < 2e-16 ***\nDESTIN_ID1024        -6.833e-01  5.093e-02   -13.416  < 2e-16 ***\nDESTIN_ID1026        -1.971e+00  5.684e-02   -34.677  < 2e-16 ***\nDESTIN_ID1027        -3.353e+00  1.003e-01   -33.427  < 2e-16 ***\nDESTIN_ID1031        -4.507e+00  1.138e-01   -39.592  < 2e-16 ***\nDESTIN_ID1032        -2.840e-01  5.107e-02    -5.561 2.68e-08 ***\nDESTIN_ID1036         1.066e+00  5.052e-02    21.100  < 2e-16 ***\nDESTIN_ID1037        -6.874e-01  5.099e-02   -13.481  < 2e-16 ***\nDESTIN_ID1040         5.571e-01  5.057e-02    11.015  < 2e-16 ***\nDESTIN_ID1041        -3.376e-01  5.070e-02    -6.658 2.77e-11 ***\nDESTIN_ID1042        -5.054e-01  5.067e-02    -9.974  < 2e-16 ***\nDESTIN_ID1043        -2.753e+00  5.493e-02   -50.107  < 2e-16 ***\nDESTIN_ID1045        -1.723e+00  5.201e-02   -33.122  < 2e-16 ***\nDESTIN_ID1046        -3.069e+00  6.048e-02   -50.744  < 2e-16 ***\nDESTIN_ID1051        -4.645e+00  1.107e-01   -41.961  < 2e-16 ***\nDESTIN_ID1052         3.068e-02  5.091e-02     0.603 0.546793    \nDESTIN_ID1053        -1.800e+00  5.267e-02   -34.169  < 2e-16 ***\nDESTIN_ID1055        -1.219e+00  5.269e-02   -23.136  < 2e-16 ***\nDESTIN_ID1056         5.587e-02  5.071e-02     1.102 0.270548    \nDESTIN_ID1059        -8.046e-01  5.297e-02   -15.191  < 2e-16 ***\nDESTIN_ID1060        -1.185e+00  5.105e-02   -23.203  < 2e-16 ***\nDESTIN_ID1061        -1.382e-01  5.059e-02    -2.732 0.006304 ** \nDESTIN_ID1062        -7.056e-01  5.076e-02   -13.902  < 2e-16 ***\nDESTIN_ID1063        -6.426e-01  5.083e-02   -12.642  < 2e-16 ***\nDESTIN_ID1064         5.814e-04  5.078e-02     0.011 0.990865    \nDESTIN_ID1066        -5.206e+00  1.488e-01   -34.977  < 2e-16 ***\nDESTIN_ID1068        -1.610e+00  5.451e-02   -29.543  < 2e-16 ***\nDESTIN_ID1070        -2.079e+00  5.503e-02   -37.780  < 2e-16 ***\nDESTIN_ID1072        -3.392e+00  6.305e-02   -53.799  < 2e-16 ***\nDESTIN_ID1073        -1.769e+00  5.189e-02   -34.095  < 2e-16 ***\nDESTIN_ID1074        -1.001e+00  5.105e-02   -19.610  < 2e-16 ***\nDESTIN_ID1075        -1.546e+00  5.132e-02   -30.127  < 2e-16 ***\nDESTIN_ID1076        -1.336e+00  5.294e-02   -25.229  < 2e-16 ***\nDESTIN_ID1081        -7.380e-01  5.078e-02   -14.532  < 2e-16 ***\nDESTIN_ID1082         2.926e-01  5.055e-02     5.788 7.14e-09 ***\nDESTIN_ID1083        -1.592e+00  5.138e-02   -30.989  < 2e-16 ***\nDESTIN_ID1084        -5.890e-01  5.115e-02   -11.515  < 2e-16 ***\nDESTIN_ID1085         7.347e-02  5.065e-02     1.451 0.146913    \nDESTIN_ID1088        -1.387e+00  5.145e-02   -26.952  < 2e-16 ***\nDESTIN_ID1089        -9.411e-01  5.122e-02   -18.374  < 2e-16 ***\nDESTIN_ID1090         2.430e-01  5.073e-02     4.790 1.67e-06 ***\nDESTIN_ID1092        -2.042e+00  5.357e-02   -38.121  < 2e-16 ***\nDESTIN_ID1094         4.734e-01  5.056e-02     9.362  < 2e-16 ***\nDESTIN_ID1095         4.278e-01  5.059e-02     8.457  < 2e-16 ***\nDESTIN_ID1096        -1.473e+00  5.166e-02   -28.523  < 2e-16 ***\nDESTIN_ID1102        -2.995e+00  5.708e-02   -52.475  < 2e-16 ***\nDESTIN_ID1103        -2.170e+00  5.351e-02   -40.564  < 2e-16 ***\nDESTIN_ID1104        -1.032e+00  5.084e-02   -20.290  < 2e-16 ***\nDESTIN_ID1105         8.767e-01  5.051e-02    17.357  < 2e-16 ***\nDESTIN_ID1106        -2.643e-01  5.113e-02    -5.169 2.36e-07 ***\nDESTIN_ID1108        -3.362e+00  6.008e-02   -55.949  < 2e-16 ***\nDESTIN_ID1109        -3.160e-01  5.076e-02    -6.227 4.77e-10 ***\nDESTIN_ID1110        -8.427e-01  5.095e-02   -16.540  < 2e-16 ***\nDESTIN_ID1111        -2.418e+00  5.306e-02   -45.579  < 2e-16 ***\nDESTIN_ID1112        -4.785e+00  1.590e-01   -30.101  < 2e-16 ***\nDESTIN_ID1113        -3.000e+00  6.748e-02   -44.465  < 2e-16 ***\nDESTIN_ID1114        -1.763e+00  5.169e-02   -34.114  < 2e-16 ***\nDESTIN_ID1115        -9.502e-01  5.093e-02   -18.656  < 2e-16 ***\nDESTIN_ID1116        -5.686e-01  5.075e-02   -11.204  < 2e-16 ***\nDESTIN_ID1117        -1.007e+00  5.140e-02   -19.582  < 2e-16 ***\nDESTIN_ID1118        -1.662e+00  5.441e-02   -30.537  < 2e-16 ***\nDESTIN_ID1125        -4.839e-01  5.069e-02    -9.546  < 2e-16 ***\nDESTIN_ID1126        -3.500e-01  5.064e-02    -6.912 4.79e-12 ***\nDESTIN_ID1127        -1.252e+00  5.146e-02   -24.319  < 2e-16 ***\nDESTIN_ID1128        -6.331e-01  5.092e-02   -12.435  < 2e-16 ***\nDESTIN_ID1129        -5.935e-01  5.089e-02   -11.663  < 2e-16 ***\nDESTIN_ID1130        -1.670e+00  5.155e-02   -32.404  < 2e-16 ***\nDESTIN_ID1133        -1.993e-01  5.067e-02    -3.933 8.40e-05 ***\nDESTIN_ID1134        -1.049e+00  5.114e-02   -20.505  < 2e-16 ***\nDESTIN_ID1135        -1.942e+00  5.380e-02   -36.092  < 2e-16 ***\nDESTIN_ID1137         1.531e+00  5.048e-02    30.334  < 2e-16 ***\nDESTIN_ID1138         1.631e+00  5.048e-02    32.316  < 2e-16 ***\nDESTIN_ID1139        -1.173e+00  5.112e-02   -22.952  < 2e-16 ***\nDESTIN_ID1140        -4.260e+00  1.018e-01   -41.858  < 2e-16 ***\nDESTIN_ID1141        -1.624e+00  6.216e-02   -26.123  < 2e-16 ***\nDESTIN_ID1146        -1.133e+00  5.136e-02   -22.052  < 2e-16 ***\nDESTIN_ID1147        -2.030e-01  5.060e-02    -4.011 6.06e-05 ***\nDESTIN_ID1148        -9.151e-01  5.095e-02   -17.960  < 2e-16 ***\nDESTIN_ID1149        -4.108e-01  5.097e-02    -8.060 7.66e-16 ***\nDESTIN_ID1150        -5.827e-01  5.106e-02   -11.411  < 2e-16 ***\nDESTIN_ID1151        -1.104e+00  5.092e-02   -21.688  < 2e-16 ***\nDESTIN_ID1152        -8.934e-01  5.079e-02   -17.591  < 2e-16 ***\nDESTIN_ID1153        -6.336e-01  5.077e-02   -12.480  < 2e-16 ***\nDESTIN_ID1154        -9.613e-01  5.104e-02   -18.835  < 2e-16 ***\nDESTIN_ID1155        -8.153e-01  5.089e-02   -16.022  < 2e-16 ***\nDESTIN_ID1156        -1.816e+00  5.190e-02   -34.991  < 2e-16 ***\nDESTIN_ID1158        -3.571e+00  6.159e-02   -57.977  < 2e-16 ***\nDESTIN_ID1159        -4.362e-01  5.066e-02    -8.610  < 2e-16 ***\nDESTIN_ID1160         4.119e-02  5.064e-02     0.813 0.416019    \nDESTIN_ID1162        -1.796e+00  5.740e-02   -31.280  < 2e-16 ***\nDESTIN_ID1167        -4.712e-01  5.077e-02    -9.281  < 2e-16 ***\nDESTIN_ID1168        -4.956e-01  5.074e-02    -9.768  < 2e-16 ***\nDESTIN_ID1169        -3.723e-01  5.065e-02    -7.349 1.99e-13 ***\nDESTIN_ID1170        -1.083e+00  5.102e-02   -21.232  < 2e-16 ***\nDESTIN_ID1171        -2.299e-01  5.066e-02    -4.538 5.67e-06 ***\nDESTIN_ID1172        -2.046e-02  5.074e-02    -0.403 0.686727    \nDESTIN_ID1173        -1.445e+00  5.106e-02   -28.303  < 2e-16 ***\nDESTIN_ID1174        -7.924e-01  5.080e-02   -15.598  < 2e-16 ***\nDESTIN_ID1175        -5.047e-01  5.079e-02    -9.938  < 2e-16 ***\nDESTIN_ID1176        -9.389e-02  5.066e-02    -1.853 0.063855 .  \nDESTIN_ID1177        -2.089e+00  6.806e-02   -30.687  < 2e-16 ***\nDESTIN_ID1179        -7.126e-01  5.087e-02   -14.009  < 2e-16 ***\nDESTIN_ID1180        -1.404e+00  5.122e-02   -27.416  < 2e-16 ***\nDESTIN_ID1181        -4.805e-01  5.107e-02    -9.410  < 2e-16 ***\nDESTIN_ID1188        -1.211e+00  5.194e-02   -23.320  < 2e-16 ***\nDESTIN_ID1189         1.490e-01  5.058e-02     2.946 0.003216 ** \nDESTIN_ID1190        -8.079e-01  5.084e-02   -15.889  < 2e-16 ***\nDESTIN_ID1192        -9.853e-02  5.063e-02    -1.946 0.051645 .  \nDESTIN_ID1193        -3.480e-02  5.058e-02    -0.688 0.491464    \nDESTIN_ID1194         1.358e-01  5.065e-02     2.681 0.007343 ** \nDESTIN_ID1195         7.289e-01  5.051e-02    14.431  < 2e-16 ***\nDESTIN_ID1196        -7.746e-01  5.073e-02   -15.268  < 2e-16 ***\nDESTIN_ID1197        -8.955e-01  5.075e-02   -17.646  < 2e-16 ***\nDESTIN_ID1198        -5.168e-02  5.066e-02    -1.020 0.307595    \nDESTIN_ID1201        -1.778e-01  5.072e-02    -3.506 0.000455 ***\nDESTIN_ID1202        -4.189e-01  5.084e-02    -8.239  < 2e-16 ***\nDESTIN_ID1210         6.562e-01  5.053e-02    12.986  < 2e-16 ***\nDESTIN_ID1211        -4.979e-02  5.060e-02    -0.984 0.325114    \nDESTIN_ID1212         2.192e-01  5.055e-02     4.336 1.45e-05 ***\nDESTIN_ID1213        -2.434e-01  5.068e-02    -4.803 1.57e-06 ***\nDESTIN_ID1214        -1.001e+00  5.100e-02   -19.627  < 2e-16 ***\nDESTIN_ID1215         8.624e-01  5.049e-02    17.080  < 2e-16 ***\nDESTIN_ID1216        -9.044e-01  5.073e-02   -17.829  < 2e-16 ***\nDESTIN_ID1217        -1.077e+00  5.079e-02   -21.207  < 2e-16 ***\nDESTIN_ID1218         1.160e+00  5.048e-02    22.984  < 2e-16 ***\nDESTIN_ID1219         7.671e-02  5.060e-02     1.516 0.129555    \nDESTIN_ID1220         6.056e-01  5.065e-02    11.956  < 2e-16 ***\nDESTIN_ID1222        -2.462e+00  5.397e-02   -45.628  < 2e-16 ***\nDESTIN_ID1223        -6.941e-01  5.106e-02   -13.595  < 2e-16 ***\nDESTIN_ID1233         7.278e-01  5.052e-02    14.407  < 2e-16 ***\nDESTIN_ID1234         1.343e-01  5.056e-02     2.656 0.007909 ** \nDESTIN_ID1235         3.596e-02  5.058e-02     0.711 0.477186    \nDESTIN_ID1236        -7.112e-01  5.085e-02   -13.985  < 2e-16 ***\nDESTIN_ID1237        -5.611e-01  5.065e-02   -11.077  < 2e-16 ***\nDESTIN_ID1238        -4.749e-01  5.062e-02    -9.382  < 2e-16 ***\nDESTIN_ID1239        -3.125e-01  5.064e-02    -6.171 6.77e-10 ***\nDESTIN_ID1240        -7.261e-01  5.074e-02   -14.310  < 2e-16 ***\nDESTIN_ID1241        -3.137e-01  5.067e-02    -6.191 5.99e-10 ***\nDESTIN_ID1245        -1.642e+00  5.188e-02   -31.660  < 2e-16 ***\nDESTIN_ID1253        -2.750e+00  5.812e-02   -47.311  < 2e-16 ***\nDESTIN_ID1254        -1.385e+00  5.130e-02   -27.000  < 2e-16 ***\nDESTIN_ID1255         4.829e-01  5.053e-02     9.558  < 2e-16 ***\nDESTIN_ID1256        -1.018e+00  5.089e-02   -20.009  < 2e-16 ***\nDESTIN_ID1257        -7.298e-01  5.076e-02   -14.378  < 2e-16 ***\nDESTIN_ID1258        -1.679e-01  5.074e-02    -3.310 0.000934 ***\nDESTIN_ID1259        -7.954e-01  5.092e-02   -15.622  < 2e-16 ***\nDESTIN_ID1260        -5.719e-01  5.067e-02   -11.287  < 2e-16 ***\nDESTIN_ID1261        -5.396e-01  5.070e-02   -10.644  < 2e-16 ***\nDESTIN_ID1263        -1.111e+00  5.162e-02   -21.534  < 2e-16 ***\nDESTIN_ID1266        -2.759e+00  5.564e-02   -49.593  < 2e-16 ***\nDESTIN_ID1272        -8.045e-01  5.129e-02   -15.686  < 2e-16 ***\nDESTIN_ID1273        -7.440e-02  5.062e-02    -1.470 0.141603    \nDESTIN_ID1274        -7.311e-01  5.071e-02   -14.417  < 2e-16 ***\nDESTIN_ID1275        -9.167e-01  5.074e-02   -18.066  < 2e-16 ***\nDESTIN_ID1276        -8.033e-01  5.071e-02   -15.841  < 2e-16 ***\nDESTIN_ID1277        -6.022e-01  5.068e-02   -11.881  < 2e-16 ***\nDESTIN_ID1278        -2.595e+00  5.225e-02   -49.659  < 2e-16 ***\nDESTIN_ID1279        -2.505e-01  5.073e-02    -4.938 7.87e-07 ***\nDESTIN_ID1280         7.708e-01  5.054e-02    15.252  < 2e-16 ***\nDESTIN_ID1281        -2.998e+00  6.407e-02   -46.794  < 2e-16 ***\nDESTIN_ID1283        -2.680e+00  5.855e-02   -45.778  < 2e-16 ***\nDESTIN_ID1289        -2.158e+00  7.638e-02   -28.254  < 2e-16 ***\nDESTIN_ID1290        -3.706e+00  1.116e-01   -33.218  < 2e-16 ***\nDESTIN_ID1291        -2.153e+00  5.372e-02   -40.076  < 2e-16 ***\nDESTIN_ID1292        -6.304e-01  5.076e-02   -12.420  < 2e-16 ***\nDESTIN_ID1293        -3.577e-02  5.057e-02    -0.707 0.479402    \nDESTIN_ID1294        -4.509e-01  5.070e-02    -8.894  < 2e-16 ***\nDESTIN_ID1295         4.591e-02  5.081e-02     0.904 0.366161    \nDESTIN_ID1296        -1.700e+00  5.122e-02   -33.196  < 2e-16 ***\nDESTIN_ID1297        -1.499e+00  5.481e-02   -27.356  < 2e-16 ***\nDESTIN_ID1298        -8.155e-01  5.086e-02   -16.036  < 2e-16 ***\nDESTIN_ID1300        -2.666e+00  6.552e-02   -40.686  < 2e-16 ***\nDESTIN_ID1301        -1.429e+00  5.309e-02   -26.917  < 2e-16 ***\nDESTIN_ID1302        -5.539e-01  5.129e-02   -10.799  < 2e-16 ***\nDESTIN_ID1307        -3.705e+00  1.079e-01   -34.345  < 2e-16 ***\nDESTIN_ID1308        -3.667e+00  1.208e-01   -30.359  < 2e-16 ***\nDESTIN_ID1310        -4.432e-01  5.068e-02    -8.744  < 2e-16 ***\nDESTIN_ID1311         1.149e-01  5.056e-02     2.272 0.023089 *  \nDESTIN_ID1312        -6.239e-01  5.073e-02   -12.299  < 2e-16 ***\nDESTIN_ID1313        -4.123e+00  7.019e-02   -58.751  < 2e-16 ***\nDESTIN_ID1314        -1.492e+00  5.102e-02   -29.243  < 2e-16 ***\nDESTIN_ID1315        -1.118e+00  5.105e-02   -21.902  < 2e-16 ***\nDESTIN_ID1316         2.091e-01  5.061e-02     4.133 3.58e-05 ***\nDESTIN_ID1317        -1.798e+00  5.222e-02   -34.427  < 2e-16 ***\nDESTIN_ID1320        -1.920e+00  5.493e-02   -34.944  < 2e-16 ***\nDESTIN_ID1325        -1.507e+00  5.383e-02   -27.992  < 2e-16 ***\nDESTIN_ID1326        -4.816e-01  5.063e-02    -9.511  < 2e-16 ***\nDESTIN_ID1327        -1.711e-01  5.060e-02    -3.381 0.000722 ***\nDESTIN_ID1328        -5.364e-01  5.075e-02   -10.569  < 2e-16 ***\nDESTIN_ID1329        -2.265e+00  5.188e-02   -43.655  < 2e-16 ***\nDESTIN_ID1330        -2.267e+00  5.192e-02   -43.656  < 2e-16 ***\nDESTIN_ID1331         4.041e-01  5.057e-02     7.992 1.32e-15 ***\nDESTIN_ID1332        -7.017e-01  5.193e-02   -13.514  < 2e-16 ***\nDESTIN_ID1333        -1.441e+00  5.145e-02   -28.000  < 2e-16 ***\nDESTIN_ID1334        -1.026e+00  5.150e-02   -19.919  < 2e-16 ***\nDESTIN_ID1338        -3.728e+00  1.788e-01   -20.854  < 2e-16 ***\nDESTIN_ID1339        -1.489e+00  5.423e-02   -27.454  < 2e-16 ***\nDESTIN_ID1341        -2.148e+00  5.252e-02   -40.897  < 2e-16 ***\nDESTIN_ID1342         3.574e-01  5.054e-02     7.072 1.53e-12 ***\nDESTIN_ID1343        -6.092e-01  5.071e-02   -12.013  < 2e-16 ***\nDESTIN_ID1344         1.016e+00  5.049e-02    20.128  < 2e-16 ***\nDESTIN_ID1345        -1.994e+00  5.138e-02   -38.804  < 2e-16 ***\nDESTIN_ID1346        -1.927e-01  5.064e-02    -3.805 0.000142 ***\nDESTIN_ID1347        -8.869e-01  5.093e-02   -17.414  < 2e-16 ***\nDESTIN_ID1348         1.028e-01  5.066e-02     2.030 0.042340 *  \nDESTIN_ID1349        -1.003e+00  5.336e-02   -18.797  < 2e-16 ***\nDESTIN_ID1355        -5.917e-01  5.148e-02   -11.494  < 2e-16 ***\nDESTIN_ID1356        -5.553e-01  5.067e-02   -10.960  < 2e-16 ***\nDESTIN_ID1357         2.470e-01  5.071e-02     4.870 1.12e-06 ***\nDESTIN_ID1358        -2.453e-01  5.084e-02    -4.825 1.40e-06 ***\nDESTIN_ID1359        -1.413e-01  5.060e-02    -2.791 0.005249 ** \nDESTIN_ID1360        -1.102e+00  5.084e-02   -21.670  < 2e-16 ***\nDESTIN_ID1361        -5.831e-02  5.058e-02    -1.153 0.249057    \nDESTIN_ID1362        -1.128e+00  5.089e-02   -22.155  < 2e-16 ***\nDESTIN_ID1363        -5.854e-01  5.083e-02   -11.518  < 2e-16 ***\nDESTIN_ID1364        -2.347e+00  5.630e-02   -41.685  < 2e-16 ***\nDESTIN_ID1370        -1.273e+00  5.110e-02   -24.907  < 2e-16 ***\nDESTIN_ID1371        -7.356e-01  5.074e-02   -14.498  < 2e-16 ***\nDESTIN_ID1372        -1.041e-01  5.060e-02    -2.058 0.039638 *  \nDESTIN_ID1373        -5.004e-01  5.095e-02    -9.821  < 2e-16 ***\nDESTIN_ID1374        -9.525e-01  5.075e-02   -18.768  < 2e-16 ***\nDESTIN_ID1376        -1.311e-01  5.059e-02    -2.591 0.009582 ** \nDESTIN_ID1377        -5.196e+00  9.693e-02   -53.608  < 2e-16 ***\nDESTIN_ID1378        -3.182e+00  7.291e-02   -43.639  < 2e-16 ***\nDESTIN_ID1383        -6.043e-01  5.139e-02   -11.758  < 2e-16 ***\nDESTIN_ID1384        -8.889e-01  5.090e-02   -17.465  < 2e-16 ***\nDESTIN_ID1385        -7.917e-01  5.077e-02   -15.593  < 2e-16 ***\nDESTIN_ID1386        -6.971e-01  5.121e-02   -13.614  < 2e-16 ***\nDESTIN_ID1387        -1.586e+00  5.121e-02   -30.973  < 2e-16 ***\nDESTIN_ID1388        -1.773e+00  5.136e-02   -34.516  < 2e-16 ***\nDESTIN_ID1389        -7.949e-01  5.080e-02   -15.648  < 2e-16 ***\nDESTIN_ID1390        -5.604e-01  5.076e-02   -11.040  < 2e-16 ***\nDESTIN_ID1391        -1.591e+00  5.144e-02   -30.936  < 2e-16 ***\nDESTIN_ID1396        -9.475e-01  5.095e-02   -18.597  < 2e-16 ***\nDESTIN_ID1397         1.497e-01  5.058e-02     2.959 0.003083 ** \nDESTIN_ID1398        -8.186e-01  5.082e-02   -16.108  < 2e-16 ***\nDESTIN_ID1399        -5.742e-01  5.073e-02   -11.319  < 2e-16 ***\nDESTIN_ID1400        -4.138e-01  5.077e-02    -8.150 3.63e-16 ***\nDESTIN_ID1401        -1.214e+00  5.090e-02   -23.851  < 2e-16 ***\nDESTIN_ID1402         6.462e-03  5.057e-02     0.128 0.898328    \nDESTIN_ID1403        -2.123e+00  5.245e-02   -40.468  < 2e-16 ***\nDESTIN_ID1408        -9.748e-01  5.122e-02   -19.030  < 2e-16 ***\nDESTIN_ID1409        -2.328e-01  5.066e-02    -4.595 4.32e-06 ***\nDESTIN_ID1410        -6.356e-01  5.069e-02   -12.538  < 2e-16 ***\nDESTIN_ID1411         2.162e-01  5.056e-02     4.277 1.90e-05 ***\nDESTIN_ID1412        -1.304e+00  5.131e-02   -25.413  < 2e-16 ***\nDESTIN_ID1413         6.908e-01  5.055e-02    13.667  < 2e-16 ***\nDESTIN_ID1414         5.801e-01  5.051e-02    11.487  < 2e-16 ***\nDESTIN_ID1415        -9.067e-01  5.087e-02   -17.823  < 2e-16 ***\nDESTIN_ID1416        -4.521e-01  5.075e-02    -8.909  < 2e-16 ***\nDESTIN_ID1417        -2.223e+00  5.651e-02   -39.345  < 2e-16 ***\nDESTIN_ID1421        -1.986e+00  5.281e-02   -37.611  < 2e-16 ***\nDESTIN_ID1422         3.327e-01  5.053e-02     6.585 4.56e-11 ***\nDESTIN_ID1423        -1.304e-01  5.060e-02    -2.578 0.009943 ** \nDESTIN_ID1424        -7.047e-01  5.094e-02   -13.834  < 2e-16 ***\nDESTIN_ID1425        -6.088e-02  5.063e-02    -1.203 0.229120    \nDESTIN_ID1426        -4.881e-01  5.063e-02    -9.640  < 2e-16 ***\nDESTIN_ID1427        -1.547e-01  5.059e-02    -3.059 0.002222 ** \nDESTIN_ID1428        -1.152e+00  5.085e-02   -22.653  < 2e-16 ***\nDESTIN_ID1429        -1.257e+00  5.112e-02   -24.586  < 2e-16 ***\nDESTIN_ID1432        -1.157e+00  5.175e-02   -22.359  < 2e-16 ***\nDESTIN_ID1433        -6.207e-01  5.081e-02   -12.216  < 2e-16 ***\nDESTIN_ID1434        -1.253e+00  5.128e-02   -24.436  < 2e-16 ***\nDESTIN_ID1435         2.876e-01  5.058e-02     5.686 1.30e-08 ***\nDESTIN_ID1436        -5.856e-02  5.179e-02    -1.131 0.258164    \nDESTIN_ID1437        -4.956e-01  5.077e-02    -9.762  < 2e-16 ***\nDESTIN_ID1438        -6.383e-01  5.070e-02   -12.591  < 2e-16 ***\nDESTIN_ID1439         4.664e-01  5.053e-02     9.230  < 2e-16 ***\nDESTIN_ID1440         1.072e+00  5.049e-02    21.234  < 2e-16 ***\nDESTIN_ID1441        -8.640e-01  5.088e-02   -16.981  < 2e-16 ***\nDESTIN_ID1444        -7.383e-01  5.087e-02   -14.514  < 2e-16 ***\nDESTIN_ID1445         1.552e-01  5.057e-02     3.069 0.002150 ** \nDESTIN_ID1446        -1.232e-02  5.065e-02    -0.243 0.807895    \nDESTIN_ID1447         2.658e-01  5.119e-02     5.192 2.08e-07 ***\nDESTIN_ID1448         1.156e+00  5.095e-02    22.690  < 2e-16 ***\nDESTIN_ID1449        -2.230e+00  5.223e-02   -42.705  < 2e-16 ***\nDESTIN_ID1450        -6.326e-01  5.069e-02   -12.481  < 2e-16 ***\nDESTIN_ID1451        -6.058e-01  5.066e-02   -11.957  < 2e-16 ***\nDESTIN_ID1452        -1.784e+00  5.137e-02   -34.736  < 2e-16 ***\nDESTIN_ID1453        -9.977e-01  5.158e-02   -19.344  < 2e-16 ***\nDESTIN_ID1455        -1.027e+00  5.119e-02   -20.068  < 2e-16 ***\nDESTIN_ID1456        -9.085e-01  5.132e-02   -17.701  < 2e-16 ***\nDESTIN_ID1457        -4.838e-01  5.073e-02    -9.536  < 2e-16 ***\nDESTIN_ID1458         2.314e-01  5.058e-02     4.576 4.75e-06 ***\nDESTIN_ID1459        -2.430e+00  6.188e-02   -39.265  < 2e-16 ***\nDESTIN_ID1461        -2.164e+00  5.466e-02   -39.582  < 2e-16 ***\nDESTIN_ID1462        -1.453e+00  5.109e-02   -28.443  < 2e-16 ***\nDESTIN_ID1463         2.515e-01  5.054e-02     4.975 6.51e-07 ***\nDESTIN_ID1464         1.122e+00  5.049e-02    22.223  < 2e-16 ***\nDESTIN_ID1465        -1.036e+00  5.274e-02   -19.638  < 2e-16 ***\nDESTIN_ID1466         6.729e-01  5.055e-02    13.313  < 2e-16 ***\nDESTIN_ID1467        -3.630e-02  5.059e-02    -0.718 0.472983    \nDESTIN_ID1468         6.509e-02  5.058e-02     1.287 0.198159    \nDESTIN_ID1471        -8.741e-01  5.160e-02   -16.941  < 2e-16 ***\nDESTIN_ID1472        -1.641e+00  5.172e-02   -31.732  < 2e-16 ***\nDESTIN_ID1473        -1.222e+00  5.096e-02   -23.981  < 2e-16 ***\nDESTIN_ID1474         4.246e-01  5.053e-02     8.403  < 2e-16 ***\nDESTIN_ID1475        -2.676e+00  5.554e-02   -48.182  < 2e-16 ***\nDESTIN_ID1478        -9.076e-01  5.089e-02   -17.837  < 2e-16 ***\nDESTIN_ID1479        -2.635e+00  5.397e-02   -48.824  < 2e-16 ***\nDESTIN_ID1480         2.188e-01  5.060e-02     4.324 1.53e-05 ***\nDESTIN_ID1483         2.112e-01  5.101e-02     4.140 3.47e-05 ***\nDESTIN_ID1485        -9.497e-01  5.089e-02   -18.661  < 2e-16 ***\nDESTIN_ID1486        -2.234e+00  5.268e-02   -42.399  < 2e-16 ***\nDESTIN_ID1487        -1.755e+00  5.499e-02   -31.910  < 2e-16 ***\nDESTIN_ID1488        -2.139e-01  5.071e-02    -4.219 2.45e-05 ***\nDESTIN_ID1489        -1.894e+00  5.241e-02   -36.141  < 2e-16 ***\nDESTIN_ID1490        -1.109e+00  5.108e-02   -21.718  < 2e-16 ***\nDESTIN_ID1491        -1.497e+00  5.265e-02   -28.426  < 2e-16 ***\nDESTIN_ID1494        -2.835e+00  7.689e-02   -36.868  < 2e-16 ***\nDESTIN_ID1495        -2.829e+00  5.926e-02   -47.736  < 2e-16 ***\nDESTIN_ID1496        -9.085e-01  5.093e-02   -17.837  < 2e-16 ***\nDESTIN_ID1500        -1.189e+00  5.126e-02   -23.203  < 2e-16 ***\nDESTIN_ID1501        -7.496e-02  5.063e-02    -1.481 0.138710    \nDESTIN_ID1502         3.212e-01  5.057e-02     6.351 2.14e-10 ***\nDESTIN_ID1506        -4.222e+00  1.305e-01   -32.346  < 2e-16 ***\nDESTIN_ID1507        -1.377e+00  5.138e-02   -26.807  < 2e-16 ***\nDESTIN_ID1508        -1.498e+00  5.259e-02   -28.479  < 2e-16 ***\nDESTIN_ID1510        -4.747e-02  5.074e-02    -0.936 0.349452    \nDESTIN_ID1511        -1.308e+00  5.177e-02   -25.266  < 2e-16 ***\nDESTIN_ID1512        -5.720e-01  5.113e-02   -11.187  < 2e-16 ***\nDESTIN_ID1513        -2.147e+00  5.223e-02   -41.098  < 2e-16 ***\nDESTIN_ID1516        -2.631e-02  5.128e-02    -0.513 0.607862    \nDESTIN_ID1518        -1.829e+00  5.265e-02   -34.740  < 2e-16 ***\nDESTIN_ID1521        -8.296e-01  5.091e-02   -16.295  < 2e-16 ***\nDESTIN_ID1522         2.088e-01  5.059e-02     4.127 3.67e-05 ***\nDESTIN_ID1523        -1.123e+00  5.104e-02   -21.997  < 2e-16 ***\nDESTIN_ID1526        -1.878e+00  5.553e-02   -33.810  < 2e-16 ***\nDESTIN_ID1530        -1.708e+00  5.310e-02   -32.168  < 2e-16 ***\nDESTIN_ID1531        -1.479e+00  5.373e-02   -27.523  < 2e-16 ***\nDESTIN_ID1532        -8.253e-01  5.084e-02   -16.235  < 2e-16 ***\nDESTIN_ID1533        -1.524e+00  5.142e-02   -29.639  < 2e-16 ***\nDESTIN_ID1534        -2.826e+00  5.874e-02   -48.113  < 2e-16 ***\nDESTIN_ID1535        -2.084e+00  5.696e-02   -36.580  < 2e-16 ***\nDESTIN_ID1536         6.847e-01  5.158e-02    13.275  < 2e-16 ***\nDESTIN_ID1541        -6.124e-01  5.088e-02   -12.035  < 2e-16 ***\nDESTIN_ID1542         1.310e+00  5.048e-02    25.944  < 2e-16 ***\nDESTIN_ID1543        -1.630e+00  5.142e-02   -31.699  < 2e-16 ***\nDESTIN_ID1544        -1.594e-01  5.067e-02    -3.145 0.001661 ** \nDESTIN_ID1545        -1.300e+00  5.138e-02   -25.300  < 2e-16 ***\nDESTIN_ID1546        -8.668e-01  5.099e-02   -17.000  < 2e-16 ***\nDESTIN_ID1553        -4.667e-01  5.075e-02    -9.197  < 2e-16 ***\nDESTIN_ID1554        -5.839e-01  5.068e-02   -11.521  < 2e-16 ***\nDESTIN_ID1555        -1.544e+00  5.108e-02   -30.222  < 2e-16 ***\nDESTIN_ID1556        -2.094e-02  5.065e-02    -0.413 0.679353    \nDESTIN_ID1557        -8.432e-01  5.089e-02   -16.568  < 2e-16 ***\nDESTIN_ID1558         5.931e-01  5.056e-02    11.730  < 2e-16 ***\nDESTIN_ID1562        -1.593e+00  5.162e-02   -30.857  < 2e-16 ***\nDESTIN_ID1563        -5.181e-01  5.069e-02   -10.222  < 2e-16 ***\nDESTIN_ID1564         9.216e-02  5.058e-02     1.822 0.068434 .  \nDESTIN_ID1565        -9.620e-03  5.060e-02    -0.190 0.849225    \nDESTIN_ID1566        -5.692e-01  5.074e-02   -11.217  < 2e-16 ***\nDESTIN_ID1568        -2.070e-01  5.072e-02    -4.081 4.48e-05 ***\nDESTIN_ID1573        -1.432e+00  5.121e-02   -27.963  < 2e-16 ***\nDESTIN_ID1574        -7.933e-01  5.093e-02   -15.575  < 2e-16 ***\nDESTIN_ID1575        -2.760e+00  5.276e-02   -52.313  < 2e-16 ***\nDESTIN_ID1576        -3.432e-01  5.061e-02    -6.781 1.19e-11 ***\nDESTIN_ID1577        -1.337e+00  5.123e-02   -26.106  < 2e-16 ***\nDESTIN_ID1578        -2.275e-01  5.072e-02    -4.486 7.27e-06 ***\nDESTIN_ID1584        -2.278e-01  5.066e-02    -4.496 6.93e-06 ***\nDESTIN_ID1585        -1.905e-01  5.088e-02    -3.744 0.000181 ***\nDESTIN_ID1586         1.953e-01  5.054e-02     3.863 0.000112 ***\nDESTIN_ID1587         2.489e-01  5.054e-02     4.924 8.47e-07 ***\nDESTIN_ID1588        -1.973e+00  5.232e-02   -37.704  < 2e-16 ***\nDESTIN_ID1589        -8.633e-01  5.108e-02   -16.902  < 2e-16 ***\nDESTIN_ID1593        -2.682e-01  5.077e-02    -5.282 1.27e-07 ***\nDESTIN_ID1594         6.027e-01  5.055e-02    11.924  < 2e-16 ***\nDESTIN_ID1595        -6.329e-02  5.060e-02    -1.251 0.211008    \nDESTIN_ID1596         1.421e+00  5.048e-02    28.147  < 2e-16 ***\nDESTIN_ID1597        -3.007e+00  5.668e-02   -53.049  < 2e-16 ***\nDESTIN_ID1598        -1.301e+00  5.108e-02   -25.472  < 2e-16 ***\nDESTIN_ID1602        -1.320e+00  8.120e-02   -16.254  < 2e-16 ***\nDESTIN_ID1603        -4.841e+00  1.260e-01   -38.416  < 2e-16 ***\nDESTIN_ID1604        -2.682e-01  5.068e-02    -5.292 1.21e-07 ***\nDESTIN_ID1605        -1.803e+00  5.127e-02   -35.167  < 2e-16 ***\nDESTIN_ID1606        -1.003e+00  5.082e-02   -19.738  < 2e-16 ***\nDESTIN_ID1607         4.716e-01  5.056e-02     9.327  < 2e-16 ***\nDESTIN_ID1608        -2.617e+00  5.842e-02   -44.793  < 2e-16 ***\nDESTIN_ID1611        -1.772e+00  5.227e-02   -33.900  < 2e-16 ***\nDESTIN_ID1612        -4.828e-01  5.082e-02    -9.499  < 2e-16 ***\nDESTIN_ID1613         3.052e-01  5.062e-02     6.028 1.66e-09 ***\nDESTIN_ID1614        -4.019e-01  5.064e-02    -7.937 2.07e-15 ***\nDESTIN_ID1615        -8.715e-01  5.104e-02   -17.075  < 2e-16 ***\nDESTIN_ID1616         1.064e+00  5.051e-02    21.067  < 2e-16 ***\nDESTIN_ID1620        -1.169e+00  5.205e-02   -22.466  < 2e-16 ***\nDESTIN_ID1621         5.092e-01  5.059e-02    10.065  < 2e-16 ***\nDESTIN_ID1622        -1.345e+00  5.116e-02   -26.282  < 2e-16 ***\nDESTIN_ID1623         6.451e-01  5.052e-02    12.770  < 2e-16 ***\nDESTIN_ID1624        -2.601e-01  5.069e-02    -5.131 2.88e-07 ***\nDESTIN_ID1629        -8.048e-01  5.198e-02   -15.485  < 2e-16 ***\nDESTIN_ID1630        -4.994e-01  5.081e-02    -9.830  < 2e-16 ***\nDESTIN_ID1631        -7.068e-01  5.096e-02   -13.870  < 2e-16 ***\nDESTIN_ID1632        -1.393e+00  5.107e-02   -27.272  < 2e-16 ***\nDESTIN_ID1633        -8.937e-01  5.104e-02   -17.510  < 2e-16 ***\nDESTIN_ID1638        -3.413e-02  5.086e-02    -0.671 0.502124    \nDESTIN_ID1639        -6.568e-01  5.117e-02   -12.836  < 2e-16 ***\nDESTIN_ID1640        -1.294e+00  5.106e-02   -25.335  < 2e-16 ***\nDESTIN_ID1641        -2.552e-01  5.073e-02    -5.031 4.89e-07 ***\nDESTIN_ID1642        -1.849e+00  6.164e-02   -29.991  < 2e-16 ***\nDESTIN_ID1646         3.144e-01  5.098e-02     6.168 6.92e-10 ***\nDESTIN_ID1647        -3.312e-01  5.108e-02    -6.484 8.91e-11 ***\nDESTIN_ID1648         2.940e-01  5.071e-02     5.798 6.73e-09 ***\nDESTIN_ID1649        -9.511e-01  5.093e-02   -18.673  < 2e-16 ***\nDESTIN_ID1654         1.808e-01  5.118e-02     3.533 0.000411 ***\nDESTIN_ID1655         1.429e+00  5.087e-02    28.083  < 2e-16 ***\nDESTIN_ID1656        -4.952e-01  5.100e-02    -9.709  < 2e-16 ***\nDESTIN_ID1657        -3.853e-03  5.073e-02    -0.076 0.939451    \nDESTIN_ID1658         1.883e-02  5.175e-02     0.364 0.715950    \nDESTIN_ID1664         1.360e-01  5.152e-02     2.640 0.008290 ** \nDESTIN_ID1665        -2.506e+00  5.571e-02   -44.981  < 2e-16 ***\nDESTIN_ID1666        -4.561e-01  5.103e-02    -8.937  < 2e-16 ***\nDESTIN_ID1667         4.526e-01  5.200e-02     8.705  < 2e-16 ***\nDESTIN_ID1674        -1.040e+00  5.434e-02   -19.146  < 2e-16 ***\nDESTIN_ID1675        -4.645e-01  5.174e-02    -8.977  < 2e-16 ***\nDESTIN_ID1676        -6.866e-01  5.129e-02   -13.386  < 2e-16 ***\nDESTIN_ID1682         6.385e-01  5.077e-02    12.576  < 2e-16 ***\nDESTIN_ID1685        -8.952e-01  5.140e-02   -17.415  < 2e-16 ***\nDESTIN_ID1686        -6.100e-01  5.131e-02   -11.889  < 2e-16 ***\nDESTIN_ID1691        -8.461e-01  5.198e-02   -16.276  < 2e-16 ***\nDESTIN_ID1693        -1.324e+00  5.442e-02   -24.330  < 2e-16 ***\nDESTIN_ID1695        -1.338e+00  5.582e-02   -23.970  < 2e-16 ***\nDESTIN_ID1698         8.603e-01  5.268e-02    16.332  < 2e-16 ***\nDESTIN_ID1704        -5.977e-02  5.099e-02    -1.172 0.241127    \nDESTIN_ID1711         2.029e+00  5.055e-02    40.145  < 2e-16 ***\nDESTIN_ID1714        -3.493e+00  7.813e-02   -44.713  < 2e-16 ***\nDESTIN_ID1722         1.341e+00  5.064e-02    26.489  < 2e-16 ***\nDESTIN_ID1723        -3.934e+00  8.257e-02   -47.639  < 2e-16 ***\nDESTIN_ID1726         3.348e-02  5.589e-02     0.599 0.549141    \nDESTIN_ID1731         4.527e-03  5.135e-02     0.088 0.929760    \nDESTIN_ID1732        -3.817e-01  5.145e-02    -7.419 1.18e-13 ***\nDESTIN_ID1741         3.475e-01  5.177e-02     6.713 1.90e-11 ***\nDESTIN_ID1742         9.403e-01  5.083e-02    18.500  < 2e-16 ***\nDESTIN_ID1750         4.671e-02  5.514e-02     0.847 0.396901    \nDESTIN_ID1751        -5.230e-01  5.471e-02    -9.560  < 2e-16 ***\nDESTIN_ID1768         1.021e+00  5.359e-02    19.051  < 2e-16 ***\nlog(ORIGIN_BUSINESS) -1.368e-01  2.337e-04  -585.299  < 2e-16 ***\nlog(ORIGIN_FINSER)    1.863e-01  3.078e-04   605.203  < 2e-16 ***\nlog(ORIGIN_HDB)       1.446e-01  8.715e-05  1659.138  < 2e-16 ***\nlog(ORIGIN_RETAIL)    2.594e-02  2.516e-04   103.091  < 2e-16 ***\nlog(ORIGIN_SCHOOLS)   2.017e-01  6.235e-04   323.504  < 2e-16 ***\nlog(dist)            -1.466e+00  2.598e-04 -5642.968  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 98394406  on 65075  degrees of freedom\nResidual deviance: 36528458  on 64249  degrees of freedom\nAIC: 36887407\n\nNumber of Fisher Scoring iterations: 8\n\noptions(max.print = 1000000)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#doubly-constrained-sim",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#doubly-constrained-sim",
    "title": "Take Home Exercise 2",
    "section": "Doubly constrained SIM",
    "text": "Doubly constrained SIM\n\n\nShow the code\ndbcSIM <- glm(formula = TRIPS ~ \n                ORIGIN_ID + \n                DESTIN_ID + \n                log(dist),\n              family = poisson(link = \"log\"),\n              data = flow_data2,\n              na.action = na.exclude)\n#save RDS\nwrite_rds(dbcSIM, \"data/rds/dbcSIM.rds\")\n\n\n\n\n\n\n\n\nLoad dbcSIM RDS\n\n\n\n\n\n\ndbcSIM <- read_rds(\"data/rds/dbcSIM.rds\")\n\n\n\n\n\n\n\n\n\n\nSummary(dbcSIM)\n\n\n\n\n\n\nsummary(dbcSIM)\n\n\nCall:\nglm(formula = TRIPS ~ ORIGIN_ID + DESTIN_ID + log(dist), family = poisson(link = \"log\"), \n    data = flow_data2, na.action = na.exclude)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-189.33    -9.60    -3.37     2.31   372.65  \n\nCoefficients:\n                Estimate Std. Error   z value Pr(>|z|)    \n(Intercept)   14.3860005  0.1374346   104.675  < 2e-16 ***\nORIGIN_ID29    2.1840229  0.1912094    11.422  < 2e-16 ***\nORIGIN_ID40    2.1396307  0.1978770    10.813  < 2e-16 ***\nORIGIN_ID41    0.1038446  0.1693600     0.613 0.539771    \nORIGIN_ID48   -0.4974225  0.1501231    -3.313 0.000922 ***\nORIGIN_ID49    1.7386704  0.1300958    13.365  < 2e-16 ***\nORIGIN_ID50    3.3865532  0.1299738    26.056  < 2e-16 ***\nORIGIN_ID51    0.7829441  0.1373791     5.699 1.20e-08 ***\nORIGIN_ID59    2.3030475  0.1435902    16.039  < 2e-16 ***\nORIGIN_ID60    0.9824621  0.1315820     7.467 8.23e-14 ***\nORIGIN_ID61    2.3890020  0.1495387    15.976  < 2e-16 ***\nORIGIN_ID62    4.2243359  0.1287717    32.805  < 2e-16 ***\nORIGIN_ID63    0.8034461  0.1451951     5.534 3.14e-08 ***\nORIGIN_ID69    4.5157686  0.1292217    34.946  < 2e-16 ***\nORIGIN_ID70    1.0925801  0.1447847     7.546 4.48e-14 ***\nORIGIN_ID71    1.6196911  0.1375824    11.773  < 2e-16 ***\nORIGIN_ID72    2.5860763  0.1293534    19.992  < 2e-16 ***\nORIGIN_ID73    0.4539884  0.1457986     3.114 0.001847 ** \nORIGIN_ID74    0.9988701  0.1369999     7.291 3.08e-13 ***\nORIGIN_ID82    2.5311173  0.1356522    18.659  < 2e-16 ***\nORIGIN_ID83    1.9956706  0.1383737    14.422  < 2e-16 ***\nORIGIN_ID85    1.9898587  0.1330660    14.954  < 2e-16 ***\nORIGIN_ID86    2.9967711  0.1299804    23.056  < 2e-16 ***\nORIGIN_ID87    5.4032648  0.1279345    42.235  < 2e-16 ***\nORIGIN_ID98    0.9638569  0.1446107     6.665 2.64e-11 ***\nORIGIN_ID99    1.1349137  0.1371346     8.276  < 2e-16 ***\nORIGIN_ID100   1.9391368  0.1324593    14.639  < 2e-16 ***\nORIGIN_ID109   0.2660774  0.1845141     1.442 0.149290    \nORIGIN_ID111   1.8474423  0.1342899    13.757  < 2e-16 ***\nORIGIN_ID112   4.4428589  0.1280551    34.695  < 2e-16 ***\nORIGIN_ID113  -0.4412492  0.1929527    -2.287 0.022206 *  \nORIGIN_ID125   5.2206763  0.1281277    40.746  < 2e-16 ***\nORIGIN_ID126   2.6122236  0.1304828    20.020  < 2e-16 ***\nORIGIN_ID135   2.8637818  0.1546824    18.514  < 2e-16 ***\nORIGIN_ID136   5.0546094  0.1281734    39.436  < 2e-16 ***\nORIGIN_ID137   2.8715329  0.1304580    22.011  < 2e-16 ***\nORIGIN_ID138   0.0109105  0.2747489     0.040 0.968324    \nORIGIN_ID148   0.6996267  0.1545979     4.525 6.03e-06 ***\nORIGIN_ID149   3.3234524  0.1317521    25.225  < 2e-16 ***\nORIGIN_ID150   0.9782869  0.1757429     5.567 2.60e-08 ***\nORIGIN_ID159   2.1989750  0.1323623    16.613  < 2e-16 ***\nORIGIN_ID160   3.8765291  0.1286527    30.132  < 2e-16 ***\nORIGIN_ID161   1.7028571  0.1395569    12.202  < 2e-16 ***\nORIGIN_ID171  -0.2324751  0.1854570    -1.254 0.210014    \nORIGIN_ID172   1.2097816  0.1371811     8.819  < 2e-16 ***\nORIGIN_ID173   1.9405272  0.1373278    14.131  < 2e-16 ***\nORIGIN_ID185   0.5499105  0.1349207     4.076 4.59e-05 ***\nORIGIN_ID186   3.8894294  0.1284712    30.275  < 2e-16 ***\nORIGIN_ID201   1.6937643  0.1315588    12.875  < 2e-16 ***\nORIGIN_ID202   2.0878925  0.1377334    15.159  < 2e-16 ***\nORIGIN_ID203   2.6201675  0.1323568    19.796  < 2e-16 ***\nORIGIN_ID217   0.4489783  0.1393990     3.221 0.001278 ** \nORIGIN_ID218  -1.7224294  0.1818837    -9.470  < 2e-16 ***\nORIGIN_ID219   1.7522158  0.1331679    13.158  < 2e-16 ***\nORIGIN_ID220   1.7704604  0.1343354    13.179  < 2e-16 ***\nORIGIN_ID234   1.5932318  0.1316032    12.106  < 2e-16 ***\nORIGIN_ID235   1.8369437  0.1317130    13.947  < 2e-16 ***\nORIGIN_ID251   1.3249829  0.1351219     9.806  < 2e-16 ***\nORIGIN_ID252   1.1862293  0.1344896     8.820  < 2e-16 ***\nORIGIN_ID253   6.5555595  0.1280104    51.211  < 2e-16 ***\nORIGIN_ID254   2.0880496  0.1388117    15.042  < 2e-16 ***\nORIGIN_ID255   0.2065215  0.2963460     0.697 0.485870    \nORIGIN_ID268   2.6154915  0.1328266    19.691  < 2e-16 ***\nORIGIN_ID269   0.1674977  0.1422418     1.178 0.238973    \nORIGIN_ID270   2.8380129  0.1287371    22.045  < 2e-16 ***\nORIGIN_ID272   2.8003312  0.1300062    21.540  < 2e-16 ***\nORIGIN_ID285   2.0356680  0.1409043    14.447  < 2e-16 ***\nORIGIN_ID286   2.3441864  0.1331497    17.606  < 2e-16 ***\nORIGIN_ID287   2.3942870  0.1302332    18.385  < 2e-16 ***\nORIGIN_ID288   2.5314943  0.1359554    18.620  < 2e-16 ***\nORIGIN_ID289   3.4278848  0.1286915    26.636  < 2e-16 ***\nORIGIN_ID303   0.6422557  0.1342221     4.785 1.71e-06 ***\nORIGIN_ID304   2.3259138  0.1318773    17.637  < 2e-16 ***\nORIGIN_ID306   3.4584193  0.1286495    26.883  < 2e-16 ***\nORIGIN_ID307   2.7411887  0.1304653    21.011  < 2e-16 ***\nORIGIN_ID320   0.7122570  0.1395630     5.103 3.33e-07 ***\nORIGIN_ID321   2.0237080  0.1330878    15.206  < 2e-16 ***\nORIGIN_ID322   3.4428281  0.1291415    26.659  < 2e-16 ***\nORIGIN_ID323   6.6821682  0.1280695    52.176  < 2e-16 ***\nORIGIN_ID324   3.2413176  0.1292918    25.070  < 2e-16 ***\nORIGIN_ID325  -0.6491449  0.2882385    -2.252 0.024315 *  \nORIGIN_ID338   2.1830114  0.1303184    16.751  < 2e-16 ***\nORIGIN_ID339   2.9881633  0.1304718    22.903  < 2e-16 ***\nORIGIN_ID340   5.0076999  0.1281471    39.078  < 2e-16 ***\nORIGIN_ID341   5.9967322  0.1280759    46.822  < 2e-16 ***\nORIGIN_ID342   2.9653905  0.1303226    22.754  < 2e-16 ***\nORIGIN_ID343   1.7245546  0.1413547    12.200  < 2e-16 ***\nORIGIN_ID353   0.6043283  0.1443475     4.187 2.83e-05 ***\nORIGIN_ID354   2.1608423  0.1304148    16.569  < 2e-16 ***\nORIGIN_ID355   3.5992276  0.1285023    28.009  < 2e-16 ***\nORIGIN_ID356   5.7489569  0.1280635    44.891  < 2e-16 ***\nORIGIN_ID357   4.8272912  0.1283661    37.606  < 2e-16 ***\nORIGIN_ID358   2.3039533  0.1339806    17.196  < 2e-16 ***\nORIGIN_ID359   3.6665104  0.1305868    28.077  < 2e-16 ***\nORIGIN_ID360   1.3955478  0.2411633     5.787 7.18e-09 ***\nORIGIN_ID361   1.3491786  0.2447336     5.513 3.53e-08 ***\nORIGIN_ID370   0.9887701  0.1328987     7.440 1.01e-13 ***\nORIGIN_ID371   0.2848797  0.1675025     1.701 0.088990 .  \nORIGIN_ID372   5.5371417  0.1280745    43.234  < 2e-16 ***\nORIGIN_ID373   6.3349643  0.1280518    49.472  < 2e-16 ***\nORIGIN_ID375   0.8575019  0.1541474     5.563 2.65e-08 ***\nORIGIN_ID376   1.2238138  0.1836237     6.665 2.65e-11 ***\nORIGIN_ID378   1.6928723  0.1613629    10.491  < 2e-16 ***\nORIGIN_ID379   4.2221508  0.1354364    31.174  < 2e-16 ***\nORIGIN_ID386   1.0313705  0.1398459     7.375 1.64e-13 ***\nORIGIN_ID387   0.4664479  0.1383762     3.371 0.000749 ***\nORIGIN_ID388   3.4666421  0.1297323    26.722  < 2e-16 ***\nORIGIN_ID389   7.0239529  0.1280311    54.861  < 2e-16 ***\nORIGIN_ID390   6.2136897  0.1280786    48.515  < 2e-16 ***\nORIGIN_ID395   1.0328897  1.0092942     1.023 0.306129    \nORIGIN_ID396   0.6534308  0.1815466     3.599 0.000319 ***\nORIGIN_ID406  -0.8184626  0.1613247    -5.073 3.91e-07 ***\nORIGIN_ID407   2.3395466  0.1298897    18.012  < 2e-16 ***\nORIGIN_ID408   3.6413219  0.1283301    28.375  < 2e-16 ***\nORIGIN_ID409   5.2626294  0.1281015    41.082  < 2e-16 ***\nORIGIN_ID411  -0.0176456  0.2409849    -0.073 0.941629    \nORIGIN_ID416   1.5132277  0.1686702     8.972  < 2e-16 ***\nORIGIN_ID417   3.4777790  0.1631016    21.323  < 2e-16 ***\nORIGIN_ID424   1.2271042  0.1336605     9.181  < 2e-16 ***\nORIGIN_ID425   2.1941225  0.1304734    16.817  < 2e-16 ***\nORIGIN_ID426   4.2710628  0.1281745    33.322  < 2e-16 ***\nORIGIN_ID427   4.2201444  0.1285015    32.841  < 2e-16 ***\nORIGIN_ID434   2.3983105  0.2255771    10.632  < 2e-16 ***\nORIGIN_ID435   4.3266492  0.1411849    30.645  < 2e-16 ***\nORIGIN_ID441   1.6038624  0.1357822    11.812  < 2e-16 ***\nORIGIN_ID442  -0.2806378  0.1803472    -1.556 0.119685    \nORIGIN_ID443   2.2996989  0.1304559    17.628  < 2e-16 ***\nORIGIN_ID444   6.1042567  0.1280603    47.667  < 2e-16 ***\nORIGIN_ID446   2.0089379  0.1439597    13.955  < 2e-16 ***\nORIGIN_ID462   3.1156407  0.1292070    24.114  < 2e-16 ***\nORIGIN_ID463   3.3762083  0.1288793    26.197  < 2e-16 ***\nORIGIN_ID464   4.7653702  0.1281593    37.183  < 2e-16 ***\nORIGIN_ID465   5.7197903  0.1280828    44.657  < 2e-16 ***\nORIGIN_ID467   6.2751390  0.1282347    48.935  < 2e-16 ***\nORIGIN_ID480   3.9615659  0.1289133    30.730  < 2e-16 ***\nORIGIN_ID481   4.7227707  0.1282035    36.838  < 2e-16 ***\nORIGIN_ID482   5.7454750  0.1280875    44.856  < 2e-16 ***\nORIGIN_ID483   6.3493082  0.1280680    49.578  < 2e-16 ***\nORIGIN_ID501   0.1196746  0.1562156     0.766 0.443625    \nORIGIN_ID502   5.9084410  0.1280854    46.129  < 2e-16 ***\nORIGIN_ID503   4.7522606  0.1281918    37.071  < 2e-16 ***\nORIGIN_ID504   6.0479810  0.1280667    47.225  < 2e-16 ***\nORIGIN_ID506   3.0288104  0.1319458    22.955  < 2e-16 ***\nORIGIN_ID521   0.1123718  0.1651571     0.680 0.496255    \nORIGIN_ID522   4.1110347  0.1284682    32.000  < 2e-16 ***\nORIGIN_ID523   4.8778181  0.1282413    38.036  < 2e-16 ***\nORIGIN_ID524   4.9082158  0.1281244    38.308  < 2e-16 ***\nORIGIN_ID543   4.7279729  0.1282899    36.854  < 2e-16 ***\nORIGIN_ID544   5.4332898  0.1281136    42.410  < 2e-16 ***\nORIGIN_ID546   2.5124206  0.1342494    18.715  < 2e-16 ***\nORIGIN_ID558   3.7064485  0.1288732    28.760  < 2e-16 ***\nORIGIN_ID559   2.9212687  0.1307316    22.346  < 2e-16 ***\nORIGIN_ID560   2.5626560  0.1294994    19.789  < 2e-16 ***\nORIGIN_ID561   5.7317146  0.1280775    44.752  < 2e-16 ***\nORIGIN_ID569   2.2051373  0.1480938    14.890  < 2e-16 ***\nORIGIN_ID575   1.7440554  0.1352918    12.891  < 2e-16 ***\nORIGIN_ID576   4.8443874  0.1282029    37.787  < 2e-16 ***\nORIGIN_ID577   1.9376780  0.1309511    14.797  < 2e-16 ***\nORIGIN_ID578   5.3557018  0.1280941    41.811  < 2e-16 ***\nORIGIN_ID579   5.5855703  0.1281337    43.592  < 2e-16 ***\nORIGIN_ID581   7.3627603  0.1280704    57.490  < 2e-16 ***\nORIGIN_ID582   3.4231520  0.1345450    25.442  < 2e-16 ***\nORIGIN_ID594   5.7773052  0.1281017    45.099  < 2e-16 ***\nORIGIN_ID595   6.1482984  0.1280591    48.011  < 2e-16 ***\nORIGIN_ID596   5.3837474  0.1281133    42.023  < 2e-16 ***\nORIGIN_ID597   6.0598614  0.1281040    47.304  < 2e-16 ***\nORIGIN_ID598   5.1711094  0.1287035    40.178  < 2e-16 ***\nORIGIN_ID599   6.2941314  0.1280894    49.139  < 2e-16 ***\nORIGIN_ID600   6.2202588  0.1281598    48.535  < 2e-16 ***\nORIGIN_ID604   0.5040867  0.2747084     1.835 0.066507 .  \nORIGIN_ID609   0.3919502  0.1507809     2.599 0.009337 ** \nORIGIN_ID610   4.1436566  0.1283338    32.288  < 2e-16 ***\nORIGIN_ID611   3.3405075  0.1286199    25.972  < 2e-16 ***\nORIGIN_ID612   6.0303521  0.1280641    47.089  < 2e-16 ***\nORIGIN_ID613   5.7315108  0.1280825    44.749  < 2e-16 ***\nORIGIN_ID614   5.7795674  0.1281079    45.115  < 2e-16 ***\nORIGIN_ID615   7.1595672  0.1280968    55.892  < 2e-16 ***\nORIGIN_ID616   6.8100603  0.1280661    53.176  < 2e-16 ***\nORIGIN_ID617   2.9304394  0.1312937    22.320  < 2e-16 ***\nORIGIN_ID620   4.3753159  0.1290075    33.915  < 2e-16 ***\nORIGIN_ID624   2.2225798  0.1333712    16.665  < 2e-16 ***\nORIGIN_ID625   2.7213255  0.1318753    20.636  < 2e-16 ***\nORIGIN_ID626   4.7597907  0.1281599    37.139  < 2e-16 ***\nORIGIN_ID627   3.5524848  0.1283752    27.673  < 2e-16 ***\nORIGIN_ID628   5.5472070  0.1280933    43.306  < 2e-16 ***\nORIGIN_ID629   5.0991090  0.1281455    39.792  < 2e-16 ***\nORIGIN_ID630   4.7271598  0.1282498    36.859  < 2e-16 ***\nORIGIN_ID631   5.9864923  0.1280910    46.736  < 2e-16 ***\nORIGIN_ID632   6.0942519  0.1281307    47.563  < 2e-16 ***\nORIGIN_ID633   6.6021958  0.1281706    51.511  < 2e-16 ***\nORIGIN_ID635   3.2011573  0.1306767    24.497  < 2e-16 ***\nORIGIN_ID641   2.3799532  0.1322063    18.002  < 2e-16 ***\nORIGIN_ID642   4.5777377  0.1282336    35.698  < 2e-16 ***\nORIGIN_ID643   3.4322446  0.1288368    26.640  < 2e-16 ***\nORIGIN_ID645   6.2137300  0.1280617    48.521  < 2e-16 ***\nORIGIN_ID646   5.5194676  0.1281319    43.076  < 2e-16 ***\nORIGIN_ID647   5.2783048  0.1281427    41.191  < 2e-16 ***\nORIGIN_ID649   6.4188026  0.1281820    50.076  < 2e-16 ***\nORIGIN_ID650   2.9986816  0.1309794    22.894  < 2e-16 ***\nORIGIN_ID651   2.7698805  0.1313701    21.085  < 2e-16 ***\nORIGIN_ID652   2.4068791  0.1335172    18.027  < 2e-16 ***\nORIGIN_ID658   1.7400884  0.1357189    12.821  < 2e-16 ***\nORIGIN_ID659   2.6813300  0.1291077    20.768  < 2e-16 ***\nORIGIN_ID660   4.5279790  0.1282013    35.319  < 2e-16 ***\nORIGIN_ID661   5.6013940  0.1281694    43.703  < 2e-16 ***\nORIGIN_ID662   5.9741410  0.1280699    46.647  < 2e-16 ***\nORIGIN_ID663   5.9106287  0.1281671    46.117  < 2e-16 ***\nORIGIN_ID665   6.1266472  0.1281139    47.822  < 2e-16 ***\nORIGIN_ID666   4.4628769  0.1283068    34.783  < 2e-16 ***\nORIGIN_ID667   5.1818123  0.1282437    40.406  < 2e-16 ***\nORIGIN_ID668   2.2706645  0.1318431    17.222  < 2e-16 ***\nORIGIN_ID669   0.7268021  0.1501312     4.841 1.29e-06 ***\nORIGIN_ID670   0.9852030  0.1803576     5.462 4.69e-08 ***\nORIGIN_ID676   4.4495408  0.1286803    34.578  < 2e-16 ***\nORIGIN_ID677   3.6825895  0.1283886    28.683  < 2e-16 ***\nORIGIN_ID678   2.7117191  0.1290478    21.013  < 2e-16 ***\nORIGIN_ID679   4.7950294  0.1282257    37.395  < 2e-16 ***\nORIGIN_ID680   5.5931571  0.1280960    43.664  < 2e-16 ***\nORIGIN_ID682   5.6657003  0.1281008    44.228  < 2e-16 ***\nORIGIN_ID683   5.8853403  0.1281034    45.942  < 2e-16 ***\nORIGIN_ID684   3.1604082  0.1294565    24.413  < 2e-16 ***\nORIGIN_ID685   3.8956772  0.1287093    30.267  < 2e-16 ***\nORIGIN_ID686   1.6695617  0.1325404    12.597  < 2e-16 ***\nORIGIN_ID687   3.3375525  0.1300578    25.662  < 2e-16 ***\nORIGIN_ID696   4.3532559  0.1285618    33.861  < 2e-16 ***\nORIGIN_ID697   4.9200083  0.1281090    38.405  < 2e-16 ***\nORIGIN_ID698   4.5722375  0.1281637    35.675  < 2e-16 ***\nORIGIN_ID699   3.2428314  0.1286613    25.204  < 2e-16 ***\nORIGIN_ID700   5.0743448  0.1281302    39.603  < 2e-16 ***\nORIGIN_ID701   5.1637943  0.1281852    40.284  < 2e-16 ***\nORIGIN_ID702   2.4755579  0.1297650    19.077  < 2e-16 ***\nORIGIN_ID703   5.8739620  0.1280827    45.861  < 2e-16 ***\nORIGIN_ID707   0.6699077  0.1457127     4.597 4.28e-06 ***\nORIGIN_ID716   3.2431984  0.1287931    25.181  < 2e-16 ***\nORIGIN_ID717   5.6642816  0.1280877    44.222  < 2e-16 ***\nORIGIN_ID718   6.7017001  0.1280475    52.338  < 2e-16 ***\nORIGIN_ID719   3.1314564  0.1295755    24.167  < 2e-16 ***\nORIGIN_ID720   3.3962400  0.1287239    26.384  < 2e-16 ***\nORIGIN_ID722   4.5292191  0.1283034    35.301  < 2e-16 ***\nORIGIN_ID723   6.2570859  0.1280701    48.857  < 2e-16 ***\nORIGIN_ID724   5.1856321  0.1283122    40.414  < 2e-16 ***\nORIGIN_ID726   2.2232834  0.1363423    16.307  < 2e-16 ***\nORIGIN_ID727   6.8836251  0.1280887    53.741  < 2e-16 ***\nORIGIN_ID728   5.0755771  0.1283845    39.534  < 2e-16 ***\nORIGIN_ID735   0.3373286  0.2034823     1.658 0.097362 .  \nORIGIN_ID736   4.1670975  0.1282320    32.497  < 2e-16 ***\nORIGIN_ID737   5.4371591  0.1280690    42.455  < 2e-16 ***\nORIGIN_ID738   4.7606059  0.1281912    37.137  < 2e-16 ***\nORIGIN_ID739   2.9218062  0.1299953    22.476  < 2e-16 ***\nORIGIN_ID740   3.4727915  0.1287253    26.978  < 2e-16 ***\nORIGIN_ID741   4.9799140  0.1281698    38.854  < 2e-16 ***\nORIGIN_ID742   3.6082546  0.1285450    28.070  < 2e-16 ***\nORIGIN_ID743   5.8640253  0.1281025    45.776  < 2e-16 ***\nORIGIN_ID747   1.7968087  0.1315237    13.661  < 2e-16 ***\nORIGIN_ID748   6.5543269  0.1280846    51.172  < 2e-16 ***\nORIGIN_ID757   3.6851925  0.1283153    28.720  < 2e-16 ***\nORIGIN_ID758   4.4449632  0.1281716    34.680  < 2e-16 ***\nORIGIN_ID759   4.7780643  0.1281305    37.291  < 2e-16 ***\nORIGIN_ID761   5.0216790  0.1281357    39.190  < 2e-16 ***\nORIGIN_ID762   3.2076987  0.1290357    24.859  < 2e-16 ***\nORIGIN_ID763   4.0955735  0.1285625    31.857  < 2e-16 ***\nORIGIN_ID764   6.3214943  0.1280754    49.358  < 2e-16 ***\nORIGIN_ID765   7.1694854  0.1280991    55.968  < 2e-16 ***\nORIGIN_ID767  -0.1711090  0.2102742    -0.814 0.415793    \nORIGIN_ID769   4.5559404  0.1282306    35.529  < 2e-16 ***\nORIGIN_ID770   7.0979714  0.1280794    55.419  < 2e-16 ***\nORIGIN_ID775   3.8386136  0.1283251    29.913  < 2e-16 ***\nORIGIN_ID776   2.3629031  0.1303658    18.125  < 2e-16 ***\nORIGIN_ID777   3.1697166  0.1285092    24.665  < 2e-16 ***\nORIGIN_ID778   4.1562375  0.1282289    32.413  < 2e-16 ***\nORIGIN_ID780   4.4222334  0.1282728    34.475  < 2e-16 ***\nORIGIN_ID782   5.4028612  0.1282411    42.130  < 2e-16 ***\nORIGIN_ID783   5.5661364  0.1282487    43.401  < 2e-16 ***\nORIGIN_ID787   6.0070277  0.1280962    46.895  < 2e-16 ***\nORIGIN_ID788   5.9220380  0.1280965    46.231  < 2e-16 ***\nORIGIN_ID795  -0.6453664  0.2230471    -2.893 0.003811 ** \nORIGIN_ID796   2.3899150  0.1299310    18.394  < 2e-16 ***\nORIGIN_ID797   3.8506346  0.1285638    29.951  < 2e-16 ***\nORIGIN_ID798   3.7479748  0.1284713    29.174  < 2e-16 ***\nORIGIN_ID799   5.4495672  0.1281038    42.540  < 2e-16 ***\nORIGIN_ID801   2.7618041  0.1318585    20.945  < 2e-16 ***\nORIGIN_ID802   7.6633849  0.1281322    59.808  < 2e-16 ***\nORIGIN_ID805   3.9136175  0.1293785    30.249  < 2e-16 ***\nORIGIN_ID807   5.2040113  0.1281314    40.615  < 2e-16 ***\nORIGIN_ID808   5.2319593  0.1281778    40.818  < 2e-16 ***\nORIGIN_ID813   2.6119946  0.1288357    20.274  < 2e-16 ***\nORIGIN_ID814   1.6731760  0.1307160    12.800  < 2e-16 ***\nORIGIN_ID815   4.8757653  0.1281488    38.048  < 2e-16 ***\nORIGIN_ID816   3.3008911  0.1285765    25.673  < 2e-16 ***\nORIGIN_ID817   4.8656458  0.1281249    37.976  < 2e-16 ***\nORIGIN_ID825   4.7675040  0.1282725    37.167  < 2e-16 ***\nORIGIN_ID826   5.3733396  0.1281216    41.939  < 2e-16 ***\nORIGIN_ID827   1.3445835  0.1374020     9.786  < 2e-16 ***\nORIGIN_ID831   5.0134150  0.1281256    39.129  < 2e-16 ***\nORIGIN_ID832   4.2778733  0.1281714    33.376  < 2e-16 ***\nORIGIN_ID833   5.2640862  0.1280927    41.096  < 2e-16 ***\nORIGIN_ID834   3.5700747  0.1285115    27.780  < 2e-16 ***\nORIGIN_ID842  -0.8064002  0.1888515    -4.270 1.95e-05 ***\nORIGIN_ID844   5.2305206  0.1281162    40.826  < 2e-16 ***\nORIGIN_ID845   4.9879816  0.1282027    38.907  < 2e-16 ***\nORIGIN_ID850   2.9577468  0.1288168    22.961  < 2e-16 ***\nORIGIN_ID851   0.9919902  0.1371066     7.235 4.65e-13 ***\nORIGIN_ID852   3.4538133  0.1282944    26.921  < 2e-16 ***\nORIGIN_ID853   4.7098731  0.1281477    36.753  < 2e-16 ***\nORIGIN_ID854   2.4188013  0.1304063    18.548  < 2e-16 ***\nORIGIN_ID855   4.4763627  0.1282149    34.913  < 2e-16 ***\nORIGIN_ID861   2.2496592  0.1427348    15.761  < 2e-16 ***\nORIGIN_ID863   4.8178695  0.1282528    37.565  < 2e-16 ***\nORIGIN_ID864   6.9678531  0.1280605    54.411  < 2e-16 ***\nORIGIN_ID865   4.1734442  0.1284528    32.490  < 2e-16 ***\nORIGIN_ID869   1.0046205  0.1360440     7.385 1.53e-13 ***\nORIGIN_ID870   1.9367953  0.1331383    14.547  < 2e-16 ***\nORIGIN_ID871   5.3029464  0.1280804    41.403  < 2e-16 ***\nORIGIN_ID872   2.9691170  0.1289328    23.028  < 2e-16 ***\nORIGIN_ID873   1.5287537  0.1377476    11.098  < 2e-16 ***\nORIGIN_ID880   0.0027962  0.1611372     0.017 0.986155    \nORIGIN_ID882   5.6248238  0.1281060    43.908  < 2e-16 ***\nORIGIN_ID883   4.9021457  0.1281905    38.241  < 2e-16 ***\nORIGIN_ID887   3.8254245  0.1283541    29.804  < 2e-16 ***\nORIGIN_ID888   2.0557532  0.1296551    15.856  < 2e-16 ***\nORIGIN_ID889   2.0760221  0.1299847    15.971  < 2e-16 ***\nORIGIN_ID890   4.4092497  0.1281540    34.406  < 2e-16 ***\nORIGIN_ID891   3.4132091  0.1287926    26.502  < 2e-16 ***\nORIGIN_ID892   3.2947697  0.1286973    25.601  < 2e-16 ***\nORIGIN_ID899   2.9221878  0.1413972    20.667  < 2e-16 ***\nORIGIN_ID900   5.1744213  0.1282650    40.342  < 2e-16 ***\nORIGIN_ID901   6.0062476  0.1280787    46.895  < 2e-16 ***\nORIGIN_ID902   4.6245162  0.1284074    36.014  < 2e-16 ***\nORIGIN_ID905   2.7568240  0.1308804    21.064  < 2e-16 ***\nORIGIN_ID907   2.9845436  0.1284864    23.228  < 2e-16 ***\nORIGIN_ID908   5.5185801  0.1280821    43.086  < 2e-16 ***\nORIGIN_ID910   4.5769572  0.1281856    35.706  < 2e-16 ***\nORIGIN_ID917   0.8466851  0.1645723     5.145 2.68e-07 ***\nORIGIN_ID919   6.1511097  0.1280893    48.022  < 2e-16 ***\nORIGIN_ID920   5.8408538  0.1280946    45.598  < 2e-16 ***\nORIGIN_ID921   2.0394926  0.1312150    15.543  < 2e-16 ***\nORIGIN_ID925   3.2228156  0.1284379    25.092  < 2e-16 ***\nORIGIN_ID926   4.6071157  0.1281187    35.960  < 2e-16 ***\nORIGIN_ID927   4.2888803  0.1281615    33.465  < 2e-16 ***\nORIGIN_ID928   3.4804204  0.1283636    27.114  < 2e-16 ***\nORIGIN_ID937   2.3052575  0.1366949    16.864  < 2e-16 ***\nORIGIN_ID938   4.7181302  0.1284106    36.743  < 2e-16 ***\nORIGIN_ID939   6.3407977  0.1280851    49.505  < 2e-16 ***\nORIGIN_ID940   4.7573938  0.1282113    37.106  < 2e-16 ***\nORIGIN_ID941   2.2914895  0.1310065    17.491  < 2e-16 ***\nORIGIN_ID944   2.5125463  0.1288465    19.500  < 2e-16 ***\nORIGIN_ID945   3.4402606  0.1282843    26.817  < 2e-16 ***\nORIGIN_ID946   4.8149494  0.1281181    37.582  < 2e-16 ***\nORIGIN_ID947   3.5576291  0.1283664    27.715  < 2e-16 ***\nORIGIN_ID948   4.9631474  0.1281440    38.731  < 2e-16 ***\nORIGIN_ID949   3.1493296  0.1288342    24.445  < 2e-16 ***\nORIGIN_ID956   2.2030632  0.1648577    13.363  < 2e-16 ***\nORIGIN_ID958   5.0939472  0.1282007    39.734  < 2e-16 ***\nORIGIN_ID959   5.6612232  0.1281041    44.192  < 2e-16 ***\nORIGIN_ID960   3.7672841  0.1286000    29.295  < 2e-16 ***\nORIGIN_ID961  -1.6577263  0.4652502    -3.563 0.000367 ***\nORIGIN_ID964   4.8726399  0.1281512    38.023  < 2e-16 ***\nORIGIN_ID965   4.7008453  0.1281118    36.693  < 2e-16 ***\nORIGIN_ID966   3.7648114  0.1286572    29.262  < 2e-16 ***\nORIGIN_ID967   3.2729532  0.1285565    25.459  < 2e-16 ***\nORIGIN_ID968   4.6099119  0.1281695    35.967  < 2e-16 ***\nORIGIN_ID975  -0.1634323  0.2283876    -0.716 0.474243    \nORIGIN_ID976   1.9267883  0.1574857    12.235  < 2e-16 ***\nORIGIN_ID978   4.7558372  0.1283574    37.052  < 2e-16 ***\nORIGIN_ID979   4.4423723  0.1287960    34.492  < 2e-16 ***\nORIGIN_ID980   3.7553516  0.1286644    29.187  < 2e-16 ***\nORIGIN_ID982   5.1287791  0.1280995    40.037  < 2e-16 ***\nORIGIN_ID983   3.8755580  0.1282074    30.229  < 2e-16 ***\nORIGIN_ID984   4.5994569  0.1281226    35.899  < 2e-16 ***\nORIGIN_ID985   2.1742162  0.1297079    16.762  < 2e-16 ***\nORIGIN_ID986   2.3165718  0.1293859    17.904  < 2e-16 ***\nORIGIN_ID987   2.6856534  0.1365986    19.661  < 2e-16 ***\nORIGIN_ID993  -0.4043069  0.2577244    -1.569 0.116705    \nORIGIN_ID997   4.8165758  0.1281849    37.575  < 2e-16 ***\nORIGIN_ID998   0.9658334  0.1409259     6.853 7.21e-12 ***\nORIGIN_ID999   2.5083910  0.1323976    18.946  < 2e-16 ***\nORIGIN_ID1002  3.8403439  0.1282416    29.946  < 2e-16 ***\nORIGIN_ID1003  5.0896030  0.1280822    39.737  < 2e-16 ***\nORIGIN_ID1004  2.5157796  0.1293597    19.448  < 2e-16 ***\nORIGIN_ID1006  4.3504253  0.1282013    33.934  < 2e-16 ***\nORIGIN_ID1013  2.4597575  0.1362515    18.053  < 2e-16 ***\nORIGIN_ID1016  2.5014961  0.1314908    19.024  < 2e-16 ***\nORIGIN_ID1017  6.0210491  0.1281116    46.998  < 2e-16 ***\nORIGIN_ID1018  3.3557092  0.1287643    26.061  < 2e-16 ***\nORIGIN_ID1021  3.4012352  0.1283213    26.506  < 2e-16 ***\nORIGIN_ID1022  4.4819299  0.1281166    34.983  < 2e-16 ***\nORIGIN_ID1023  3.2724737  0.1283912    25.488  < 2e-16 ***\nORIGIN_ID1024  3.6987473  0.1283489    28.818  < 2e-16 ***\nORIGIN_ID1026  2.1441323  0.1324273    16.191  < 2e-16 ***\nORIGIN_ID1027  0.8389692  0.1868582     4.490 7.13e-06 ***\nORIGIN_ID1031 -0.4381534  0.2182905    -2.007 0.044728 *  \nORIGIN_ID1032  5.7559437  0.1281753    44.907  < 2e-16 ***\nORIGIN_ID1036  6.1577774  0.1280941    48.072  < 2e-16 ***\nORIGIN_ID1037  4.8250823  0.1282032    37.636  < 2e-16 ***\nORIGIN_ID1040  5.4812006  0.1280936    42.791  < 2e-16 ***\nORIGIN_ID1041  5.1383909  0.1280955    40.114  < 2e-16 ***\nORIGIN_ID1042  4.7204649  0.1280989    36.850  < 2e-16 ***\nORIGIN_ID1043  1.3649682  0.1318225    10.355  < 2e-16 ***\nORIGIN_ID1045  2.8652196  0.1289763    22.215  < 2e-16 ***\nORIGIN_ID1046  1.6321610  0.1366922    11.940  < 2e-16 ***\nORIGIN_ID1051 -0.0161975  0.1782878    -0.091 0.927612    \nORIGIN_ID1052  4.4229263  0.1285101    34.417  < 2e-16 ***\nORIGIN_ID1053  2.0262853  0.1325103    15.292  < 2e-16 ***\nORIGIN_ID1055  3.6470881  0.1289279    28.288  < 2e-16 ***\nORIGIN_ID1056  5.8912762  0.1281114    45.986  < 2e-16 ***\nORIGIN_ID1060  4.4935278  0.1281389    35.068  < 2e-16 ***\nORIGIN_ID1061  5.2153431  0.1280756    40.721  < 2e-16 ***\nORIGIN_ID1062  4.0763736  0.1281753    31.803  < 2e-16 ***\nORIGIN_ID1063  3.1860964  0.1284126    24.811  < 2e-16 ***\nORIGIN_ID1064  3.9021138  0.1283478    30.403  < 2e-16 ***\nORIGIN_ID1066 -0.2574726  0.2019577    -1.275 0.202350    \nORIGIN_ID1068  2.3256934  0.1328115    17.511  < 2e-16 ***\nORIGIN_ID1070  0.9654213  0.1420772     6.795 1.08e-11 ***\nORIGIN_ID1072  0.1411655  0.1734898     0.814 0.415827    \nORIGIN_ID1073  3.8623956  0.1285232    30.052  < 2e-16 ***\nORIGIN_ID1074  4.9996300  0.1281829    39.004  < 2e-16 ***\nORIGIN_ID1075  5.1511723  0.1281531    40.195  < 2e-16 ***\nORIGIN_ID1076  2.7030537  0.1319176    20.490  < 2e-16 ***\nORIGIN_ID1081  4.6650016  0.1281141    36.413  < 2e-16 ***\nORIGIN_ID1082  5.4302678  0.1280706    42.401  < 2e-16 ***\nORIGIN_ID1083  3.2430228  0.1283666    25.264  < 2e-16 ***\nORIGIN_ID1084  3.1506713  0.1285699    24.506  < 2e-16 ***\nORIGIN_ID1085  4.5414301  0.1281565    35.437  < 2e-16 ***\nORIGIN_ID1088  4.6371318  0.1282167    36.166  < 2e-16 ***\nORIGIN_ID1089  4.3088117  0.1283576    33.569  < 2e-16 ***\nORIGIN_ID1090  4.2322403  0.1284934    32.937  < 2e-16 ***\nORIGIN_ID1092  3.4241646  0.1292533    26.492  < 2e-16 ***\nORIGIN_ID1094  5.9632903  0.1280875    46.556  < 2e-16 ***\nORIGIN_ID1095  5.0164183  0.1282167    39.125  < 2e-16 ***\nORIGIN_ID1096  5.5607903  0.1281706    43.386  < 2e-16 ***\nORIGIN_ID1102  0.6199621  0.1375975     4.506 6.62e-06 ***\nORIGIN_ID1103  4.0065052  0.1283591    31.213  < 2e-16 ***\nORIGIN_ID1104  4.0546726  0.1281621    31.637  < 2e-16 ***\nORIGIN_ID1105  4.8689309  0.1280959    38.010  < 2e-16 ***\nORIGIN_ID1106  3.8116439  0.1283827    29.690  < 2e-16 ***\nORIGIN_ID1108  1.1322972  0.1364432     8.299  < 2e-16 ***\nORIGIN_ID1109  4.3498758  0.1282657    33.913  < 2e-16 ***\nORIGIN_ID1110  3.9277728  0.1283922    30.592  < 2e-16 ***\nORIGIN_ID1111  3.6728364  0.1285196    28.578  < 2e-16 ***\nORIGIN_ID1112  2.3351347  0.1416568    16.484  < 2e-16 ***\nORIGIN_ID1113  0.5835585  0.1724230     3.384 0.000713 ***\nORIGIN_ID1114  4.3536600  0.1282915    33.936  < 2e-16 ***\nORIGIN_ID1115  4.7828212  0.1281749    37.315  < 2e-16 ***\nORIGIN_ID1116  5.4204195  0.1281198    42.307  < 2e-16 ***\nORIGIN_ID1117  6.5738448  0.1281172    51.311  < 2e-16 ***\nORIGIN_ID1118  2.4858657  0.1343924    18.497  < 2e-16 ***\nORIGIN_ID1125  4.2632580  0.1281497    33.268  < 2e-16 ***\nORIGIN_ID1126  4.3273069  0.1281268    33.774  < 2e-16 ***\nORIGIN_ID1127  1.9106261  0.1294569    14.759  < 2e-16 ***\nORIGIN_ID1128  4.0049891  0.1282029    31.239  < 2e-16 ***\nORIGIN_ID1129  3.0795472  0.1286601    23.936  < 2e-16 ***\nORIGIN_ID1130  2.6074591  0.1289423    20.222  < 2e-16 ***\nORIGIN_ID1133  5.1572528  0.1281334    40.249  < 2e-16 ***\nORIGIN_ID1134  4.7513664  0.1282109    37.059  < 2e-16 ***\nORIGIN_ID1135  3.8853348  0.1288176    30.162  < 2e-16 ***\nORIGIN_ID1137  6.7099699  0.1280701    52.393  < 2e-16 ***\nORIGIN_ID1138  6.5534990  0.1280693    51.171  < 2e-16 ***\nORIGIN_ID1139  4.8809301  0.1282311    38.064  < 2e-16 ***\nORIGIN_ID1140  2.5816392  0.1398383    18.462  < 2e-16 ***\nORIGIN_ID1141  3.6474526  0.1346099    27.096  < 2e-16 ***\nORIGIN_ID1146  2.9590697  0.1288258    22.970  < 2e-16 ***\nORIGIN_ID1147  4.4443814  0.1281156    34.690  < 2e-16 ***\nORIGIN_ID1148  3.8228895  0.1282512    29.808  < 2e-16 ***\nORIGIN_ID1149  3.3192769  0.1288609    25.759  < 2e-16 ***\nORIGIN_ID1150  3.4229858  0.1283978    26.659  < 2e-16 ***\nORIGIN_ID1151  3.4983995  0.1283018    27.267  < 2e-16 ***\nORIGIN_ID1152  3.8432250  0.1282472    29.967  < 2e-16 ***\nORIGIN_ID1153  4.6023540  0.1281568    35.912  < 2e-16 ***\nORIGIN_ID1154  4.3425588  0.1282825    33.852  < 2e-16 ***\nORIGIN_ID1155  5.5255056  0.1281132    43.130  < 2e-16 ***\nORIGIN_ID1156  4.2963870  0.1283485    33.474  < 2e-16 ***\nORIGIN_ID1158  3.4556897  0.1289686    26.795  < 2e-16 ***\nORIGIN_ID1159  4.4908624  0.1282219    35.024  < 2e-16 ***\nORIGIN_ID1160  6.0771408  0.1280969    47.442  < 2e-16 ***\nORIGIN_ID1162  5.8380447  0.1290191    45.249  < 2e-16 ***\nORIGIN_ID1167  4.1594870  0.1281581    32.456  < 2e-16 ***\nORIGIN_ID1168  3.7675536  0.1281932    29.390  < 2e-16 ***\nORIGIN_ID1169  3.6920239  0.1282050    28.798  < 2e-16 ***\nORIGIN_ID1170  3.5853798  0.1282637    27.953  < 2e-16 ***\nORIGIN_ID1171  4.2091503  0.1281872    32.836  < 2e-16 ***\nORIGIN_ID1172  4.2136833  0.1283070    32.841  < 2e-16 ***\nORIGIN_ID1173  2.7912667  0.1286667    21.694  < 2e-16 ***\nORIGIN_ID1174  4.9344408  0.1281236    38.513  < 2e-16 ***\nORIGIN_ID1175  5.2298254  0.1281157    40.821  < 2e-16 ***\nORIGIN_ID1176  4.8260378  0.1281646    37.655  < 2e-16 ***\nORIGIN_ID1177  1.6477182  0.1343527    12.264  < 2e-16 ***\nORIGIN_ID1179  6.3581233  0.1280889    49.638  < 2e-16 ***\nORIGIN_ID1180  5.4097841  0.1281435    42.217  < 2e-16 ***\nORIGIN_ID1181  4.9905040  0.1283959    38.868  < 2e-16 ***\nORIGIN_ID1188  3.2086304  0.1288021    24.911  < 2e-16 ***\nORIGIN_ID1189  4.3035099  0.1281283    33.588  < 2e-16 ***\nORIGIN_ID1190  3.1514073  0.1283667    24.550  < 2e-16 ***\nORIGIN_ID1192  4.6557982  0.1281289    36.337  < 2e-16 ***\nORIGIN_ID1193  5.1017008  0.1280833    39.831  < 2e-16 ***\nORIGIN_ID1194  5.1314384  0.1281344    40.047  < 2e-16 ***\nORIGIN_ID1195  4.9156055  0.1281295    38.364  < 2e-16 ***\nORIGIN_ID1196  5.3438376  0.1280918    41.719  < 2e-16 ***\nORIGIN_ID1197  4.3294446  0.1281707    33.779  < 2e-16 ***\nORIGIN_ID1198  3.6794462  0.1284395    28.647  < 2e-16 ***\nORIGIN_ID1201  6.7938201  0.1280836    53.042  < 2e-16 ***\nORIGIN_ID1202  6.4386330  0.1281160    50.256  < 2e-16 ***\nORIGIN_ID1210  3.4633406  0.1283051    26.993  < 2e-16 ***\nORIGIN_ID1211  3.5808826  0.1282063    27.931  < 2e-16 ***\nORIGIN_ID1212  4.6503357  0.1280957    36.304  < 2e-16 ***\nORIGIN_ID1213  3.5857985  0.1283118    27.946  < 2e-16 ***\nORIGIN_ID1214  4.5523642  0.1281608    35.521  < 2e-16 ***\nORIGIN_ID1215  5.9029537  0.1280596    46.095  < 2e-16 ***\nORIGIN_ID1216  4.1972463  0.1281611    32.750  < 2e-16 ***\nORIGIN_ID1217  5.2148775  0.1280912    40.712  < 2e-16 ***\nORIGIN_ID1218  6.5195684  0.1280549    50.912  < 2e-16 ***\nORIGIN_ID1219  6.1167102  0.1280726    47.760  < 2e-16 ***\nORIGIN_ID1220  3.6100302  0.1288623    28.015  < 2e-16 ***\nORIGIN_ID1222  5.1291948  0.1283058    39.976  < 2e-16 ***\nORIGIN_ID1223  6.9511091  0.1280925    54.266  < 2e-16 ***\nORIGIN_ID1233  3.3405742  0.1283313    26.031  < 2e-16 ***\nORIGIN_ID1234  4.0533644  0.1281398    31.632  < 2e-16 ***\nORIGIN_ID1235  4.8983290  0.1280886    38.242  < 2e-16 ***\nORIGIN_ID1236  4.0855064  0.1281969    31.869  < 2e-16 ***\nORIGIN_ID1237  4.4293164  0.1281309    34.569  < 2e-16 ***\nORIGIN_ID1238  4.8371965  0.1281033    37.760  < 2e-16 ***\nORIGIN_ID1239  4.6828029  0.1281373    36.545  < 2e-16 ***\nORIGIN_ID1240  5.1761344  0.1281017    40.406  < 2e-16 ***\nORIGIN_ID1241  4.8099726  0.1281342    37.539  < 2e-16 ***\nORIGIN_ID1245  5.4360791  0.1282426    42.389  < 2e-16 ***\nORIGIN_ID1253 -0.7150276  0.1634197    -4.375 1.21e-05 ***\nORIGIN_ID1254  2.0827448  0.1289311    16.154  < 2e-16 ***\nORIGIN_ID1255  4.4579405  0.1281115    34.797  < 2e-16 ***\nORIGIN_ID1256  5.2997074  0.1281285    41.362  < 2e-16 ***\nORIGIN_ID1257  5.3922520  0.1280827    42.100  < 2e-16 ***\nORIGIN_ID1258  5.9747561  0.1280820    46.648  < 2e-16 ***\nORIGIN_ID1259  5.1284065  0.1281052    40.033  < 2e-16 ***\nORIGIN_ID1260  3.5922466  0.1283514    27.988  < 2e-16 ***\nORIGIN_ID1261  5.5269641  0.1280797    43.153  < 2e-16 ***\nORIGIN_ID1263  4.3559806  0.1283918    33.927  < 2e-16 ***\nORIGIN_ID1266  5.6712943  0.1282616    44.217  < 2e-16 ***\nORIGIN_ID1272  2.0088236  0.1298936    15.465  < 2e-16 ***\nORIGIN_ID1273  2.8453693  0.1285388    22.136  < 2e-16 ***\nORIGIN_ID1274  4.1367113  0.1281429    32.282  < 2e-16 ***\nORIGIN_ID1275  4.2959533  0.1281489    33.523  < 2e-16 ***\nORIGIN_ID1276  5.0975143  0.1280837    39.798  < 2e-16 ***\nORIGIN_ID1277  4.8165427  0.1281255    37.592  < 2e-16 ***\nORIGIN_ID1278  3.2698880  0.1284921    25.448  < 2e-16 ***\nORIGIN_ID1279  5.8760783  0.1280946    45.873  < 2e-16 ***\nORIGIN_ID1280  4.6327583  0.1282201    36.131  < 2e-16 ***\nORIGIN_ID1281  3.2379107  0.1299225    24.922  < 2e-16 ***\nORIGIN_ID1283 -0.0362253  0.2083951    -0.174 0.861999    \nORIGIN_ID1289  1.6259244  0.1558628    10.432  < 2e-16 ***\nORIGIN_ID1290 -1.6758475  1.0130041    -1.654 0.098060 .  \nORIGIN_ID1291  1.6711880  0.1303651    12.819  < 2e-16 ***\nORIGIN_ID1292  3.3270752  0.1283573    25.920  < 2e-16 ***\nORIGIN_ID1293  4.5335409  0.1281225    35.384  < 2e-16 ***\nORIGIN_ID1294  5.0159091  0.1280970    39.157  < 2e-16 ***\nORIGIN_ID1295  5.7926511  0.1281316    45.209  < 2e-16 ***\nORIGIN_ID1296  2.7900740  0.1288427    21.655  < 2e-16 ***\nORIGIN_ID1297  2.8809069  0.1304364    22.087  < 2e-16 ***\nORIGIN_ID1298  3.8317753  0.1282922    29.868  < 2e-16 ***\nORIGIN_ID1300  2.8950324  0.1317424    21.975  < 2e-16 ***\nORIGIN_ID1301  1.6831247  0.1424392    11.816  < 2e-16 ***\nORIGIN_ID1302  2.2023208  0.1375615    16.010  < 2e-16 ***\nORIGIN_ID1307  2.1215682  0.1434873    14.786  < 2e-16 ***\nORIGIN_ID1308 -0.7964486  1.0130041    -0.786 0.431736    \nORIGIN_ID1310  4.6175195  0.1281186    36.041  < 2e-16 ***\nORIGIN_ID1311  4.0926458  0.1281837    31.928  < 2e-16 ***\nORIGIN_ID1312  4.3473055  0.1281598    33.921  < 2e-16 ***\nORIGIN_ID1313  1.7191341  0.1355863    12.679  < 2e-16 ***\nORIGIN_ID1314  4.5226376  0.1281486    35.292  < 2e-16 ***\nORIGIN_ID1315  4.1617607  0.1283544    32.424  < 2e-16 ***\nORIGIN_ID1316  4.0034562  0.1283666    31.188  < 2e-16 ***\nORIGIN_ID1317  3.7629672  0.1287610    29.224  < 2e-16 ***\nORIGIN_ID1320  1.0279833  0.1599228     6.428 1.29e-10 ***\nORIGIN_ID1325  4.2166906  0.1289117    32.710  < 2e-16 ***\nORIGIN_ID1326  4.6898561  0.1281092    36.608  < 2e-16 ***\nORIGIN_ID1327  5.4079696  0.1280762    42.225  < 2e-16 ***\nORIGIN_ID1328  4.8438209  0.1281385    37.801  < 2e-16 ***\nORIGIN_ID1329  3.4515865  0.1283736    26.887  < 2e-16 ***\nORIGIN_ID1330  4.0782505  0.1282487    31.800  < 2e-16 ***\nORIGIN_ID1331  5.4381141  0.1281149    42.447  < 2e-16 ***\nORIGIN_ID1332  2.5965775  0.1313157    19.774  < 2e-16 ***\nORIGIN_ID1333  5.2922426  0.1281896    41.284  < 2e-16 ***\nORIGIN_ID1334  2.4044062  0.1325137    18.145  < 2e-16 ***\nORIGIN_ID1338  0.0370906  0.2884068     0.129 0.897670    \nORIGIN_ID1339  5.0629378  0.1285440    39.387  < 2e-16 ***\nORIGIN_ID1341  3.6407848  0.1284219    28.350  < 2e-16 ***\nORIGIN_ID1342  5.3258268  0.1280902    41.579  < 2e-16 ***\nORIGIN_ID1343  4.9721340  0.1281108    38.811  < 2e-16 ***\nORIGIN_ID1344  5.8563904  0.1280693    45.728  < 2e-16 ***\nORIGIN_ID1345  4.5906828  0.1281666    35.818  < 2e-16 ***\nORIGIN_ID1346  4.8885511  0.1281552    38.146  < 2e-16 ***\nORIGIN_ID1347  5.6549097  0.1281205    44.137  < 2e-16 ***\nORIGIN_ID1348  6.0494533  0.1281243    47.215  < 2e-16 ***\nORIGIN_ID1349  2.7015787  0.1370071    19.719  < 2e-16 ***\nORIGIN_ID1355  3.7581928  0.1293443    29.056  < 2e-16 ***\nORIGIN_ID1356  5.2402422  0.1280842    40.912  < 2e-16 ***\nORIGIN_ID1357  2.9837458  0.1290811    23.115  < 2e-16 ***\nORIGIN_ID1358  5.0496457  0.1281371    39.408  < 2e-16 ***\nORIGIN_ID1359  4.3046453  0.1281605    33.588  < 2e-16 ***\nORIGIN_ID1360  4.4021439  0.1281815    34.343  < 2e-16 ***\nORIGIN_ID1361  5.9328645  0.1280730    46.324  < 2e-16 ***\nORIGIN_ID1362  4.7971852  0.1281756    37.427  < 2e-16 ***\nORIGIN_ID1363  6.2554223  0.1280964    48.834  < 2e-16 ***\nORIGIN_ID1364  1.2901650  0.1467232     8.793  < 2e-16 ***\nORIGIN_ID1370  3.6335821  0.1283641    28.307  < 2e-16 ***\nORIGIN_ID1371  5.0744998  0.1281109    39.610  < 2e-16 ***\nORIGIN_ID1372  4.2026774  0.1281697    32.790  < 2e-16 ***\nORIGIN_ID1373  4.1674181  0.1283234    32.476  < 2e-16 ***\nORIGIN_ID1374  4.8162889  0.1281146    37.594  < 2e-16 ***\nORIGIN_ID1376  6.0755581  0.1280704    47.439  < 2e-16 ***\nORIGIN_ID1377  1.8715130  0.1348009    13.884  < 2e-16 ***\nORIGIN_ID1378  3.5326231  0.1321001    26.742  < 2e-16 ***\nORIGIN_ID1383  3.5659220  0.1290722    27.627  < 2e-16 ***\nORIGIN_ID1384  5.0344732  0.1281059    39.299  < 2e-16 ***\nORIGIN_ID1385  4.2792228  0.1281596    33.390  < 2e-16 ***\nORIGIN_ID1386  3.3890528  0.1285068    26.373  < 2e-16 ***\nORIGIN_ID1387  4.2300128  0.1282134    32.992  < 2e-16 ***\nORIGIN_ID1388  3.5290953  0.1285700    27.449  < 2e-16 ***\nORIGIN_ID1389  5.6864563  0.1280890    44.395  < 2e-16 ***\nORIGIN_ID1390  5.9537187  0.1280941    46.479  < 2e-16 ***\nORIGIN_ID1391  5.6187466  0.1281548    43.843  < 2e-16 ***\nORIGIN_ID1396  5.0003889  0.1281254    39.027  < 2e-16 ***\nORIGIN_ID1397  4.9304168  0.1281154    38.484  < 2e-16 ***\nORIGIN_ID1398  4.8217931  0.1281071    37.639  < 2e-16 ***\nORIGIN_ID1399  3.7375960  0.1282897    29.134  < 2e-16 ***\nORIGIN_ID1400  5.7129503  0.1280974    44.598  < 2e-16 ***\nORIGIN_ID1401  4.1610904  0.1282575    32.443  < 2e-16 ***\nORIGIN_ID1402  6.1337883  0.1280742    47.892  < 2e-16 ***\nORIGIN_ID1403  5.0061044  0.1282776    39.026  < 2e-16 ***\nORIGIN_ID1408  4.4788152  0.1283058    34.907  < 2e-16 ***\nORIGIN_ID1409  5.2061085  0.1280934    40.643  < 2e-16 ***\nORIGIN_ID1410  4.5388179  0.1281226    35.426  < 2e-16 ***\nORIGIN_ID1411  4.6092833  0.1281203    35.976  < 2e-16 ***\nORIGIN_ID1412  2.2312599  0.1296741    17.207  < 2e-16 ***\nORIGIN_ID1413  5.0404366  0.1281349    39.337  < 2e-16 ***\nORIGIN_ID1414  5.8704388  0.1280699    45.838  < 2e-16 ***\nORIGIN_ID1415  4.9622089  0.1281639    38.718  < 2e-16 ***\nORIGIN_ID1416  6.4066190  0.1280888    50.017  < 2e-16 ***\nORIGIN_ID1417  6.2400144  0.1283879    48.603  < 2e-16 ***\nORIGIN_ID1421  3.5910841  0.1284107    27.966  < 2e-16 ***\nORIGIN_ID1422  5.0989175  0.1280893    39.808  < 2e-16 ***\nORIGIN_ID1423  3.8397751  0.1282143    29.948  < 2e-16 ***\nORIGIN_ID1424  1.6811331  0.1308280    12.850  < 2e-16 ***\nORIGIN_ID1425  5.1961942  0.1281123    40.560  < 2e-16 ***\nORIGIN_ID1426  5.8314300  0.1280723    45.532  < 2e-16 ***\nORIGIN_ID1427  5.5215840  0.1280903    43.107  < 2e-16 ***\nORIGIN_ID1428  5.4795381  0.1281064    42.773  < 2e-16 ***\nORIGIN_ID1429  5.7192587  0.1281270    44.637  < 2e-16 ***\nORIGIN_ID1432  4.0713516  0.1284452    31.697  < 2e-16 ***\nORIGIN_ID1433  4.4127766  0.1281758    34.428  < 2e-16 ***\nORIGIN_ID1434  1.0148251  0.1325687     7.655 1.93e-14 ***\nORIGIN_ID1435  3.0960559  0.1284225    24.108  < 2e-16 ***\nORIGIN_ID1436 -1.7540016  0.2230515    -7.864 3.73e-15 ***\nORIGIN_ID1437  4.8649277  0.1281571    37.961  < 2e-16 ***\nORIGIN_ID1438  5.4122775  0.1280936    42.253  < 2e-16 ***\nORIGIN_ID1439  5.5857734  0.1281007    43.605  < 2e-16 ***\nORIGIN_ID1440  6.2252370  0.1280755    48.606  < 2e-16 ***\nORIGIN_ID1441  6.2284041  0.1280954    48.623  < 2e-16 ***\nORIGIN_ID1444  4.2963249  0.1282123    33.509  < 2e-16 ***\nORIGIN_ID1445  4.9394471  0.1281028    38.558  < 2e-16 ***\nORIGIN_ID1446  4.4264847  0.1281602    34.539  < 2e-16 ***\nORIGIN_ID1447  2.9011470  0.1290511    22.481  < 2e-16 ***\nORIGIN_ID1448  3.3513171  0.1307577    25.630  < 2e-16 ***\nORIGIN_ID1449  3.9414005  0.1283655    30.705  < 2e-16 ***\nORIGIN_ID1450  5.6711857  0.1280936    44.274  < 2e-16 ***\nORIGIN_ID1451  5.9408521  0.1280799    46.384  < 2e-16 ***\nORIGIN_ID1452  4.8623138  0.1282053    37.926  < 2e-16 ***\nORIGIN_ID1453  5.5273515  0.1282639    43.094  < 2e-16 ***\nORIGIN_ID1455  4.3804364  0.1282394    34.158  < 2e-16 ***\nORIGIN_ID1456  4.6928579  0.1282254    36.599  < 2e-16 ***\nORIGIN_ID1457  4.3605597  0.1281510    34.027  < 2e-16 ***\nORIGIN_ID1458  3.9752498  0.1281972    31.009  < 2e-16 ***\nORIGIN_ID1459  3.2394444  0.1303118    24.859  < 2e-16 ***\nORIGIN_ID1461  4.5956873  0.1286533    35.721  < 2e-16 ***\nORIGIN_ID1462  5.3185700  0.1281389    41.506  < 2e-16 ***\nORIGIN_ID1463  6.6742151  0.1280647    52.116  < 2e-16 ***\nORIGIN_ID1464  6.3391522  0.1280848    49.492  < 2e-16 ***\nORIGIN_ID1465  5.8851049  0.1283885    45.838  < 2e-16 ***\nORIGIN_ID1466  5.3714650  0.1280987    41.932  < 2e-16 ***\nORIGIN_ID1467  5.3858751  0.1280807    42.051  < 2e-16 ***\nORIGIN_ID1468  5.4309164  0.1280767    42.404  < 2e-16 ***\nORIGIN_ID1471  2.2819745  0.1318029    17.314  < 2e-16 ***\nORIGIN_ID1472  5.8419544  0.1281527    45.586  < 2e-16 ***\nORIGIN_ID1473  5.9122223  0.1281127    46.149  < 2e-16 ***\nORIGIN_ID1474  6.8932331  0.1280645    53.826  < 2e-16 ***\nORIGIN_ID1475  2.3633281  0.1327691    17.800  < 2e-16 ***\nORIGIN_ID1478  4.5592337  0.1281484    35.578  < 2e-16 ***\nORIGIN_ID1479  3.6695544  0.1289274    28.462  < 2e-16 ***\nORIGIN_ID1480  5.0629883  0.1281196    39.518  < 2e-16 ***\nORIGIN_ID1483  3.1589256  0.1304570    24.214  < 2e-16 ***\nORIGIN_ID1485  5.5272402  0.1281552    43.129  < 2e-16 ***\nORIGIN_ID1486  4.1462398  0.1285491    32.254  < 2e-16 ***\nORIGIN_ID1487  3.2052983  0.1330348    24.094  < 2e-16 ***\nORIGIN_ID1488  5.5083497  0.1280891    43.004  < 2e-16 ***\nORIGIN_ID1489  3.7353632  0.1283452    29.104  < 2e-16 ***\nORIGIN_ID1490  5.4020714  0.1281093    42.168  < 2e-16 ***\nORIGIN_ID1491  1.1742240  0.1350863     8.692  < 2e-16 ***\nORIGIN_ID1494 -0.7412917  0.1991813    -3.722 0.000198 ***\nORIGIN_ID1495  4.4378682  0.1287535    34.468  < 2e-16 ***\nORIGIN_ID1496  5.6147377  0.1281537    43.813  < 2e-16 ***\nORIGIN_ID1500  4.2255118  0.1282563    32.946  < 2e-16 ***\nORIGIN_ID1501  5.0484626  0.1281189    39.405  < 2e-16 ***\nORIGIN_ID1502  5.4105252  0.1280972    42.238  < 2e-16 ***\nORIGIN_ID1506 -1.1956136  0.4652192    -2.570 0.010170 *  \nORIGIN_ID1507  5.7041810  0.1281631    44.507  < 2e-16 ***\nORIGIN_ID1508  6.5759646  0.1282159    51.288  < 2e-16 ***\nORIGIN_ID1510  4.4993865  0.1282261    35.089  < 2e-16 ***\nORIGIN_ID1511  3.5887075  0.1286162    27.902  < 2e-16 ***\nORIGIN_ID1512  4.7027611  0.1282666    36.664  < 2e-16 ***\nORIGIN_ID1513  3.7044529  0.1284473    28.840  < 2e-16 ***\nORIGIN_ID1516  3.2368288  0.1305871    24.787  < 2e-16 ***\nORIGIN_ID1518  5.8344867  0.1282597    45.490  < 2e-16 ***\nORIGIN_ID1521  4.3942764  0.1282114    34.274  < 2e-16 ***\nORIGIN_ID1522  5.1792781  0.1280993    40.432  < 2e-16 ***\nORIGIN_ID1523  4.8631181  0.1281648    37.944  < 2e-16 ***\nORIGIN_ID1526  1.0958873  0.1424302     7.694 1.42e-14 ***\nORIGIN_ID1530  4.5136421  0.1283650    35.163  < 2e-16 ***\nORIGIN_ID1531  4.4458173  0.1288691    34.499  < 2e-16 ***\nORIGIN_ID1532  5.6994604  0.1280796    44.499  < 2e-16 ***\nORIGIN_ID1533  4.3903426  0.1282689    34.228  < 2e-16 ***\nORIGIN_ID1534  3.4992497  0.1288245    27.163  < 2e-16 ***\nORIGIN_ID1535  2.9394122  0.1302507    22.567  < 2e-16 ***\nORIGIN_ID1536  0.7946192  0.1523868     5.214 1.84e-07 ***\nORIGIN_ID1541  4.4960357  0.1282043    35.069  < 2e-16 ***\nORIGIN_ID1542  6.0824726  0.1280635    47.496  < 2e-16 ***\nORIGIN_ID1543  5.3914538  0.1281279    42.079  < 2e-16 ***\nORIGIN_ID1544  5.4546208  0.1281065    42.579  < 2e-16 ***\nORIGIN_ID1545  3.9273108  0.1284010    30.586  < 2e-16 ***\nORIGIN_ID1546  3.6110202  0.1284605    28.110  < 2e-16 ***\nORIGIN_ID1553  3.7848590  0.1282860    29.503  < 2e-16 ***\nORIGIN_ID1554  5.1832160  0.1280930    40.464  < 2e-16 ***\nORIGIN_ID1555  4.3424639  0.1281845    33.877  < 2e-16 ***\nORIGIN_ID1556  5.8973370  0.1280847    46.042  < 2e-16 ***\nORIGIN_ID1557  4.4860900  0.1282018    34.992  < 2e-16 ***\nORIGIN_ID1558  5.3676666  0.1281247    41.894  < 2e-16 ***\nORIGIN_ID1562  4.4695236  0.1282207    34.858  < 2e-16 ***\nORIGIN_ID1563  5.1465267  0.1280929    40.178  < 2e-16 ***\nORIGIN_ID1564  5.3070879  0.1281008    41.429  < 2e-16 ***\nORIGIN_ID1565  4.5775024  0.1281502    35.720  < 2e-16 ***\nORIGIN_ID1566  5.8897334  0.1280767    45.986  < 2e-16 ***\nORIGIN_ID1568  5.6387947  0.1281091    44.016  < 2e-16 ***\nORIGIN_ID1573  4.8111328  0.1281414    37.545  < 2e-16 ***\nORIGIN_ID1574  5.5383637  0.1281055    43.233  < 2e-16 ***\nORIGIN_ID1575  1.4179866  0.1305464    10.862  < 2e-16 ***\nORIGIN_ID1576  4.6654972  0.1281123    36.417  < 2e-16 ***\nORIGIN_ID1577  4.9860973  0.1281512    38.908  < 2e-16 ***\nORIGIN_ID1578  5.6821214  0.1281002    44.357  < 2e-16 ***\nORIGIN_ID1584  5.3085780  0.1280935    41.443  < 2e-16 ***\nORIGIN_ID1585  3.9782738  0.1284769    30.965  < 2e-16 ***\nORIGIN_ID1586  5.2002689  0.1280817    40.601  < 2e-16 ***\nORIGIN_ID1587  5.2233275  0.1280883    40.779  < 2e-16 ***\nORIGIN_ID1588  4.3721841  0.1284330    34.043  < 2e-16 ***\nORIGIN_ID1589  5.0282088  0.1281863    39.226  < 2e-16 ***\nORIGIN_ID1593  5.2692421  0.1281319    41.124  < 2e-16 ***\nORIGIN_ID1594  5.4686406  0.1280882    42.694  < 2e-16 ***\nORIGIN_ID1595  3.5645207  0.1282968    27.783  < 2e-16 ***\nORIGIN_ID1596  5.9993894  0.1280630    46.847  < 2e-16 ***\nORIGIN_ID1597  4.2568612  0.1283159    33.175  < 2e-16 ***\nORIGIN_ID1598  4.9853819  0.1281269    38.910  < 2e-16 ***\nORIGIN_ID1602  1.9291355  0.1615806    11.939  < 2e-16 ***\nORIGIN_ID1603  2.5213218  0.1297816    19.427  < 2e-16 ***\nORIGIN_ID1604  3.6397134  0.1282669    28.376  < 2e-16 ***\nORIGIN_ID1605  4.2431337  0.1281527    33.110  < 2e-16 ***\nORIGIN_ID1606  4.8142805  0.1281063    37.580  < 2e-16 ***\nORIGIN_ID1607  4.9360764  0.1281323    38.523  < 2e-16 ***\nORIGIN_ID1608  2.4331076  0.1308509    18.594  < 2e-16 ***\nORIGIN_ID1611  2.8536132  0.1292564    22.077  < 2e-16 ***\nORIGIN_ID1612  2.9177781  0.1285998    22.689  < 2e-16 ***\nORIGIN_ID1613  4.5300485  0.1281529    35.349  < 2e-16 ***\nORIGIN_ID1614  5.2999322  0.1280809    41.380  < 2e-16 ***\nORIGIN_ID1615  5.3472964  0.1281335    41.732  < 2e-16 ***\nORIGIN_ID1616  5.5913094  0.1280952    43.650  < 2e-16 ***\nORIGIN_ID1620  4.1383623  0.1284796    32.210  < 2e-16 ***\nORIGIN_ID1621  2.4085792  0.1290184    18.669  < 2e-16 ***\nORIGIN_ID1622  4.8947686  0.1281168    38.206  < 2e-16 ***\nORIGIN_ID1623  5.7754964  0.1280722    45.096  < 2e-16 ***\nORIGIN_ID1624  5.5242395  0.1280908    43.128  < 2e-16 ***\nORIGIN_ID1629  2.5958087  0.1291893    20.093  < 2e-16 ***\nORIGIN_ID1630  4.2459995  0.1281737    33.127  < 2e-16 ***\nORIGIN_ID1631  5.2114915  0.1281570    40.665  < 2e-16 ***\nORIGIN_ID1632  4.8850519  0.1281236    38.128  < 2e-16 ***\nORIGIN_ID1633  5.2990895  0.1281112    41.363  < 2e-16 ***\nORIGIN_ID1638  4.0927084  0.1282617    31.909  < 2e-16 ***\nORIGIN_ID1639  3.8712860  0.1283898    30.153  < 2e-16 ***\nORIGIN_ID1640  4.8441421  0.1281161    37.811  < 2e-16 ***\nORIGIN_ID1641  5.1595478  0.1281245    40.270  < 2e-16 ***\nORIGIN_ID1642  4.0389840  0.1296066    31.163  < 2e-16 ***\nORIGIN_ID1646  1.0723143  0.1352544     7.928 2.22e-15 ***\nORIGIN_ID1647 -0.1583504  0.1457157    -1.087 0.277166    \nORIGIN_ID1648  2.8731450  0.1286632    22.331  < 2e-16 ***\nORIGIN_ID1649  4.4131239  0.1281679    34.432  < 2e-16 ***\nORIGIN_ID1654  1.7380176  0.1312503    13.242  < 2e-16 ***\nORIGIN_ID1655  3.7487026  0.1293184    28.988  < 2e-16 ***\nORIGIN_ID1656  4.3463492  0.1282716    33.884  < 2e-16 ***\nORIGIN_ID1657  4.2029944  0.1283010    32.759  < 2e-16 ***\nORIGIN_ID1658  1.0946505  0.1476776     7.412 1.24e-13 ***\nORIGIN_ID1664  2.2935885  0.1340940    17.104  < 2e-16 ***\nORIGIN_ID1665  2.4776912  0.1298670    19.079  < 2e-16 ***\nORIGIN_ID1666  2.3648204  0.1294778    18.264  < 2e-16 ***\nORIGIN_ID1667  2.2203323  0.1335831    16.621  < 2e-16 ***\nORIGIN_ID1674  4.0986009  0.1294214    31.669  < 2e-16 ***\nORIGIN_ID1675  3.6894524  0.1290111    28.598  < 2e-16 ***\nORIGIN_ID1676  1.1573753  0.1328593     8.711  < 2e-16 ***\nORIGIN_ID1682  4.6711721  0.1283305    36.400  < 2e-16 ***\nORIGIN_ID1685  2.5598923  0.1291894    19.815  < 2e-16 ***\nORIGIN_ID1686  2.7358161  0.1293768    21.146  < 2e-16 ***\nORIGIN_ID1691  2.6769703  0.1294205    20.684  < 2e-16 ***\nORIGIN_ID1693  0.9379363  0.1447607     6.479 9.22e-11 ***\nORIGIN_ID1695  1.7088417  0.1370493    12.469  < 2e-16 ***\nORIGIN_ID1698  4.9580886  0.1290778    38.412  < 2e-16 ***\nORIGIN_ID1704  4.1081938  0.1283472    32.008  < 2e-16 ***\nORIGIN_ID1711  6.0606638  0.1281743    47.285  < 2e-16 ***\nORIGIN_ID1714 -1.8072782  0.2963766    -6.098 1.07e-09 ***\nORIGIN_ID1722  3.4900313  0.1288759    27.081  < 2e-16 ***\nORIGIN_ID1723 -1.1644779  0.1719443    -6.772 1.27e-11 ***\nORIGIN_ID1726  4.3664479  0.1294589    33.728  < 2e-16 ***\nORIGIN_ID1731  2.4705746  0.1295934    19.064  < 2e-16 ***\nORIGIN_ID1732  1.9126865  0.1299097    14.723  < 2e-16 ***\nORIGIN_ID1741  2.4357974  0.1320688    18.443  < 2e-16 ***\nORIGIN_ID1742  4.4564344  0.1284473    34.695  < 2e-16 ***\nORIGIN_ID1750  1.9468707  0.1352701    14.392  < 2e-16 ***\nORIGIN_ID1751  1.2717382  0.1407201     9.037  < 2e-16 ***\nORIGIN_ID1768  4.0404949  0.1339758    30.158  < 2e-16 ***\nDESTIN_ID29    1.3402059  0.0552883    24.240  < 2e-16 ***\nDESTIN_ID40   -0.3031428  0.0582054    -5.208 1.91e-07 ***\nDESTIN_ID41   -0.0263763  0.0545394    -0.484 0.628656    \nDESTIN_ID48    0.4335646  0.0610999     7.096 1.28e-12 ***\nDESTIN_ID49    0.2908173  0.0531557     5.471 4.47e-08 ***\nDESTIN_ID50   -0.3561480  0.0562230    -6.335 2.38e-10 ***\nDESTIN_ID51   -0.7037157  0.0552182   -12.744  < 2e-16 ***\nDESTIN_ID59   -2.0660749  0.0668936   -30.886  < 2e-16 ***\nDESTIN_ID60   -0.4169798  0.0536498    -7.772 7.71e-15 ***\nDESTIN_ID61   -3.5677794  0.1127153   -31.653  < 2e-16 ***\nDESTIN_ID62    0.7951211  0.0519878    15.294  < 2e-16 ***\nDESTIN_ID63   -2.3906169  0.0601506   -39.744  < 2e-16 ***\nDESTIN_ID69    1.6310489  0.0538695    30.278  < 2e-16 ***\nDESTIN_ID70   -0.3592886  0.0543399    -6.612 3.79e-11 ***\nDESTIN_ID71    0.7935761  0.0523083    15.171  < 2e-16 ***\nDESTIN_ID72   -1.4994014  0.0551951   -27.165  < 2e-16 ***\nDESTIN_ID73   -0.7855246  0.0550322   -14.274  < 2e-16 ***\nDESTIN_ID74   -1.3815709  0.0527954   -26.168  < 2e-16 ***\nDESTIN_ID82   -2.2628514  0.0688238   -32.879  < 2e-16 ***\nDESTIN_ID83   -1.1894508  0.0582394   -20.423  < 2e-16 ***\nDESTIN_ID85    0.1494185  0.0516509     2.893 0.003818 ** \nDESTIN_ID86   -0.9054120  0.0520018   -17.411  < 2e-16 ***\nDESTIN_ID87   -0.0186862  0.0517547    -0.361 0.718059    \nDESTIN_ID98   -0.5204275  0.0520727    -9.994  < 2e-16 ***\nDESTIN_ID99   -1.9511302  0.0561277   -34.762  < 2e-16 ***\nDESTIN_ID100  -1.3993424  0.0532670   -26.270  < 2e-16 ***\nDESTIN_ID109  -1.5672826  0.0659519   -23.764  < 2e-16 ***\nDESTIN_ID111  -2.2423027  0.0560357   -40.016  < 2e-16 ***\nDESTIN_ID112  -2.6894896  0.0566396   -47.484  < 2e-16 ***\nDESTIN_ID113  -4.9913563  0.2631919   -18.965  < 2e-16 ***\nDESTIN_ID125  -1.6851406  0.0531021   -31.734  < 2e-16 ***\nDESTIN_ID126  -0.9095129  0.0518899   -17.528  < 2e-16 ***\nDESTIN_ID135  -0.6954395  0.0587580   -11.836  < 2e-16 ***\nDESTIN_ID136  -1.5230856  0.0538927   -28.261  < 2e-16 ***\nDESTIN_ID137  -0.4648046  0.0514870    -9.028  < 2e-16 ***\nDESTIN_ID138  -3.1519765  0.0934840   -33.717  < 2e-16 ***\nDESTIN_ID148   0.0166658  0.0539893     0.309 0.757560    \nDESTIN_ID149  -0.8688868  0.0530673   -16.373  < 2e-16 ***\nDESTIN_ID150  -1.2730289  0.0558825   -22.780  < 2e-16 ***\nDESTIN_ID159   0.8100475  0.0524554    15.443  < 2e-16 ***\nDESTIN_ID160  -2.2848337  0.0546146   -41.836  < 2e-16 ***\nDESTIN_ID161  -1.4632297  0.0536850   -27.256  < 2e-16 ***\nDESTIN_ID171  -1.1801393  0.0604802   -19.513  < 2e-16 ***\nDESTIN_ID172  -0.5723959  0.0524260   -10.918  < 2e-16 ***\nDESTIN_ID173  -1.0432295  0.0533981   -19.537  < 2e-16 ***\nDESTIN_ID185   0.4181671  0.0526366     7.944 1.95e-15 ***\nDESTIN_ID186  -1.4498133  0.0530139   -27.348  < 2e-16 ***\nDESTIN_ID201   1.2022826  0.0520015    23.120  < 2e-16 ***\nDESTIN_ID202  -0.6470783  0.0534155   -12.114  < 2e-16 ***\nDESTIN_ID203  -0.1087389  0.0515575    -2.109 0.034938 *  \nDESTIN_ID217   0.0503894  0.0546105     0.923 0.356160    \nDESTIN_ID218  -3.2312150  0.0780365   -41.406  < 2e-16 ***\nDESTIN_ID219  -0.3575905  0.0520677    -6.868 6.52e-12 ***\nDESTIN_ID220  -1.1534060  0.0518375   -22.250  < 2e-16 ***\nDESTIN_ID234   0.3348940  0.0515838     6.492 8.46e-11 ***\nDESTIN_ID235  -1.8372270  0.0523334   -35.106  < 2e-16 ***\nDESTIN_ID251  -0.4519427  0.0540751    -8.358  < 2e-16 ***\nDESTIN_ID252  -0.7792446  0.0524137   -14.867  < 2e-16 ***\nDESTIN_ID253   0.0626083  0.0512244     1.222 0.221618    \nDESTIN_ID254   0.0507061  0.0516930     0.981 0.326638    \nDESTIN_ID255  -2.0032225  0.0578713   -34.615  < 2e-16 ***\nDESTIN_ID268   0.4041435  0.0529503     7.633 2.30e-14 ***\nDESTIN_ID269   0.2185277  0.0520300     4.200 2.67e-05 ***\nDESTIN_ID270  -1.8591328  0.0521895   -35.623  < 2e-16 ***\nDESTIN_ID272   0.9386915  0.0512212    18.326  < 2e-16 ***\nDESTIN_ID285  -0.6503417  0.0553214   -11.756  < 2e-16 ***\nDESTIN_ID286  -0.3677791  0.0522777    -7.035 1.99e-12 ***\nDESTIN_ID287  -1.9456747  0.0518689   -37.511  < 2e-16 ***\nDESTIN_ID288  -0.6967686  0.0518195   -13.446  < 2e-16 ***\nDESTIN_ID289  -1.3051165  0.0523565   -24.928  < 2e-16 ***\nDESTIN_ID303  -1.2487816  0.0536875   -23.260  < 2e-16 ***\nDESTIN_ID304  -1.1847176  0.0518638   -22.843  < 2e-16 ***\nDESTIN_ID306  -1.8955956  0.0527150   -35.959  < 2e-16 ***\nDESTIN_ID307  -2.2851516  0.0568767   -40.177  < 2e-16 ***\nDESTIN_ID320  -0.8900202  0.0556089   -16.005  < 2e-16 ***\nDESTIN_ID321  -1.4624605  0.0535167   -27.327  < 2e-16 ***\nDESTIN_ID322  -2.0694359  0.0521030   -39.718  < 2e-16 ***\nDESTIN_ID323  -0.5036211  0.0512545    -9.826  < 2e-16 ***\nDESTIN_ID324  -2.1129779  0.0545266   -38.751  < 2e-16 ***\nDESTIN_ID325  -3.9678057  0.0727846   -54.514  < 2e-16 ***\nDESTIN_ID338   0.5876647  0.0517977    11.345  < 2e-16 ***\nDESTIN_ID339  -0.9862253  0.0517504   -19.057  < 2e-16 ***\nDESTIN_ID340  -2.1993928  0.0517085   -42.534  < 2e-16 ***\nDESTIN_ID341  -2.2151380  0.0517991   -42.764  < 2e-16 ***\nDESTIN_ID342  -0.4114959  0.0515448    -7.983 1.43e-15 ***\nDESTIN_ID343  -2.0714930  0.0547001   -37.870  < 2e-16 ***\nDESTIN_ID353  -0.5092358  0.0535933    -9.502  < 2e-16 ***\nDESTIN_ID354   0.8275475  0.0514504    16.084  < 2e-16 ***\nDESTIN_ID355  -1.2636757  0.0514887   -24.543  < 2e-16 ***\nDESTIN_ID356  -0.5750885  0.0511300   -11.248  < 2e-16 ***\nDESTIN_ID357  -2.8767495  0.0528108   -54.473  < 2e-16 ***\nDESTIN_ID358  -1.3363317  0.0524374   -25.484  < 2e-16 ***\nDESTIN_ID359  -1.6641308  0.0533312   -31.204  < 2e-16 ***\nDESTIN_ID360  -4.5838507  0.1791358   -25.589  < 2e-16 ***\nDESTIN_ID361  -2.8940763  0.0666619   -43.414  < 2e-16 ***\nDESTIN_ID370  -0.8981974  0.0538575   -16.677  < 2e-16 ***\nDESTIN_ID371  -3.1571112  0.0690121   -45.747  < 2e-16 ***\nDESTIN_ID372  -0.7546961  0.0511861   -14.744  < 2e-16 ***\nDESTIN_ID373  -1.5647439  0.0513325   -30.483  < 2e-16 ***\nDESTIN_ID375  -4.9750234  0.0891980   -55.775  < 2e-16 ***\nDESTIN_ID376  -2.8305769  0.0608150   -46.544  < 2e-16 ***\nDESTIN_ID378  -3.0798302  0.0735845   -41.854  < 2e-16 ***\nDESTIN_ID379  -0.5744886  0.0535410   -10.730  < 2e-16 ***\nDESTIN_ID386  -0.3273320  0.0540587    -6.055 1.40e-09 ***\nDESTIN_ID387  -0.0331043  0.0522783    -0.633 0.526582    \nDESTIN_ID388  -1.4982565  0.0521469   -28.731  < 2e-16 ***\nDESTIN_ID389   0.7985104  0.0510602    15.639  < 2e-16 ***\nDESTIN_ID390  -0.8293346  0.0512503   -16.182  < 2e-16 ***\nDESTIN_ID395  -4.7750793  0.2066134   -23.111  < 2e-16 ***\nDESTIN_ID396  -2.7387329  0.0717625   -38.164  < 2e-16 ***\nDESTIN_ID406  -0.9353543  0.0550525   -16.990  < 2e-16 ***\nDESTIN_ID407  -0.0032830  0.0518656    -0.063 0.949529    \nDESTIN_ID408  -1.9688914  0.0515085   -38.225  < 2e-16 ***\nDESTIN_ID409  -1.8108215  0.0513618   -35.256  < 2e-16 ***\nDESTIN_ID411  -6.9723827  0.2026697   -34.403  < 2e-16 ***\nDESTIN_ID416  -2.9919987  0.0726128   -41.205  < 2e-16 ***\nDESTIN_ID417  -1.8643702  0.0622946   -29.928  < 2e-16 ***\nDESTIN_ID424  -0.2025242  0.0525234    -3.856 0.000115 ***\nDESTIN_ID425  -0.7259048  0.0515091   -14.093  < 2e-16 ***\nDESTIN_ID426  -2.1758747  0.0515298   -42.226  < 2e-16 ***\nDESTIN_ID427  -1.8831907  0.0515879   -36.505  < 2e-16 ***\nDESTIN_ID434  -3.1970781  0.1453637   -21.994  < 2e-16 ***\nDESTIN_ID435  -2.1533304  0.0699244   -30.795  < 2e-16 ***\nDESTIN_ID441  -1.6501993  0.0539562   -30.584  < 2e-16 ***\nDESTIN_ID442  -2.4427772  0.0543031   -44.984  < 2e-16 ***\nDESTIN_ID443  -1.0156217  0.0514340   -19.746  < 2e-16 ***\nDESTIN_ID444  -1.1862969  0.0512798   -23.134  < 2e-16 ***\nDESTIN_ID446  -1.8914674  0.0527085   -35.885  < 2e-16 ***\nDESTIN_ID462  -1.0409263  0.0518193   -20.088  < 2e-16 ***\nDESTIN_ID463  -2.1184624  0.0522994   -40.506  < 2e-16 ***\nDESTIN_ID464  -1.4217649  0.0513430   -27.691  < 2e-16 ***\nDESTIN_ID465  -1.1561316  0.0512699   -22.550  < 2e-16 ***\nDESTIN_ID467  -1.1824963  0.0520297   -22.727  < 2e-16 ***\nDESTIN_ID480   0.2671348  0.0513507     5.202 1.97e-07 ***\nDESTIN_ID481  -1.0016601  0.0514147   -19.482  < 2e-16 ***\nDESTIN_ID482  -1.4097610  0.0514442   -27.404  < 2e-16 ***\nDESTIN_ID483   0.6631682  0.0510960    12.979  < 2e-16 ***\nDESTIN_ID501  -2.3904874  0.0542955   -44.027  < 2e-16 ***\nDESTIN_ID502  -0.5913158  0.0512607   -11.535  < 2e-16 ***\nDESTIN_ID503  -2.5906702  0.0522872   -49.547  < 2e-16 ***\nDESTIN_ID504  -0.9668503  0.0512375   -18.870  < 2e-16 ***\nDESTIN_ID506  -2.0578792  0.0521868   -39.433  < 2e-16 ***\nDESTIN_ID521  -1.6881857  0.0547626   -30.827  < 2e-16 ***\nDESTIN_ID522  -2.8055648  0.0531849   -52.751  < 2e-16 ***\nDESTIN_ID523  -3.5676867  0.0552639   -64.557  < 2e-16 ***\nDESTIN_ID524  -1.7123453  0.0513619   -33.339  < 2e-16 ***\nDESTIN_ID543  -0.7193314  0.0513115   -14.019  < 2e-16 ***\nDESTIN_ID544  -1.1947355  0.0513048   -23.287  < 2e-16 ***\nDESTIN_ID546  -4.3327030  0.0572935   -75.623  < 2e-16 ***\nDESTIN_ID558  -0.0211550  0.0514049    -0.412 0.680680    \nDESTIN_ID559  -3.4407912  0.0604304   -56.938  < 2e-16 ***\nDESTIN_ID560  -3.4738894  0.0540924   -64.221  < 2e-16 ***\nDESTIN_ID561  -0.9975646  0.0512194   -19.476  < 2e-16 ***\nDESTIN_ID569  -2.6111135  0.0636515   -41.022  < 2e-16 ***\nDESTIN_ID575  -0.6842894  0.0521878   -13.112  < 2e-16 ***\nDESTIN_ID576  -2.2301850  0.0529510   -42.118  < 2e-16 ***\nDESTIN_ID577  -3.8562130  0.0560662   -68.780  < 2e-16 ***\nDESTIN_ID578  -1.5086345  0.0513354   -29.388  < 2e-16 ***\nDESTIN_ID579  -1.5316434  0.0514226   -29.785  < 2e-16 ***\nDESTIN_ID581  -1.5812508  0.0514323   -30.744  < 2e-16 ***\nDESTIN_ID582  -4.9110435  0.0688231   -71.357  < 2e-16 ***\nDESTIN_ID594  -1.2909046  0.0516155   -25.010  < 2e-16 ***\nDESTIN_ID595   0.3061950  0.0511081     5.991 2.08e-09 ***\nDESTIN_ID596  -1.1347344  0.0512533   -22.140  < 2e-16 ***\nDESTIN_ID597  -1.8215731  0.0515391   -35.344  < 2e-16 ***\nDESTIN_ID598  -6.0383956  0.0788768   -76.555  < 2e-16 ***\nDESTIN_ID599  -2.2621952  0.0514672   -43.954  < 2e-16 ***\nDESTIN_ID600  -1.6666944  0.0516212   -32.287  < 2e-16 ***\nDESTIN_ID604  -1.6521469  0.0548593   -30.116  < 2e-16 ***\nDESTIN_ID609  -3.0849223  0.0607176   -50.808  < 2e-16 ***\nDESTIN_ID610  -1.4383833  0.0516678   -27.839  < 2e-16 ***\nDESTIN_ID611  -2.0063252  0.0517694   -38.755  < 2e-16 ***\nDESTIN_ID612  -1.0513473  0.0512681   -20.507  < 2e-16 ***\nDESTIN_ID613  -1.6838284  0.0513425   -32.796  < 2e-16 ***\nDESTIN_ID614  -1.8902708  0.0515339   -36.680  < 2e-16 ***\nDESTIN_ID615  -2.1789342  0.0515708   -42.251  < 2e-16 ***\nDESTIN_ID616  -0.0605613  0.0511316    -1.184 0.236247    \nDESTIN_ID617  -4.6137613  0.0624592   -73.868  < 2e-16 ***\nDESTIN_ID620  -2.5768411  0.0590829   -43.614  < 2e-16 ***\nDESTIN_ID624  -0.7539798  0.0523096   -14.414  < 2e-16 ***\nDESTIN_ID625   0.2006576  0.0516325     3.886 0.000102 ***\nDESTIN_ID626  -0.8011764  0.0512888   -15.621  < 2e-16 ***\nDESTIN_ID627  -1.0966441  0.0512924   -21.380  < 2e-16 ***\nDESTIN_ID628  -1.6093036  0.0513593   -31.334  < 2e-16 ***\nDESTIN_ID629  -2.6320122  0.0518129   -50.798  < 2e-16 ***\nDESTIN_ID630  -4.0163507  0.0540590   -74.296  < 2e-16 ***\nDESTIN_ID631  -1.4493332  0.0512399   -28.285  < 2e-16 ***\nDESTIN_ID632  -1.8560201  0.0515428   -36.009  < 2e-16 ***\nDESTIN_ID633  -1.7230345  0.0520436   -33.108  < 2e-16 ***\nDESTIN_ID635  -1.6927448  0.0534347   -31.679  < 2e-16 ***\nDESTIN_ID641  -1.5266167  0.0528406   -28.891  < 2e-16 ***\nDESTIN_ID642  -1.2993306  0.0516071   -25.177  < 2e-16 ***\nDESTIN_ID643  -0.2636754  0.0512485    -5.145 2.67e-07 ***\nDESTIN_ID645  -0.0940616  0.0511231    -1.840 0.065782 .  \nDESTIN_ID646  -1.2928392  0.0513087   -25.197  < 2e-16 ***\nDESTIN_ID647  -1.6571959  0.0512794   -32.317  < 2e-16 ***\nDESTIN_ID649  -0.3265045  0.0512659    -6.369 1.90e-10 ***\nDESTIN_ID650  -1.7917785  0.0530460   -33.778  < 2e-16 ***\nDESTIN_ID651  -2.0423160  0.0537515   -37.996  < 2e-16 ***\nDESTIN_ID652  -1.8923838  0.0538799   -35.122  < 2e-16 ***\nDESTIN_ID658  -1.3630774  0.0528281   -25.802  < 2e-16 ***\nDESTIN_ID659  -0.9720778  0.0514761   -18.884  < 2e-16 ***\nDESTIN_ID660  -1.8675706  0.0519202   -35.970  < 2e-16 ***\nDESTIN_ID661   0.3426370  0.0513084     6.678 2.42e-11 ***\nDESTIN_ID662  -0.8934895  0.0512327   -17.440  < 2e-16 ***\nDESTIN_ID663  -0.0643543  0.0511913    -1.257 0.208705    \nDESTIN_ID665  -0.8953158  0.0512479   -17.470  < 2e-16 ***\nDESTIN_ID666  -3.2036361  0.0525848   -60.923  < 2e-16 ***\nDESTIN_ID667  -0.5202404  0.0513829   -10.125  < 2e-16 ***\nDESTIN_ID668  -3.3998718  0.0566434   -60.022  < 2e-16 ***\nDESTIN_ID669  -1.9987668  0.0533231   -37.484  < 2e-16 ***\nDESTIN_ID670  -3.0259622  0.0811469   -37.290  < 2e-16 ***\nDESTIN_ID676  -0.3940422  0.0520459    -7.571 3.70e-14 ***\nDESTIN_ID677  -2.0854851  0.0519462   -40.147  < 2e-16 ***\nDESTIN_ID678  -1.5290374  0.0515889   -29.639  < 2e-16 ***\nDESTIN_ID679  -0.3015430  0.0512343    -5.886 3.97e-09 ***\nDESTIN_ID680  -1.7612711  0.0514922   -34.205  < 2e-16 ***\nDESTIN_ID682  -1.9002367  0.0513786   -36.985  < 2e-16 ***\nDESTIN_ID683  -1.7256664  0.0514183   -33.561  < 2e-16 ***\nDESTIN_ID684  -2.8764150  0.0538771   -53.388  < 2e-16 ***\nDESTIN_ID685  -1.1348066  0.0516244   -21.982  < 2e-16 ***\nDESTIN_ID686  -3.9924225  0.0571824   -69.819  < 2e-16 ***\nDESTIN_ID687  -1.5374438  0.0527441   -29.149  < 2e-16 ***\nDESTIN_ID696  -1.8282741  0.0525672   -34.780  < 2e-16 ***\nDESTIN_ID697  -1.1519206  0.0513609   -22.428  < 2e-16 ***\nDESTIN_ID698  -1.8276012  0.0517306   -35.329  < 2e-16 ***\nDESTIN_ID699  -0.8353491  0.0513777   -16.259  < 2e-16 ***\nDESTIN_ID700  -2.3696728  0.0520329   -45.542  < 2e-16 ***\nDESTIN_ID701  -1.7155693  0.0517740   -33.136  < 2e-16 ***\nDESTIN_ID702  -2.1372529  0.0517450   -41.304  < 2e-16 ***\nDESTIN_ID703  -1.0604605  0.0511923   -20.715  < 2e-16 ***\nDESTIN_ID707  -3.6806426  0.0555622   -66.244  < 2e-16 ***\nDESTIN_ID716  -2.1194015  0.0531106   -39.905  < 2e-16 ***\nDESTIN_ID717  -0.1941345  0.0512611    -3.787 0.000152 ***\nDESTIN_ID718   0.8828010  0.0510998    17.276  < 2e-16 ***\nDESTIN_ID719  -0.6100158  0.0515934   -11.824  < 2e-16 ***\nDESTIN_ID720  -3.2127793  0.0549187   -58.501  < 2e-16 ***\nDESTIN_ID722  -0.7676363  0.0513146   -14.959  < 2e-16 ***\nDESTIN_ID723  -0.0648172  0.0511237    -1.268 0.204852    \nDESTIN_ID724  -2.7773323  0.0521526   -53.254  < 2e-16 ***\nDESTIN_ID726  -1.5021091  0.0545163   -27.553  < 2e-16 ***\nDESTIN_ID727   0.6529575  0.0511832    12.757  < 2e-16 ***\nDESTIN_ID728  -3.2227416  0.0538569   -59.839  < 2e-16 ***\nDESTIN_ID735  -3.7306714  0.1021471   -36.523  < 2e-16 ***\nDESTIN_ID736  -0.3109503  0.0513043    -6.061 1.35e-09 ***\nDESTIN_ID737  -1.0156751  0.0512821   -19.806  < 2e-16 ***\nDESTIN_ID738  -2.2485852  0.0522651   -43.023  < 2e-16 ***\nDESTIN_ID739  -2.2426853  0.0538255   -41.666  < 2e-16 ***\nDESTIN_ID740  -2.5763617  0.0525516   -49.025  < 2e-16 ***\nDESTIN_ID741  -2.0814514  0.0519442   -40.071  < 2e-16 ***\nDESTIN_ID742  -1.8318018  0.0515839   -35.511  < 2e-16 ***\nDESTIN_ID743  -2.4604158  0.0516695   -47.618  < 2e-16 ***\nDESTIN_ID747  -2.4614358  0.0524349   -46.943  < 2e-16 ***\nDESTIN_ID748  -1.1704940  0.0513488   -22.795  < 2e-16 ***\nDESTIN_ID757  -0.5431414  0.0513959   -10.568  < 2e-16 ***\nDESTIN_ID758  -0.5152163  0.0513089   -10.041  < 2e-16 ***\nDESTIN_ID759  -1.6354275  0.0515649   -31.716  < 2e-16 ***\nDESTIN_ID761  -1.0762663  0.0514242   -20.929  < 2e-16 ***\nDESTIN_ID762  -3.6198172  0.0556469   -65.050  < 2e-16 ***\nDESTIN_ID763  -0.9781104  0.0514946   -18.994  < 2e-16 ***\nDESTIN_ID764  -1.1347283  0.0513231   -22.109  < 2e-16 ***\nDESTIN_ID765  -1.4249425  0.0516115   -27.609  < 2e-16 ***\nDESTIN_ID767  -1.9072209  0.0591799   -32.228  < 2e-16 ***\nDESTIN_ID769  -1.7616324  0.0514415   -34.245  < 2e-16 ***\nDESTIN_ID770  -0.5789087  0.0513002   -11.285  < 2e-16 ***\nDESTIN_ID775  -0.3606018  0.0514407    -7.010 2.38e-12 ***\nDESTIN_ID776  -0.3362084  0.0516029    -6.515 7.25e-11 ***\nDESTIN_ID777  -1.0924527  0.0514618   -21.228  < 2e-16 ***\nDESTIN_ID778  -2.2937701  0.0524660   -43.719  < 2e-16 ***\nDESTIN_ID780  -2.0644479  0.0521896   -39.557  < 2e-16 ***\nDESTIN_ID782  -2.7435932  0.0531297   -51.640  < 2e-16 ***\nDESTIN_ID783  -2.2569258  0.0518018   -43.568  < 2e-16 ***\nDESTIN_ID787  -0.0274889  0.0511740    -0.537 0.591153    \nDESTIN_ID788  -1.5865674  0.0513681   -30.886  < 2e-16 ***\nDESTIN_ID795  -1.4119848  0.0571658   -24.700  < 2e-16 ***\nDESTIN_ID796  -1.6569630  0.0523739   -31.637  < 2e-16 ***\nDESTIN_ID797  -1.6218978  0.0540722   -29.995  < 2e-16 ***\nDESTIN_ID798   0.6102245  0.0511503    11.930  < 2e-16 ***\nDESTIN_ID799   0.3044805  0.0511545     5.952 2.65e-09 ***\nDESTIN_ID801  -2.3798012  0.0532968   -44.652  < 2e-16 ***\nDESTIN_ID802  -1.9306021  0.0516500   -37.379  < 2e-16 ***\nDESTIN_ID805  -0.5245672  0.0518966   -10.108  < 2e-16 ***\nDESTIN_ID807  -1.8527545  0.0514893   -35.983  < 2e-16 ***\nDESTIN_ID808  -1.5979259  0.0514689   -31.046  < 2e-16 ***\nDESTIN_ID813   0.1627242  0.0512647     3.174 0.001503 ** \nDESTIN_ID814  -0.2662341  0.0514181    -5.178 2.24e-07 ***\nDESTIN_ID815  -0.1834736  0.0512746    -3.578 0.000346 ***\nDESTIN_ID816  -2.4640941  0.0534105   -46.135  < 2e-16 ***\nDESTIN_ID817  -0.7768225  0.0513380   -15.132  < 2e-16 ***\nDESTIN_ID825  -1.8772867  0.0518410   -36.212  < 2e-16 ***\nDESTIN_ID826  -1.7934129  0.0514838   -34.835  < 2e-16 ***\nDESTIN_ID827  -5.4489905  0.0846096   -64.402  < 2e-16 ***\nDESTIN_ID831   0.1350173  0.0513357     2.630 0.008536 ** \nDESTIN_ID832   0.3607842  0.0512365     7.042 1.90e-12 ***\nDESTIN_ID833  -0.3341683  0.0512916    -6.515 7.27e-11 ***\nDESTIN_ID834  -1.3764197  0.0518566   -26.543  < 2e-16 ***\nDESTIN_ID842  -3.4367734  0.0666240   -51.585  < 2e-16 ***\nDESTIN_ID844  -0.6296553  0.0512246   -12.292  < 2e-16 ***\nDESTIN_ID845  -1.1915191  0.0514746   -23.148  < 2e-16 ***\nDESTIN_ID850  -2.1822656  0.0537834   -40.575  < 2e-16 ***\nDESTIN_ID851   0.2925078  0.0515953     5.669 1.43e-08 ***\nDESTIN_ID852  -0.7139795  0.0514317   -13.882  < 2e-16 ***\nDESTIN_ID853  -1.1304969  0.0515724   -21.921  < 2e-16 ***\nDESTIN_ID854  -3.3340631  0.0594137   -56.116  < 2e-16 ***\nDESTIN_ID855  -1.5535809  0.0518187   -29.981  < 2e-16 ***\nDESTIN_ID861   0.5784275  0.0518262    11.161  < 2e-16 ***\nDESTIN_ID863  -2.1281493  0.0521026   -40.845  < 2e-16 ***\nDESTIN_ID864   0.9043346  0.0511178    17.691  < 2e-16 ***\nDESTIN_ID865  -3.0523085  0.0551156   -55.380  < 2e-16 ***\nDESTIN_ID869  -2.5539081  0.0620255   -41.175  < 2e-16 ***\nDESTIN_ID870   0.0660238  0.0524420     1.259 0.208034    \nDESTIN_ID871  -0.0596652  0.0512088    -1.165 0.243964    \nDESTIN_ID872  -2.3335291  0.0533044   -43.777  < 2e-16 ***\nDESTIN_ID873  -3.1530312  0.0664359   -47.460  < 2e-16 ***\nDESTIN_ID880  -4.8298391  0.1056458   -45.717  < 2e-16 ***\nDESTIN_ID882  -1.0168668  0.0512761   -19.831  < 2e-16 ***\nDESTIN_ID883  -1.7757724  0.0516772   -34.363  < 2e-16 ***\nDESTIN_ID887   0.0464989  0.0513549     0.905 0.365231    \nDESTIN_ID888  -0.8437394  0.0517547   -16.303  < 2e-16 ***\nDESTIN_ID889  -2.6338668  0.0551557   -47.753  < 2e-16 ***\nDESTIN_ID890  -0.9932009  0.0514230   -19.314  < 2e-16 ***\nDESTIN_ID891  -2.3856426  0.0542694   -43.959  < 2e-16 ***\nDESTIN_ID892  -1.8005918  0.0521230   -34.545  < 2e-16 ***\nDESTIN_ID899  -2.3335293  0.0621586   -37.542  < 2e-16 ***\nDESTIN_ID900  -1.1545273  0.0514533   -22.438  < 2e-16 ***\nDESTIN_ID901  -1.4397417  0.0513459   -28.040  < 2e-16 ***\nDESTIN_ID902   0.0866668  0.0513292     1.688 0.091325 .  \nDESTIN_ID905  -0.2695001  0.0517742    -5.205 1.94e-07 ***\nDESTIN_ID907  -2.2818942  0.0525554   -43.419  < 2e-16 ***\nDESTIN_ID908   0.0422309  0.0512178     0.825 0.409635    \nDESTIN_ID910  -1.3749421  0.0517765   -26.555  < 2e-16 ***\nDESTIN_ID917  -2.7846276  0.0707939   -39.334  < 2e-16 ***\nDESTIN_ID919  -1.4234531  0.0514240   -27.681  < 2e-16 ***\nDESTIN_ID920  -1.1221036  0.0513665   -21.845  < 2e-16 ***\nDESTIN_ID921  -0.9694543  0.0518281   -18.705  < 2e-16 ***\nDESTIN_ID925   0.6127094  0.0511651    11.975  < 2e-16 ***\nDESTIN_ID926  -0.3922438  0.0512915    -7.647 2.05e-14 ***\nDESTIN_ID927  -0.7158666  0.0513325   -13.946  < 2e-16 ***\nDESTIN_ID928  -1.7612234  0.0518486   -33.969  < 2e-16 ***\nDESTIN_ID937  -2.7185469  0.0604787   -44.950  < 2e-16 ***\nDESTIN_ID938  -2.0918745  0.0524136   -39.911  < 2e-16 ***\nDESTIN_ID939   0.5197244  0.0511487    10.161  < 2e-16 ***\nDESTIN_ID940  -1.0997696  0.0514625   -21.370  < 2e-16 ***\nDESTIN_ID941  -0.5205841  0.0516973   -10.070  < 2e-16 ***\nDESTIN_ID944  -2.6364157  0.0538598   -48.950  < 2e-16 ***\nDESTIN_ID945  -0.9212443  0.0514628   -17.901  < 2e-16 ***\nDESTIN_ID946  -0.7425649  0.0514599   -14.430  < 2e-16 ***\nDESTIN_ID947  -2.6172014  0.0533667   -49.042  < 2e-16 ***\nDESTIN_ID948  -0.6870528  0.0514890   -13.344  < 2e-16 ***\nDESTIN_ID949   0.0898406  0.0512359     1.753 0.079521 .  \nDESTIN_ID956  -2.2084830  0.0648094   -34.077  < 2e-16 ***\nDESTIN_ID958  -1.1656777  0.0514407   -22.661  < 2e-16 ***\nDESTIN_ID959  -1.0365630  0.0513487   -20.187  < 2e-16 ***\nDESTIN_ID960  -0.4712991  0.0514217    -9.165  < 2e-16 ***\nDESTIN_ID961  -1.9411339  0.0584269   -33.223  < 2e-16 ***\nDESTIN_ID964  -1.0033195  0.0519520   -19.312  < 2e-16 ***\nDESTIN_ID965  -0.0865117  0.0512228    -1.689 0.091233 .  \nDESTIN_ID966  -1.1172755  0.0523207   -21.354  < 2e-16 ***\nDESTIN_ID967  -2.8442043  0.0546464   -52.047  < 2e-16 ***\nDESTIN_ID968  -1.0797725  0.0515969   -20.927  < 2e-16 ***\nDESTIN_ID975  -4.7967600  0.1309369   -36.634  < 2e-16 ***\nDESTIN_ID976  -1.8602262  0.0559596   -33.242  < 2e-16 ***\nDESTIN_ID978  -1.4726089  0.0519510   -28.346  < 2e-16 ***\nDESTIN_ID979  -0.1847458  0.0513705    -3.596 0.000323 ***\nDESTIN_ID980  -0.5345170  0.0515399   -10.371  < 2e-16 ***\nDESTIN_ID982  -0.5246574  0.0513850   -10.210  < 2e-16 ***\nDESTIN_ID983  -0.6244313  0.0515605   -12.111  < 2e-16 ***\nDESTIN_ID984  -0.6235066  0.0513657   -12.139  < 2e-16 ***\nDESTIN_ID985  -1.2923408  0.0518432   -24.928  < 2e-16 ***\nDESTIN_ID986  -1.5823875  0.0520016   -30.430  < 2e-16 ***\nDESTIN_ID987  -2.5691378  0.0558720   -45.983  < 2e-16 ***\nDESTIN_ID993  -4.2580231  0.0816328   -52.161  < 2e-16 ***\nDESTIN_ID997  -1.1318504  0.0513936   -22.023  < 2e-16 ***\nDESTIN_ID998  -2.1530564  0.0527875   -40.787  < 2e-16 ***\nDESTIN_ID999   0.1749293  0.0518164     3.376 0.000736 ***\nDESTIN_ID1002 -2.0476748  0.0524410   -39.047  < 2e-16 ***\nDESTIN_ID1003  0.2281892  0.0511734     4.459 8.23e-06 ***\nDESTIN_ID1004 -1.3589008  0.0522253   -26.020  < 2e-16 ***\nDESTIN_ID1006 -0.6765643  0.0513932   -13.164  < 2e-16 ***\nDESTIN_ID1013 -4.2723008  0.0823509   -51.879  < 2e-16 ***\nDESTIN_ID1016 -2.0743729  0.0528191   -39.273  < 2e-16 ***\nDESTIN_ID1017 -1.0958695  0.0514938   -21.282  < 2e-16 ***\nDESTIN_ID1018 -0.3044099  0.0513337    -5.930 3.03e-09 ***\nDESTIN_ID1021 -0.9522186  0.0514124   -18.521  < 2e-16 ***\nDESTIN_ID1022  0.4438237  0.0511425     8.678  < 2e-16 ***\nDESTIN_ID1023 -1.1437400  0.0516456   -22.146  < 2e-16 ***\nDESTIN_ID1024 -0.6946447  0.0515446   -13.477  < 2e-16 ***\nDESTIN_ID1026 -2.1494843  0.0574077   -37.442  < 2e-16 ***\nDESTIN_ID1027 -3.6371819  0.1006611   -36.133  < 2e-16 ***\nDESTIN_ID1031 -5.4382854  0.1141465   -47.643  < 2e-16 ***\nDESTIN_ID1032 -0.8469498  0.0517227   -16.375  < 2e-16 ***\nDESTIN_ID1036  0.1139971  0.0511782     2.227 0.025917 *  \nDESTIN_ID1037 -1.5626592  0.0516487   -30.256  < 2e-16 ***\nDESTIN_ID1040  0.5923578  0.0511950    11.571  < 2e-16 ***\nDESTIN_ID1041 -0.3505308  0.0513273    -6.829 8.53e-12 ***\nDESTIN_ID1042 -0.5350680  0.0512978   -10.431  < 2e-16 ***\nDESTIN_ID1043 -2.6536766  0.0555152   -47.801  < 2e-16 ***\nDESTIN_ID1045 -1.9449797  0.0526169   -36.965  < 2e-16 ***\nDESTIN_ID1046 -3.3166717  0.0609996   -54.372  < 2e-16 ***\nDESTIN_ID1051 -5.8775426  0.1110136   -52.944  < 2e-16 ***\nDESTIN_ID1052 -0.9917988  0.0515620   -19.235  < 2e-16 ***\nDESTIN_ID1053 -2.7812817  0.0532913   -52.190  < 2e-16 ***\nDESTIN_ID1055 -2.0725198  0.0533382   -38.856  < 2e-16 ***\nDESTIN_ID1056 -0.9137313  0.0513772   -17.785  < 2e-16 ***\nDESTIN_ID1059 -0.7433682  0.0535833   -13.873  < 2e-16 ***\nDESTIN_ID1060 -1.2885205  0.0516767   -24.934  < 2e-16 ***\nDESTIN_ID1061 -0.1079557  0.0512111    -2.108 0.035027 *  \nDESTIN_ID1062 -0.7095369  0.0513768   -13.810  < 2e-16 ***\nDESTIN_ID1063 -0.7177745  0.0514494   -13.951  < 2e-16 ***\nDESTIN_ID1064 -0.2950283  0.0514039    -5.739 9.50e-09 ***\nDESTIN_ID1066 -5.5972450  0.1490552   -37.551  < 2e-16 ***\nDESTIN_ID1068 -1.7191019  0.0551417   -31.176  < 2e-16 ***\nDESTIN_ID1070 -2.9567628  0.0556263   -53.154  < 2e-16 ***\nDESTIN_ID1072 -4.5276940  0.0635762   -71.217  < 2e-16 ***\nDESTIN_ID1073 -2.7474898  0.0525231   -52.310  < 2e-16 ***\nDESTIN_ID1074 -1.8974767  0.0516909   -36.708  < 2e-16 ***\nDESTIN_ID1075 -2.5836175  0.0519751   -49.709  < 2e-16 ***\nDESTIN_ID1076 -2.1834742  0.0536059   -40.732  < 2e-16 ***\nDESTIN_ID1081 -0.8066278  0.0514080   -15.691  < 2e-16 ***\nDESTIN_ID1082  0.3726513  0.0511737     7.282 3.29e-13 ***\nDESTIN_ID1083 -1.5648244  0.0519960   -30.095  < 2e-16 ***\nDESTIN_ID1084 -0.9094668  0.0517740   -17.566  < 2e-16 ***\nDESTIN_ID1085 -0.1413923  0.0512685    -2.758 0.005818 ** \nDESTIN_ID1088 -1.6839936  0.0520749   -32.338  < 2e-16 ***\nDESTIN_ID1089 -1.3597895  0.0518511   -26.225  < 2e-16 ***\nDESTIN_ID1090 -0.3337169  0.0513663    -6.497 8.20e-11 ***\nDESTIN_ID1092 -2.7793606  0.0541697   -51.308  < 2e-16 ***\nDESTIN_ID1094 -0.5170821  0.0512056   -10.098  < 2e-16 ***\nDESTIN_ID1095 -0.6357332  0.0512474   -12.405  < 2e-16 ***\nDESTIN_ID1096 -2.5326092  0.0523250   -48.402  < 2e-16 ***\nDESTIN_ID1102 -3.0342317  0.0576483   -52.634  < 2e-16 ***\nDESTIN_ID1103 -2.3771791  0.0541141   -43.929  < 2e-16 ***\nDESTIN_ID1104 -1.0075789  0.0514627   -19.579  < 2e-16 ***\nDESTIN_ID1105  0.8156543  0.0511269    15.954  < 2e-16 ***\nDESTIN_ID1106 -0.7071545  0.0517547   -13.664  < 2e-16 ***\nDESTIN_ID1108 -3.5894050  0.0606106   -59.221  < 2e-16 ***\nDESTIN_ID1109 -0.5603359  0.0513854   -10.905  < 2e-16 ***\nDESTIN_ID1110 -1.2570939  0.0515799   -24.372  < 2e-16 ***\nDESTIN_ID1111 -2.9705711  0.0536720   -55.347  < 2e-16 ***\nDESTIN_ID1112 -5.6548962  0.1592178   -35.517  < 2e-16 ***\nDESTIN_ID1113 -3.9837270  0.0679630   -58.616  < 2e-16 ***\nDESTIN_ID1114 -2.7065258  0.0523153   -51.735  < 2e-16 ***\nDESTIN_ID1115 -2.0749600  0.0515775   -40.230  < 2e-16 ***\nDESTIN_ID1116 -1.6127447  0.0514013   -31.376  < 2e-16 ***\nDESTIN_ID1117 -1.9333097  0.0520603   -37.136  < 2e-16 ***\nDESTIN_ID1118 -2.5402824  0.0550619   -46.135  < 2e-16 ***\nDESTIN_ID1125 -0.4764097  0.0513131    -9.284  < 2e-16 ***\nDESTIN_ID1126 -0.2872462  0.0512597    -5.604 2.10e-08 ***\nDESTIN_ID1127 -1.3715461  0.0520774   -26.337  < 2e-16 ***\nDESTIN_ID1128 -0.8904130  0.0515370   -17.277  < 2e-16 ***\nDESTIN_ID1129 -0.8485422  0.0515068   -16.474  < 2e-16 ***\nDESTIN_ID1130 -1.8498606  0.0521663   -35.461  < 2e-16 ***\nDESTIN_ID1133 -0.6079496  0.0513088   -11.849  < 2e-16 ***\nDESTIN_ID1134 -1.6714795  0.0517701   -32.287  < 2e-16 ***\nDESTIN_ID1135 -2.4637904  0.0544071   -45.284  < 2e-16 ***\nDESTIN_ID1137  0.6106065  0.0511319    11.942  < 2e-16 ***\nDESTIN_ID1138  0.6133407  0.0511299    11.996  < 2e-16 ***\nDESTIN_ID1139 -2.2894407  0.0517745   -44.219  < 2e-16 ***\nDESTIN_ID1140 -5.6665662  0.1023276   -55.377  < 2e-16 ***\nDESTIN_ID1141 -2.5622807  0.0627534   -40.831  < 2e-16 ***\nDESTIN_ID1146 -1.0263493  0.0519786   -19.746  < 2e-16 ***\nDESTIN_ID1147 -0.0885395  0.0512243    -1.728 0.083904 .  \nDESTIN_ID1148 -0.7943459  0.0515730   -15.402  < 2e-16 ***\nDESTIN_ID1149 -0.7460018  0.0515877   -14.461  < 2e-16 ***\nDESTIN_ID1150 -0.8126881  0.0516803   -15.725  < 2e-16 ***\nDESTIN_ID1151 -1.2853654  0.0515419   -24.938  < 2e-16 ***\nDESTIN_ID1152 -1.0363317  0.0514125   -20.157  < 2e-16 ***\nDESTIN_ID1153 -0.9152701  0.0513985   -17.807  < 2e-16 ***\nDESTIN_ID1154 -1.4153083  0.0516692   -27.392  < 2e-16 ***\nDESTIN_ID1155 -1.3418017  0.0515244   -26.042  < 2e-16 ***\nDESTIN_ID1156 -2.3048642  0.0525219   -43.884  < 2e-16 ***\nDESTIN_ID1158 -4.8333324  0.0621349   -77.788  < 2e-16 ***\nDESTIN_ID1159 -1.6690161  0.0513125   -32.526  < 2e-16 ***\nDESTIN_ID1160 -1.2623093  0.0512933   -24.610  < 2e-16 ***\nDESTIN_ID1162 -2.2975722  0.0583334   -39.387  < 2e-16 ***\nDESTIN_ID1167 -0.4319083  0.0513956    -8.404  < 2e-16 ***\nDESTIN_ID1168 -0.4867358  0.0513647    -9.476  < 2e-16 ***\nDESTIN_ID1169 -0.4196883  0.0512724    -8.185 2.71e-16 ***\nDESTIN_ID1170 -1.2633091  0.0516380   -24.465  < 2e-16 ***\nDESTIN_ID1171 -0.4612264  0.0512883    -8.993  < 2e-16 ***\nDESTIN_ID1172 -0.4167143  0.0513765    -8.111 5.02e-16 ***\nDESTIN_ID1173 -1.6695684  0.0516766   -32.308  < 2e-16 ***\nDESTIN_ID1174 -1.1635589  0.0514298   -22.624  < 2e-16 ***\nDESTIN_ID1175 -1.1480723  0.0514226   -22.326  < 2e-16 ***\nDESTIN_ID1176 -0.7933175  0.0512996   -15.464  < 2e-16 ***\nDESTIN_ID1177 -3.0212879  0.0686230   -44.027  < 2e-16 ***\nDESTIN_ID1179 -1.9272944  0.0515230   -37.407  < 2e-16 ***\nDESTIN_ID1180 -2.8504725  0.0518742   -54.950  < 2e-16 ***\nDESTIN_ID1181 -1.6383701  0.0517380   -31.667  < 2e-16 ***\nDESTIN_ID1188 -1.1636803  0.0525539   -22.143  < 2e-16 ***\nDESTIN_ID1189  0.1678362  0.0512058     3.278 0.001047 ** \nDESTIN_ID1190 -0.7384498  0.0514652   -14.349  < 2e-16 ***\nDESTIN_ID1192 -0.2244635  0.0512555    -4.379 1.19e-05 ***\nDESTIN_ID1193 -0.3212871  0.0512070    -6.274 3.51e-10 ***\nDESTIN_ID1194 -0.1071258  0.0512856    -2.089 0.036725 *  \nDESTIN_ID1195  0.4412576  0.0511414     8.628  < 2e-16 ***\nDESTIN_ID1196 -1.2489665  0.0513623   -24.317  < 2e-16 ***\nDESTIN_ID1197 -1.5603293  0.0513794   -30.369  < 2e-16 ***\nDESTIN_ID1198 -0.6851542  0.0512907   -13.358  < 2e-16 ***\nDESTIN_ID1201 -1.5216674  0.0513796   -29.616  < 2e-16 ***\nDESTIN_ID1202 -1.7507868  0.0515085   -33.990  < 2e-16 ***\nDESTIN_ID1210  0.6871137  0.0511501    13.433  < 2e-16 ***\nDESTIN_ID1211  0.0182295  0.0512207     0.356 0.721915    \nDESTIN_ID1212  0.1757730  0.0511683     3.435 0.000592 ***\nDESTIN_ID1213 -0.4334094  0.0513037    -8.448  < 2e-16 ***\nDESTIN_ID1214 -1.2608993  0.0516231   -24.425  < 2e-16 ***\nDESTIN_ID1215  0.5829004  0.0511195    11.403  < 2e-16 ***\nDESTIN_ID1216 -1.2330679  0.0513562   -24.010  < 2e-16 ***\nDESTIN_ID1217 -1.4590475  0.0514217   -28.374  < 2e-16 ***\nDESTIN_ID1218  0.7491310  0.0511117    14.657  < 2e-16 ***\nDESTIN_ID1219 -0.3748651  0.0512364    -7.316 2.55e-13 ***\nDESTIN_ID1220 -0.1628878  0.0512899    -3.176 0.001494 ** \nDESTIN_ID1222 -3.9241200  0.0545897   -71.884  < 2e-16 ***\nDESTIN_ID1223 -2.1825094  0.0517206   -42.198  < 2e-16 ***\nDESTIN_ID1233  0.7639361  0.0511409    14.938  < 2e-16 ***\nDESTIN_ID1234  0.1011144  0.0511777     1.976 0.048183 *  \nDESTIN_ID1235 -0.0311393  0.0512049    -0.608 0.543101    \nDESTIN_ID1236 -1.0254369  0.0514824   -19.918  < 2e-16 ***\nDESTIN_ID1237 -0.9959044  0.0512820   -19.420  < 2e-16 ***\nDESTIN_ID1238 -0.8439506  0.0512454   -16.469  < 2e-16 ***\nDESTIN_ID1239 -0.6319330  0.0512673   -12.326  < 2e-16 ***\nDESTIN_ID1240 -1.2365081  0.0513695   -24.071  < 2e-16 ***\nDESTIN_ID1241 -1.0496381  0.0513007   -20.460  < 2e-16 ***\nDESTIN_ID1245 -3.1991858  0.0525292   -60.903  < 2e-16 ***\nDESTIN_ID1253 -2.4870196  0.0586805   -42.382  < 2e-16 ***\nDESTIN_ID1254 -1.2159063  0.0519153   -23.421  < 2e-16 ***\nDESTIN_ID1255  0.4867000  0.0511483     9.515  < 2e-16 ***\nDESTIN_ID1256 -1.0552881  0.0515074   -20.488  < 2e-16 ***\nDESTIN_ID1257 -0.9042988  0.0513844   -17.599  < 2e-16 ***\nDESTIN_ID1258 -0.6436356  0.0513836   -12.526  < 2e-16 ***\nDESTIN_ID1259 -0.9141544  0.0515453   -17.735  < 2e-16 ***\nDESTIN_ID1260 -1.0309641  0.0513015   -20.096  < 2e-16 ***\nDESTIN_ID1261 -1.1816924  0.0513299   -23.022  < 2e-16 ***\nDESTIN_ID1263 -1.9344201  0.0522416   -37.028  < 2e-16 ***\nDESTIN_ID1266 -4.2310585  0.0562463   -75.224  < 2e-16 ***\nDESTIN_ID1272 -0.7766243  0.0518997   -14.964  < 2e-16 ***\nDESTIN_ID1273 -0.0903308  0.0512399    -1.763 0.077917 .  \nDESTIN_ID1274 -0.7602933  0.0513311   -14.812  < 2e-16 ***\nDESTIN_ID1275 -1.0934025  0.0513658   -21.287  < 2e-16 ***\nDESTIN_ID1276 -1.2603951  0.0513356   -24.552  < 2e-16 ***\nDESTIN_ID1277 -1.0256043  0.0513124   -19.987  < 2e-16 ***\nDESTIN_ID1278 -2.8717405  0.0528622   -54.325  < 2e-16 ***\nDESTIN_ID1279 -0.7032469  0.0513596   -13.693  < 2e-16 ***\nDESTIN_ID1280  0.1570994  0.0511688     3.070 0.002139 ** \nDESTIN_ID1281 -4.0199321  0.0645862   -62.241  < 2e-16 ***\nDESTIN_ID1283 -3.7392515  0.0591160   -63.253  < 2e-16 ***\nDESTIN_ID1289 -1.1471538  0.0808938   -14.181  < 2e-16 ***\nDESTIN_ID1290 -2.6323086  0.1122049   -23.460  < 2e-16 ***\nDESTIN_ID1291 -1.9571314  0.0543070   -36.038  < 2e-16 ***\nDESTIN_ID1292 -0.5734833  0.0513837   -11.161  < 2e-16 ***\nDESTIN_ID1293 -0.1354832  0.0511966    -2.646 0.008137 ** \nDESTIN_ID1294 -0.7047795  0.0513225   -13.732  < 2e-16 ***\nDESTIN_ID1295 -0.5581269  0.0514574   -10.846  < 2e-16 ***\nDESTIN_ID1296 -1.9459378  0.0518432   -37.535  < 2e-16 ***\nDESTIN_ID1297 -1.7791298  0.0554479   -32.087  < 2e-16 ***\nDESTIN_ID1298 -1.4528299  0.0514896   -28.216  < 2e-16 ***\nDESTIN_ID1300 -3.5505636  0.0660378   -53.766  < 2e-16 ***\nDESTIN_ID1301 -2.5187564  0.0537117   -46.894  < 2e-16 ***\nDESTIN_ID1302 -1.5433935  0.0519374   -29.716  < 2e-16 ***\nDESTIN_ID1307 -2.1119008  0.1113196   -18.972  < 2e-16 ***\nDESTIN_ID1308 -2.5253520  0.1213380   -20.813  < 2e-16 ***\nDESTIN_ID1310 -0.5173812  0.0513061   -10.084  < 2e-16 ***\nDESTIN_ID1311 -0.0727548  0.0511869    -1.421 0.155214    \nDESTIN_ID1312 -1.0345836  0.0513581   -20.145  < 2e-16 ***\nDESTIN_ID1313 -4.3328447  0.0706537   -61.325  < 2e-16 ***\nDESTIN_ID1314 -1.8344890  0.0516474   -35.519  < 2e-16 ***\nDESTIN_ID1315 -1.6584762  0.0516854   -32.088  < 2e-16 ***\nDESTIN_ID1316 -0.4074739  0.0512406    -7.952 1.83e-15 ***\nDESTIN_ID1317 -2.7604359  0.0528430   -52.238  < 2e-16 ***\nDESTIN_ID1320 -3.0248306  0.0555386   -54.464  < 2e-16 ***\nDESTIN_ID1325 -2.0290390  0.0545883   -37.170  < 2e-16 ***\nDESTIN_ID1326 -0.6270480  0.0512569   -12.233  < 2e-16 ***\nDESTIN_ID1327 -0.3892311  0.0512253    -7.598 3.00e-14 ***\nDESTIN_ID1328 -0.9535960  0.0513854   -18.558  < 2e-16 ***\nDESTIN_ID1329 -2.5193485  0.0524923   -47.995  < 2e-16 ***\nDESTIN_ID1330 -2.6788635  0.0525382   -50.989  < 2e-16 ***\nDESTIN_ID1331 -0.1777079  0.0511991    -3.471 0.000519 ***\nDESTIN_ID1332 -1.2029504  0.0525565   -22.889  < 2e-16 ***\nDESTIN_ID1333 -2.4305710  0.0520910   -46.660  < 2e-16 ***\nDESTIN_ID1334 -2.1099519  0.0521434   -40.464  < 2e-16 ***\nDESTIN_ID1338 -2.6965644  0.1790680   -15.059  < 2e-16 ***\nDESTIN_ID1339 -1.7726480  0.0549723   -32.246  < 2e-16 ***\nDESTIN_ID1341 -2.3625173  0.0531248   -44.471  < 2e-16 ***\nDESTIN_ID1342  0.0949341  0.0511692     1.855 0.063554 .  \nDESTIN_ID1343 -0.8081614  0.0513381   -15.742  < 2e-16 ***\nDESTIN_ID1344  0.7167694  0.0511158    14.022  < 2e-16 ***\nDESTIN_ID1345 -2.5676643  0.0519996   -49.379  < 2e-16 ***\nDESTIN_ID1346 -0.9926647  0.0512735   -19.360  < 2e-16 ***\nDESTIN_ID1347 -1.7780975  0.0515654   -34.482  < 2e-16 ***\nDESTIN_ID1348 -0.8109860  0.0512988   -15.809  < 2e-16 ***\nDESTIN_ID1349 -2.1495311  0.0539875   -39.815  < 2e-16 ***\nDESTIN_ID1355 -1.0640934  0.0522346   -20.371  < 2e-16 ***\nDESTIN_ID1356 -0.7351683  0.0512935   -14.333  < 2e-16 ***\nDESTIN_ID1357 -0.2350532  0.0513533    -4.577 4.71e-06 ***\nDESTIN_ID1358 -0.5260701  0.0514668   -10.222  < 2e-16 ***\nDESTIN_ID1359 -0.4655575  0.0512332    -9.087  < 2e-16 ***\nDESTIN_ID1360 -1.5720926  0.0514666   -30.546  < 2e-16 ***\nDESTIN_ID1361 -0.7417322  0.0512176   -14.482  < 2e-16 ***\nDESTIN_ID1362 -1.9928530  0.0515271   -38.676  < 2e-16 ***\nDESTIN_ID1363 -1.5775131  0.0514707   -30.649  < 2e-16 ***\nDESTIN_ID1364 -3.6225278  0.0568965   -63.669  < 2e-16 ***\nDESTIN_ID1370 -1.5372749  0.0517297   -29.717  < 2e-16 ***\nDESTIN_ID1371 -0.9680257  0.0513632   -18.847  < 2e-16 ***\nDESTIN_ID1372 -0.4044020  0.0512258    -7.894 2.91e-15 ***\nDESTIN_ID1373 -0.7855846  0.0515800   -15.230  < 2e-16 ***\nDESTIN_ID1374 -1.3851400  0.0513762   -26.961  < 2e-16 ***\nDESTIN_ID1376 -0.8636962  0.0512226   -16.862  < 2e-16 ***\nDESTIN_ID1377 -6.4232676  0.0972714   -66.034  < 2e-16 ***\nDESTIN_ID1378 -4.4972058  0.0733904   -61.278  < 2e-16 ***\nDESTIN_ID1383 -1.0419845  0.0520719   -20.011  < 2e-16 ***\nDESTIN_ID1384 -1.1962536  0.0515226   -23.218  < 2e-16 ***\nDESTIN_ID1385 -1.1074196  0.0514019   -21.544  < 2e-16 ***\nDESTIN_ID1386 -1.2759701  0.0518353   -24.616  < 2e-16 ***\nDESTIN_ID1387 -1.9825404  0.0518375   -38.245  < 2e-16 ***\nDESTIN_ID1388 -2.2623502  0.0519867   -43.518  < 2e-16 ***\nDESTIN_ID1389 -1.5414966  0.0514333   -29.971  < 2e-16 ***\nDESTIN_ID1390 -1.3543014  0.0513974   -26.350  < 2e-16 ***\nDESTIN_ID1391 -2.5883545  0.0520750   -49.704  < 2e-16 ***\nDESTIN_ID1396 -1.2249850  0.0515805   -23.749  < 2e-16 ***\nDESTIN_ID1397 -0.1765606  0.0512093    -3.448 0.000565 ***\nDESTIN_ID1398 -1.1070413  0.0514446   -21.519  < 2e-16 ***\nDESTIN_ID1399 -0.9402780  0.0513549   -18.309  < 2e-16 ***\nDESTIN_ID1400 -0.8247144  0.0514050   -16.043  < 2e-16 ***\nDESTIN_ID1401 -1.8511483  0.0515306   -35.923  < 2e-16 ***\nDESTIN_ID1402 -0.7336405  0.0512106   -14.326  < 2e-16 ***\nDESTIN_ID1403 -3.1590047  0.0530771   -59.517  < 2e-16 ***\nDESTIN_ID1408 -1.2217981  0.0518532   -23.563  < 2e-16 ***\nDESTIN_ID1409 -0.5094078  0.0512919    -9.932  < 2e-16 ***\nDESTIN_ID1410 -0.9475346  0.0513199   -18.463  < 2e-16 ***\nDESTIN_ID1411 -0.0499768  0.0511877    -0.976 0.328894    \nDESTIN_ID1412 -1.8995918  0.0519329   -36.578  < 2e-16 ***\nDESTIN_ID1413 -0.0703376  0.0511842    -1.374 0.169379    \nDESTIN_ID1414 -0.0922691  0.0511388    -1.804 0.071186 .  \nDESTIN_ID1415 -1.7946490  0.0515078   -34.842  < 2e-16 ***\nDESTIN_ID1416 -1.4631992  0.0513882   -28.473  < 2e-16 ***\nDESTIN_ID1417 -3.5018822  0.0571303   -61.296  < 2e-16 ***\nDESTIN_ID1421 -2.3343257  0.0534279   -43.691  < 2e-16 ***\nDESTIN_ID1422  0.1120432  0.0511562     2.190 0.028508 *  \nDESTIN_ID1423 -0.3858981  0.0512236    -7.534 4.94e-14 ***\nDESTIN_ID1424 -1.1411731  0.0515633   -22.131  < 2e-16 ***\nDESTIN_ID1425 -0.5642458  0.0512584   -11.008  < 2e-16 ***\nDESTIN_ID1426 -1.0406868  0.0512628   -20.301  < 2e-16 ***\nDESTIN_ID1427 -0.9322266  0.0512239   -18.199  < 2e-16 ***\nDESTIN_ID1428 -2.1528174  0.0514854   -41.814  < 2e-16 ***\nDESTIN_ID1429 -2.3464738  0.0517605   -45.333  < 2e-16 ***\nDESTIN_ID1432 -1.5046165  0.0523868   -28.721  < 2e-16 ***\nDESTIN_ID1433 -1.0798753  0.0514382   -20.994  < 2e-16 ***\nDESTIN_ID1434 -1.5376367  0.0519119   -29.620  < 2e-16 ***\nDESTIN_ID1435 -0.0525456  0.0512080    -1.026 0.304834    \nDESTIN_ID1436 -0.4138305  0.0524333    -7.893 2.96e-15 ***\nDESTIN_ID1437 -1.0564494  0.0514026   -20.552  < 2e-16 ***\nDESTIN_ID1438 -1.4294329  0.0513299   -27.848  < 2e-16 ***\nDESTIN_ID1439 -0.4258247  0.0511643    -8.323  < 2e-16 ***\nDESTIN_ID1440  0.0534882  0.0511304     1.046 0.295509    \nDESTIN_ID1441 -1.9938529  0.0515422   -38.684  < 2e-16 ***\nDESTIN_ID1444 -1.0706570  0.0515009   -20.789  < 2e-16 ***\nDESTIN_ID1445 -0.1463697  0.0511947    -2.859 0.004249 ** \nDESTIN_ID1446 -0.3178128  0.0512824    -6.197 5.74e-10 ***\nDESTIN_ID1447 -0.1530050  0.0518376    -2.952 0.003161 ** \nDESTIN_ID1448  0.9643284  0.0515952    18.690  < 2e-16 ***\nDESTIN_ID1449 -2.8585732  0.0528469   -54.092  < 2e-16 ***\nDESTIN_ID1450 -1.4297606  0.0513262   -27.856  < 2e-16 ***\nDESTIN_ID1451 -1.5871020  0.0513020   -30.936  < 2e-16 ***\nDESTIN_ID1452 -3.0741473  0.0520067   -59.111  < 2e-16 ***\nDESTIN_ID1453 -2.2390035  0.0522775   -42.829  < 2e-16 ***\nDESTIN_ID1455 -1.3652998  0.0518189   -26.348  < 2e-16 ***\nDESTIN_ID1456 -1.4429148  0.0519603   -27.770  < 2e-16 ***\nDESTIN_ID1457 -0.9741309  0.0513611   -18.966  < 2e-16 ***\nDESTIN_ID1458 -0.1505986  0.0512115    -2.941 0.003275 ** \nDESTIN_ID1459 -2.6843821  0.0624807   -42.963  < 2e-16 ***\nDESTIN_ID1461 -2.7291664  0.0552655   -49.383  < 2e-16 ***\nDESTIN_ID1462 -2.4445823  0.0517277   -47.259  < 2e-16 ***\nDESTIN_ID1463 -0.7703443  0.0511859   -15.050  < 2e-16 ***\nDESTIN_ID1464  0.0226360  0.0511439     0.443 0.658060    \nDESTIN_ID1465 -1.7344718  0.0535272   -32.404  < 2e-16 ***\nDESTIN_ID1466  0.2333891  0.0511798     4.560 5.11e-06 ***\nDESTIN_ID1467 -0.3705804  0.0512155    -7.236 4.63e-13 ***\nDESTIN_ID1468 -0.2750669  0.0512127    -5.371 7.83e-08 ***\nDESTIN_ID1471 -1.3483143  0.0522302   -25.815  < 2e-16 ***\nDESTIN_ID1472 -2.4980532  0.0523419   -47.726  < 2e-16 ***\nDESTIN_ID1473 -2.2258100  0.0515959   -43.139  < 2e-16 ***\nDESTIN_ID1474 -0.5499497  0.0511779   -10.746  < 2e-16 ***\nDESTIN_ID1475 -3.6959832  0.0562014   -65.763  < 2e-16 ***\nDESTIN_ID1478 -1.4219375  0.0515168   -27.601  < 2e-16 ***\nDESTIN_ID1479 -3.2601482  0.0545674   -59.745  < 2e-16 ***\nDESTIN_ID1480 -0.1354770  0.0512353    -2.644 0.008188 ** \nDESTIN_ID1483 -0.1566657  0.0516504    -3.033 0.002420 ** \nDESTIN_ID1485 -2.1884999  0.0515371   -42.465  < 2e-16 ***\nDESTIN_ID1486 -3.6282686  0.0533232   -68.043  < 2e-16 ***\nDESTIN_ID1487 -2.6764579  0.0558298   -47.940  < 2e-16 ***\nDESTIN_ID1488 -0.6436465  0.0513384   -12.537  < 2e-16 ***\nDESTIN_ID1489 -2.6036362  0.0530268   -49.100  < 2e-16 ***\nDESTIN_ID1490 -1.5918011  0.0517087   -30.784  < 2e-16 ***\nDESTIN_ID1491 -2.0613934  0.0532768   -38.692  < 2e-16 ***\nDESTIN_ID1494 -3.5793099  0.0773520   -46.273  < 2e-16 ***\nDESTIN_ID1495 -3.9472282  0.0598405   -65.962  < 2e-16 ***\nDESTIN_ID1496 -2.1953272  0.0515916   -42.552  < 2e-16 ***\nDESTIN_ID1500 -1.7204435  0.0518909   -33.155  < 2e-16 ***\nDESTIN_ID1501 -0.5449633  0.0512648   -10.630  < 2e-16 ***\nDESTIN_ID1502 -0.0359154  0.0512033    -0.701 0.483036    \nDESTIN_ID1506 -4.8217445  0.1308220   -36.857  < 2e-16 ***\nDESTIN_ID1507 -2.4870681  0.0520239   -47.806  < 2e-16 ***\nDESTIN_ID1508 -2.4096693  0.0532428   -45.258  < 2e-16 ***\nDESTIN_ID1510 -0.5573734  0.0513763   -10.849  < 2e-16 ***\nDESTIN_ID1511 -1.9836337  0.0524075   -37.850  < 2e-16 ***\nDESTIN_ID1512 -1.2586048  0.0517710   -24.311  < 2e-16 ***\nDESTIN_ID1513 -2.4700894  0.0528530   -46.735  < 2e-16 ***\nDESTIN_ID1516 -0.2687923  0.0519284    -5.176 2.26e-07 ***\nDESTIN_ID1518 -2.8440051  0.0532837   -53.375  < 2e-16 ***\nDESTIN_ID1521 -1.2922936  0.0515431   -25.072  < 2e-16 ***\nDESTIN_ID1522 -0.3450539  0.0512243    -6.736 1.63e-11 ***\nDESTIN_ID1523 -1.5634940  0.0516755   -30.256  < 2e-16 ***\nDESTIN_ID1526 -2.3490268  0.0561543   -41.832  < 2e-16 ***\nDESTIN_ID1530 -2.1733901  0.0537234   -40.455  < 2e-16 ***\nDESTIN_ID1531 -2.4550412  0.0543564   -45.166  < 2e-16 ***\nDESTIN_ID1532 -1.3588145  0.0514719   -26.399  < 2e-16 ***\nDESTIN_ID1533 -1.7955676  0.0520486   -34.498  < 2e-16 ***\nDESTIN_ID1534 -3.4423026  0.0593177   -58.032  < 2e-16 ***\nDESTIN_ID1535 -2.6503220  0.0575474   -46.055  < 2e-16 ***\nDESTIN_ID1536  0.0418287  0.0522716     0.800 0.423584    \nDESTIN_ID1541 -1.0243142  0.0515150   -19.884  < 2e-16 ***\nDESTIN_ID1542  0.9270520  0.0511146    18.137  < 2e-16 ***\nDESTIN_ID1543 -1.9904360  0.0520541   -38.238  < 2e-16 ***\nDESTIN_ID1544 -0.5577044  0.0513124   -10.869  < 2e-16 ***\nDESTIN_ID1545 -1.9333388  0.0520139   -37.170  < 2e-16 ***\nDESTIN_ID1546 -1.4288558  0.0516266   -27.677  < 2e-16 ***\nDESTIN_ID1553 -1.0416805  0.0513840   -20.272  < 2e-16 ***\nDESTIN_ID1554 -1.1414858  0.0513156   -22.244  < 2e-16 ***\nDESTIN_ID1555 -1.9109600  0.0517074   -36.957  < 2e-16 ***\nDESTIN_ID1556 -0.4845043  0.0512949    -9.445  < 2e-16 ***\nDESTIN_ID1557 -1.4306515  0.0515324   -27.762  < 2e-16 ***\nDESTIN_ID1558 -0.0611526  0.0512018    -1.194 0.232343    \nDESTIN_ID1562 -2.0375654  0.0522387   -39.005  < 2e-16 ***\nDESTIN_ID1563 -1.0271640  0.0513236   -20.013  < 2e-16 ***\nDESTIN_ID1564 -0.3689785  0.0512180    -7.204 5.84e-13 ***\nDESTIN_ID1565 -0.5117011  0.0512440    -9.986  < 2e-16 ***\nDESTIN_ID1566 -1.0433528  0.0513827   -20.306  < 2e-16 ***\nDESTIN_ID1568 -0.8467955  0.0513643   -16.486  < 2e-16 ***\nDESTIN_ID1573 -1.8919438  0.0518374   -36.498  < 2e-16 ***\nDESTIN_ID1574 -1.3252658  0.0515704   -25.698  < 2e-16 ***\nDESTIN_ID1575 -3.0994001  0.0533675   -58.077  < 2e-16 ***\nDESTIN_ID1576 -0.8437874  0.0512454   -16.466  < 2e-16 ***\nDESTIN_ID1577 -1.9081358  0.0518688   -36.788  < 2e-16 ***\nDESTIN_ID1578 -0.9059028  0.0513597   -17.638  < 2e-16 ***\nDESTIN_ID1584 -0.7329892  0.0512998   -14.288  < 2e-16 ***\nDESTIN_ID1585 -0.5449072  0.0515279   -10.575  < 2e-16 ***\nDESTIN_ID1586 -0.1531532  0.0511797    -2.992 0.002767 ** \nDESTIN_ID1587 -0.2322313  0.0511827    -4.537 5.70e-06 ***\nDESTIN_ID1588 -2.4143870  0.0529502   -45.597  < 2e-16 ***\nDESTIN_ID1589 -1.5448527  0.0517193   -29.870  < 2e-16 ***\nDESTIN_ID1593 -0.7385422  0.0514092   -14.366  < 2e-16 ***\nDESTIN_ID1594  0.2526515  0.0511892     4.936 7.99e-07 ***\nDESTIN_ID1595 -0.2904748  0.0512392    -5.669 1.44e-08 ***\nDESTIN_ID1596  1.0851928  0.0511120    21.232  < 2e-16 ***\nDESTIN_ID1597 -3.5767865  0.0572608   -62.465  < 2e-16 ***\nDESTIN_ID1598 -1.9173941  0.0517165   -37.075  < 2e-16 ***\nDESTIN_ID1602 -2.0454249  0.0816410   -25.054  < 2e-16 ***\nDESTIN_ID1603 -5.4447022  0.1263041   -43.108  < 2e-16 ***\nDESTIN_ID1604 -0.5433770  0.0513216   -10.588  < 2e-16 ***\nDESTIN_ID1605 -2.1563800  0.0518992   -41.549  < 2e-16 ***\nDESTIN_ID1606 -1.4823999  0.0514556   -28.809  < 2e-16 ***\nDESTIN_ID1607 -0.1356600  0.0512003    -2.650 0.008059 ** \nDESTIN_ID1608 -3.3884410  0.0590150   -57.417  < 2e-16 ***\nDESTIN_ID1611 -2.2791242  0.0528917   -43.090  < 2e-16 ***\nDESTIN_ID1612 -0.8942991  0.0514630   -17.378  < 2e-16 ***\nDESTIN_ID1613  0.0443775  0.0512663     0.866 0.386695    \nDESTIN_ID1614 -0.8282687  0.0512756   -16.153  < 2e-16 ***\nDESTIN_ID1615 -1.2715758  0.0516806   -24.605  < 2e-16 ***\nDESTIN_ID1616  0.6196685  0.0511474    12.115  < 2e-16 ***\nDESTIN_ID1620 -1.6374907  0.0526708   -31.089  < 2e-16 ***\nDESTIN_ID1621  0.2456255  0.0512289     4.795 1.63e-06 ***\nDESTIN_ID1622 -1.5208917  0.0517938   -29.364  < 2e-16 ***\nDESTIN_ID1623  0.2837942  0.0511562     5.548 2.90e-08 ***\nDESTIN_ID1624 -0.7787906  0.0513308   -15.172  < 2e-16 ***\nDESTIN_ID1629 -1.2138780  0.0526156   -23.071  < 2e-16 ***\nDESTIN_ID1630 -0.6806463  0.0514492   -13.229  < 2e-16 ***\nDESTIN_ID1631 -1.1238505  0.0516029   -21.779  < 2e-16 ***\nDESTIN_ID1632 -1.9128821  0.0517008   -36.999  < 2e-16 ***\nDESTIN_ID1633 -1.4387348  0.0516862   -27.836  < 2e-16 ***\nDESTIN_ID1638 -0.0826305  0.0515018    -1.604 0.108621    \nDESTIN_ID1639 -0.8921727  0.0518134   -17.219  < 2e-16 ***\nDESTIN_ID1640 -1.7013555  0.0516953   -32.911  < 2e-16 ***\nDESTIN_ID1641 -0.7237192  0.0513689   -14.089  < 2e-16 ***\nDESTIN_ID1642 -2.8480330  0.0622406   -45.758  < 2e-16 ***\nDESTIN_ID1646  0.1189017  0.0516486     2.302 0.021328 *  \nDESTIN_ID1647 -0.5097550  0.0517256    -9.855  < 2e-16 ***\nDESTIN_ID1648 -0.1021611  0.0513599    -1.989 0.046688 *  \nDESTIN_ID1649 -1.4215089  0.0515715   -27.564  < 2e-16 ***\nDESTIN_ID1654  0.2428878  0.0518646     4.683 2.83e-06 ***\nDESTIN_ID1655  1.1232640  0.0515412    21.793  < 2e-16 ***\nDESTIN_ID1656 -0.7726187  0.0516677   -14.954  < 2e-16 ***\nDESTIN_ID1657 -0.4077035  0.0513677    -7.937 2.07e-15 ***\nDESTIN_ID1658 -0.4453531  0.0524479    -8.491  < 2e-16 ***\nDESTIN_ID1664 -0.3363683  0.0522016    -6.444 1.17e-10 ***\nDESTIN_ID1665 -2.8821993  0.0563091   -51.185  < 2e-16 ***\nDESTIN_ID1666 -0.8546731  0.0516702   -16.541  < 2e-16 ***\nDESTIN_ID1667  0.0086771  0.0526768     0.165 0.869161    \nDESTIN_ID1674 -1.5223061  0.0550176   -27.669  < 2e-16 ***\nDESTIN_ID1675 -0.5604505  0.0523930   -10.697  < 2e-16 ***\nDESTIN_ID1676 -1.0496009  0.0519262   -20.213  < 2e-16 ***\nDESTIN_ID1682  0.2013910  0.0514033     3.918 8.93e-05 ***\nDESTIN_ID1685 -1.2138586  0.0520391   -23.326  < 2e-16 ***\nDESTIN_ID1686 -0.8221107  0.0519495   -15.825  < 2e-16 ***\nDESTIN_ID1691 -1.5703926  0.0526301   -29.838  < 2e-16 ***\nDESTIN_ID1693 -1.5564173  0.0550872   -28.254  < 2e-16 ***\nDESTIN_ID1695 -1.3023989  0.0565697   -23.023  < 2e-16 ***\nDESTIN_ID1698  0.2270380  0.0538940     4.213 2.52e-05 ***\nDESTIN_ID1704 -0.2656612  0.0516288    -5.146 2.67e-07 ***\nDESTIN_ID1711  1.6457328  0.0511824    32.154  < 2e-16 ***\nDESTIN_ID1714 -3.8112096  0.0785639   -48.511  < 2e-16 ***\nDESTIN_ID1722  1.1202508  0.0512870    21.843  < 2e-16 ***\nDESTIN_ID1723 -4.2185516  0.0830227   -50.812  < 2e-16 ***\nDESTIN_ID1726 -0.9735552  0.0574757   -16.939  < 2e-16 ***\nDESTIN_ID1731 -0.3501969  0.0520034    -6.734 1.65e-11 ***\nDESTIN_ID1732 -0.6819895  0.0521356   -13.081  < 2e-16 ***\nDESTIN_ID1741  0.3043229  0.0525014     5.796 6.77e-09 ***\nDESTIN_ID1742  0.9082167  0.0514778    17.643  < 2e-16 ***\nDESTIN_ID1750  0.0648329  0.0565671     1.146 0.251744    \nDESTIN_ID1751 -0.7742022  0.0554356   -13.966  < 2e-16 ***\nDESTIN_ID1768  0.2355765  0.0547472     4.303 1.69e-05 ***\nlog(dist)     -1.6009267  0.0002896 -5527.648  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 98394406  on 65075  degrees of freedom\nResidual deviance: 25135816  on 63435  degrees of freedom\nAIC: 25496393\n\nNumber of Fisher Scoring iterations: 7"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#calculate-r-squared",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#calculate-r-squared",
    "title": "Take Home Exercise 2",
    "section": "Calculate R-squared",
    "text": "Calculate R-squared\n\n# R-squared function\n\n#create function to calculate r-squared value \nCalcRSquared <- function(observed,estimated){\n  r <- cor(observed,estimated)\n  R2 <- r^2\n  R2\n}\n\n\nCalcRSquared(uncSIM$data$TRIPS, uncSIM$fitted.values)\n\n[1] 0.2214091\n\n\n\nr2_mcfadden(uncSIM)\n\n# R2 for Generalized Linear Regression\n       R2: 0.487\n  adj. R2: 0.487"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#model-comparison",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#model-comparison",
    "title": "Take Home Exercise 2",
    "section": "Model Comparison",
    "text": "Model Comparison\n\nmodel_list <- list(unconstrained=uncSIM,\n                   originConstrained=orcSIM,\n                   destinationConstrained=decSIM,\n                   doublyConstrained=dbcSIM)\n\n\ncompare_performance(model_list,\n                    metrics = \"RMSE\")\n\n# Comparison of Model Performance Indices\n\nName                   | Model |     RMSE\n-----------------------------------------\nunconstrained          |   glm | 1587.446\noriginConstrained      |   glm | 1476.694\ndestinationConstrained |   glm | 1394.096\ndoublyConstrained      |   glm | 1175.151"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/data/geospatial/F&B.html",
    "href": "In-class_Ex/In-class_Ex05/data/geospatial/F&B.html",
    "title": "",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/data/geospatial/Liesure&Recreation.html",
    "href": "In-class_Ex/In-class_Ex05/data/geospatial/Liesure&Recreation.html",
    "title": "",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/data/geospatial/MPSZ-2019.html",
    "href": "In-class_Ex/In-class_Ex05/data/geospatial/MPSZ-2019.html",
    "title": "",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/data/geospatial/entertn.html",
    "href": "In-class_Ex/In-class_Ex05/data/geospatial/entertn.html",
    "title": "",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/data/geospatial/Retails.html",
    "href": "In-class_Ex/In-class_Ex05/data/geospatial/Retails.html",
    "title": "",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/data/geospatial/FinServ.html",
    "href": "In-class_Ex/In-class_Ex05/data/geospatial/FinServ.html",
    "title": "",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/data/geospatial/Business.html",
    "href": "In-class_Ex/In-class_Ex05/data/geospatial/Business.html",
    "title": "",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#data-generation",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#data-generation",
    "title": "Take Home Exercise 2",
    "section": "2.4 Data Generation",
    "text": "2.4 Data Generation\n\n2.4.1 Combining Busstop and mpsz\nAfter extracting the commuting flow for Weekday Morning Peak, we will combine it into busstop sf data frame. To ensure distinct flows, we will use the unique() function into our code.\n\nbusstop_mpsz <- st_intersection(busstop, hex_grid) %>%\n    select(BUS_STOP_N, grid_id) %>%\n  st_drop_geometry()\n\nThereafter, we will perform the left_join() function twice. Firstly, we will join it based on ORIGIN_PT_CODE , where we will rename some of the columns and retain unique records. Then, we will join it based on DESTINATION_PT_CODE which we have renamed it as DESTIN_BS earlier.\nAfter joining the data, we used drop_na() to removes any rows with missing values, and to group the data by origin and destination ID while computing the sum of trips for each origin-destination pair, saved under MORNING_PEAK. Lastly, a copy of the output - od_data was saved in RDS format.\n\n\nShow the code\n#left_join based on Origin_PT_Code\nod_data <- left_join(wkd6_9 , busstop_mpsz,\n            by = c(\"ORIGIN_PT_CODE\" = \"BUS_STOP_N\")) %>%\n  rename(ORIGIN_BS = ORIGIN_PT_CODE,\n         ORIGIN_ID = grid_id,\n         DESTIN_BS = DESTINATION_PT_CODE) %>%\n  unique() %>%\n  ungroup()\n\n#left_join based on Destination_PT_code(rename as DESTIN_BS)\nod_data <- left_join(od_data , busstop_mpsz,\n            by = c(\"DESTIN_BS\" = \"BUS_STOP_N\")) %>%\n  unique() %>%\n  ungroup()\n\n# compute the morning peak trips between origin and destination grid\nod_data <- od_data %>%\n  rename(DESTIN_ID = grid_id) %>%\n  drop_na() %>%\n  group_by(ORIGIN_ID, DESTIN_ID) %>%\n  summarise(MORNING_PEAK = sum(TRIPS)) %>%\n  ungroup()\n\n#save a copy in RDS format\nwrite_rds(od_data, \"data/rds/od_data.rds\")\n\n\nWe will load od_data into the R environment.\n\nod_data <- read_rds(\"data/rds/od_data.rds\")\n\n\n\n2.4.2 Visualizing Spatial Interaction\nWith the joined data - od_data, we will prepare a desire line by using the stplanr package by removing the intra-zonal flows, creating the desire lines, and to visualize the desire lines.\n\n2.4.2.1 Remove Intra-zonal flows\nIntra-zonal flows refer to trips that take place within the same zone or area. In our context, it refers to the passenger commuting within the hexagon grid of 750m. As we will not be plotting the intra-zonal flows, the following code chunk below are used to only keep rows where the Origin_ID is not equal to the DESTIN_ID.\n\nod_data1 <- od_data[od_data$ORIGIN_ID!=od_data$DESTIN_ID,]\n\n\n\n2.4.2.2 Create desire lines\nUsing the stplanr::od2line() function, we will create a line object where the flow refers to the data containing origin and destination information, zones refers to spatial data presenting the zone geometries, while zone_code refers to the specific column in our zones data that could identify the zone. In our case, it will be the grid_id. The output will be saved as flowLine.\n\nflowLine <- od2line(flow = od_data1, \n                    zones = hex_grid,\n                    zone_code = \"grid_id\")\n\n\n\n2.4.2.3 Visualizing desire lines\n\nAfter creating the flowLine , we will visualize the resulting desire lines. Notably, quantiles provide a detailed picture of the how the MORNING_PEAK values are spread across. It allows us to identify if the flow is concentrated or evenly distributed across the network.\n\nquantile(flowLine$MORNING_PEAK,\n         probs = c(0.8, 0.9, 0.95, 0.99, 1))\n\n    80%     90%     95%     99%    100% \n  255.0   677.0  1479.0  6219.5 89347.0 \n\n\nFrom the results above, we will use tmap package to plot our visualization for the 80th percentile, 95% percentile, and 99% percentile. We began by plotting the background map tm_shape(hex_grid) + tm_polygons(), and filtering the flowLine to include flows based on the quantiles identified earlier. This allows us to focus on the most significant flow movements.\nAfterwards, we used tm_shape() + tm_lines() to add flow lines into our visualization. In addition, we reduce the transparency of the lines to get a clear view of the flow. Low alpha results in transparency.\n\nTop 20%Top 5%Top 1%\n\n\n\n\nShow the code\ntm_shape(hex_grid) +\n  tm_polygons(col = 'grey95') +\nflowLine %>%\n    filter(MORNING_PEAK >= 255) %>%\ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",  #set line width \n           col = \"purple\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.8) +\n    tm_layout(main.title = \"Commuting flow of the top 20% \",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE)\n\n\n\n\n\n\n\n\n\nShow the code\ntm_shape(hex_grid) +\n  tm_polygons(col = 'grey95') +\nflowLine %>%\n    filter(MORNING_PEAK >= 1479) %>%\ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           col = \"purple\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.8) +\n    tm_layout(main.title = \"Commuting flow of the top 5% \",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE)\n\n\n\n\n\n\n\n\n\nShow the code\ntm_shape(hex_grid) +\n  tm_polygons(col = 'grey95') +\nflowLine %>%\n    filter(MORNING_PEAK >= 6220) %>%\ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           col = \"purple\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.8) +\n    tm_layout(main.title = \"Commuting flow of the top 1% \",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE)\n\n\n\n\n\n\n\n\nBased on the commuting flow of the 80th percentile, we could observe various clusters within the region, and commuters spend more travelling from origin to destination. From the thickness of the line, we could infer that the commuters travels the same route frequently - from the North region to the East region, and from the West region to the Central Region. It is interesting to note that commuters like myself do not travel from the West region to the East region frequently.\nLooking at the 95th percentile , the flow movement decreased significantly. The commuting flow around the central region has dropped. Moreover, we are able to observe the flow from the North region to the East region, while we noticed that there are significant flow from the North region to the North-East region.\nNarrowing it down to the top 1% (99% percentile), we are able identify that the longest commuting distance is from the North region to the North-East region. Also, commuters tend to travel within their region, travelling a short distance from origin to destination."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#importing-collected-data",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#importing-collected-data",
    "title": "Take Home Exercise 2",
    "section": "3.1 Importing Collected Data",
    "text": "3.1 Importing Collected Data\nSimilar to section 2.2, we used sf::st_read() to import and sf::st_transform() to ensure that the projected coordinate system is in the right format before storing it. With the exception of HDB and School data where we used readr::read_csv() to import and sf::st_as_sf() to converting an aspatial data into sf tibble data.frame.\nBefore we determine which exploratory variables are attractive or propulsive to a commuter, we plot a map based on the variables. We created a 3-layers plot by looking at :\n\nLayer 1: Our base layer (hex_grid) . Hexagon grid with bus_stop density.\nLayer 2: Commuting flow movement. Identified based on purple lines.\nLayer 3: Variables’ location. Identified based on blue dots.\n\nthe hexagon_grid with the bus_stop density as the base layer ,followed by the lines in the commuting flow, before adding the various points of the variable.\nWe map it by the hexagon grid with bus stop + commuting flow + various collected data.\n\nBusinessEntertainmentF&BFinancial ServiceHDBLeisure & RecreationRetailSchool\n\n\n\n\nShow the code\nbusiness_sf <- st_read(dsn = \"data/geospatial\",\n                      layer = \"Business\") %>%\n      st_transform(crs = 3414)\n\n\nReading layer `Business' from data source \n  `/Users/smu/Rworkshop/jiawenoh/ISSS624/Take-Home_Ex/Take-Home_Ex02/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 6550 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3669.148 ymin: 25408.41 xmax: 47034.83 ymax: 50148.54\nProjected CRS: SVY21 / Singapore TM\n\n\nShow the code\n#plotting point symbol map with analytical hexagon grid\ntmap_options(check.and.fix = TRUE)\ntm_shape(hex_grid) +\n  tm_fill(col = \"bus_stops\",palette = \"Purples\") +\ntm_borders(alpha = 0.3) +\n  flowLine %>%\n    filter(MORNING_PEAK >= 1000) %>%\ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           col = \"purple\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.8) +\n    tm_layout(main.title = \"Commuting flow of \\n passengers with >1,000 trips\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\ntm_shape(business_sf) +\n  tm_dots(col = \"lightblue\") +\n  tm_layout(main.title = \"Business Spot\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) \n\n\n\n\n\n\n\n\n\nShow the code\nentertn_sf <- st_read(dsn = \"data/geospatial\",\n                      layer = \"entertn\") %>%\n      st_transform(crs = 3414)\n\n\nReading layer `entertn' from data source \n  `/Users/smu/Rworkshop/jiawenoh/ISSS624/Take-Home_Ex/Take-Home_Ex02/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 114 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 10809.34 ymin: 26528.63 xmax: 41600.62 ymax: 46375.77\nProjected CRS: SVY21 / Singapore TM\n\n\nShow the code\n#plotting point symbol map with analytical hexagon grid\ntmap_options(check.and.fix = TRUE)\ntm_shape(hex_grid) +\n  tm_fill(col = \"bus_stops\",palette = \"Purples\") +\ntm_borders(alpha = 0.3) +\n    flowLine %>%\n    filter(MORNING_PEAK >= 1000) %>%\ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           col = \"purple\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.8) +\n    tm_layout(main.title = \"Commuting flow of \\n passengers with >1,000 trips\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\ntm_shape(entertn_sf) +\n  tm_dots(col = \"lightblue\") +\n  tm_layout(main.title = \"Entertainment Spot\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) \n\n\n\n\n\n\n\n\n\nShow the code\nfnb_sf <- st_read(dsn = \"data/geospatial\",\n                      layer = \"F&B\") %>%\n      st_transform(crs = 3414)\n\n\nReading layer `F&B' from data source \n  `/Users/smu/Rworkshop/jiawenoh/ISSS624/Take-Home_Ex/Take-Home_Ex02/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1919 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 6010.495 ymin: 25343.27 xmax: 45462.43 ymax: 48796.21\nProjected CRS: SVY21 / Singapore TM\n\n\nShow the code\n#plotting point symbol map with analytical hexagon grid\ntmap_options(check.and.fix = TRUE)\ntm_shape(hex_grid) +\n  tm_fill(col = \"bus_stops\",palette = \"Purples\") +\ntm_borders(alpha = 0.3) +\n    flowLine %>%\n    filter(MORNING_PEAK >= 1000) %>%\ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           col = \"purple\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.8) +\n    tm_layout(main.title = \"Commuting flow of \\n passengers with >1,000 trips\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\ntm_shape(fnb_sf) +\n  tm_dots(col = \"lightblue\") +\n  tm_layout(main.title = \"Food and Beverages Spot\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) \n\n\n\n\n\n\n\n\n\nShow the code\nfinserv_sf <- st_read(dsn = \"data/geospatial\",\n                      layer = \"FinServ\") %>%\n      st_transform(crs = 3414)\n\n\nReading layer `FinServ' from data source \n  `/Users/smu/Rworkshop/jiawenoh/ISSS624/Take-Home_Ex/Take-Home_Ex02/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 3320 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 4881.527 ymin: 25171.88 xmax: 46526.16 ymax: 49338.02\nProjected CRS: SVY21 / Singapore TM\n\n\nShow the code\n#plotting point symbol map with analytical hexagon grid\ntmap_options(check.and.fix = TRUE)\ntm_shape(hex_grid) +\n  tm_fill(col = \"bus_stops\",palette = \"Purples\") +\ntm_borders(alpha = 0.3) +\n    flowLine %>%\n    filter(MORNING_PEAK >= 1000) %>%\ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           col = \"purple\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.8) +\n    tm_layout(main.title = \"Commuting flow of \\n passengers with >1,000 trips\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\ntm_shape(finserv_sf) +\n  tm_dots(col = \"lightblue\") +\n  tm_layout(main.title = \"Financial Service Spot\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) \n\n\n\n\n\n\n\nnote that some residential area have commercial etc, would be a mixed development but we will include it in our analysis.\n\n\nShow the code\n#import hdb.csv and tidy data \nhdb <- read_csv(\"data/aspatial/hdb.csv\") %>%\n  rename(latitude = \"lat\",\n         longitude = \"lng\") %>%\n  filter(residential == \"Y\") \n\n#converting an aspatial data into sf tibble data.frame\nhdb_sf <- st_as_sf(hdb, \n                       coords = c(\"longitude\", \"latitude\"),\n                       crs=4326) %>%\n  st_transform(crs = 3414)\n\n#identify intersection between hdb and hex_grid to compute total_dwelling units \nhdb_sf_sum <- st_intersection(hdb_sf, hex_grid) %>%\n  group_by(grid_id) %>%\n  summarise(\n    HDB_SUM = sum(total_dwelling_units)\n  ) %>%\n  ungroup() \n\n#plotting point symbol map with analytical hexagon grid\ntmap_options(check.and.fix = TRUE)\ntm_shape(hex_grid) +\n  tm_fill(col = \"bus_stops\",palette = \"Purples\") +\ntm_borders(alpha = 0.3) +\n    flowLine %>%\n    filter(MORNING_PEAK >= 1000) %>%\ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           col = \"purple\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.8) +\n    tm_layout(main.title = \"Commuting flow of \\n passengers with >1,000 trips\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\ntm_shape(hdb_sf_sum) +\n  tm_dots(col = \"lightblue\") +\n  tm_layout(main.title = \"HDB Spot\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) \n\n\n\n\n\n\n\n\n\nShow the code\nlnr_sf <- st_read(dsn = \"data/geospatial\",\n                      layer = \"Liesure&Recreation\") %>%\n      st_transform(crs = 3414)\n\n\nReading layer `Liesure&Recreation' from data source \n  `/Users/smu/Rworkshop/jiawenoh/ISSS624/Take-Home_Ex/Take-Home_Ex02/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1217 features and 30 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 6010.495 ymin: 25134.28 xmax: 48439.77 ymax: 50078.88\nProjected CRS: SVY21 / Singapore TM\n\n\nShow the code\n#plotting point symbol map with analytical hexagon grid\ntmap_options(check.and.fix = TRUE)\ntm_shape(hex_grid) +\n  tm_fill(col = \"bus_stops\",palette = \"Purples\") +\ntm_borders(alpha = 0.3) +\n    flowLine %>%\n    filter(MORNING_PEAK >= 1000) %>%\ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           col = \"purple\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.8) +\n    tm_layout(main.title = \"Commuting flow of \\n passengers with >1,000 trips\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\ntm_shape(lnr_sf) +\n  tm_dots(col = \"lightblue\") +\n  tm_layout(main.title = \"Leisure and Recreation Spot\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) \n\n\n\n\n\n\n\n\n\nShow the code\nretail_sf <- st_read(dsn = \"data/geospatial\",\n                      layer = \"Retails\") %>%\n      st_transform(crs = 3414)\n\n\nReading layer `Retails' from data source \n  `/Users/smu/Rworkshop/jiawenoh/ISSS624/Take-Home_Ex/Take-Home_Ex02/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 37635 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 4737.982 ymin: 25171.88 xmax: 48265.04 ymax: 50135.28\nProjected CRS: SVY21 / Singapore TM\n\n\nShow the code\n#plotting point symbol map with analytical hexagon grid\ntmap_options(check.and.fix = TRUE)\ntm_shape(hex_grid) +\n  tm_fill(col = \"bus_stops\",palette = \"Purples\") +\ntm_borders(alpha = 0.3) +\n    flowLine %>%\n    filter(MORNING_PEAK >= 1000) %>%\ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           col = \"purple\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.8) +\n    tm_layout(main.title = \"Commuting flow of \\n passengers with >1,000 trips\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\ntm_shape(retail_sf) +\n  tm_dots(col = \"lightblue\") +\n  tm_layout(main.title = \"Retail Spot\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) \n\n\n\n\n\n\n\n\n\nShow the code\n#import school.csv into R environment \nschools <- read_csv(\"data/aspatial/schools.csv\") %>%\n  rename(latitude = 'results.LATITUDE', longitude ='results.LONGITUDE') %>%\n  select(postal_code, school_name, latitude, longitude)\n\n#convert an aspatial data into sf tibble data frame\nschools_sf <- st_as_sf(schools, \n                       coords = c(\"longitude\", \"latitude\"),\n                       crs=4326) %>%\n  st_transform(crs = 3414)\n\n#plotting point symbol map with analytical hexagon grid\ntmap_options(check.and.fix = TRUE)\ntm_shape(hex_grid) +\n  tm_fill(col = \"bus_stops\",palette = \"Purples\") +\ntm_borders(alpha = 0.3) +\n    flowLine %>%\n    filter(MORNING_PEAK >= 1000) %>%\ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           col = \"purple\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.8) +\n    tm_layout(main.title = \"Commuting flow of \\n passengers with >1,000 trips\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\ntm_shape(schools_sf) +\n  tm_dots(col = \"lightblue\") +\n  tm_layout(main.title = \"School Spot\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) \n\n\n\n\n\n\n\n\nWe append the point symbol to our existing map. Based on the commuting flow of Weekday Morning (0600-0900), we will drop off: - Entertainment - Food & Beverages - Leisure & Recreation\nFor future analysis, we will be focusing on Business, Financial Services, HDB, Retail, and School.\n\n3.2 Compute point-in-polygon count\n\nBusinessFinancial ServiceHDBRetailSchool\n\n\n\nCount number of Businesses in Hexagon Grid\n\nhex_grid$`BUSINESS_COUNT`<- lengths(st_intersects(hex_grid, business_sf))\n\n\n\nSummary Statistics\n\nsummary(hex_grid$BUSINESS_COUNT)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   0.000   0.000   3.368   1.000 126.000 \n\n\n\n\n\n\nCount number of Financial Services in Hexagon Grid\n\nhex_grid$`finserv_COUNT`<- lengths(st_intersects(hex_grid, finserv_sf))\n\n\n\nSummary Statistics\n\nsummary(hex_grid$finserv_COUNT)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   0.000   0.000   1.707   0.000 176.000 \n\n\n\n\n\n\nCount number of HDB in Hexagon Grid\n\n\nShow the code\nhdb_sf_units <- st_intersection(hdb_sf, hex_grid) %>%\n  st_drop_geometry() %>%\n  group_by(grid_id) %>%\n  summarise(\n    HDB_SUM = sum(total_dwelling_units)\n  ) %>%\n  ungroup() \n\nhex_grid <- left_join(hex_grid, hdb_sf_units, by = \"grid_id\") \nhex_grid$HDB_SUM <- replace_na(hex_grid$HDB_SUM, 0)\n\n\n\n\nSummary Statistics\n\nsummary(hex_grid$HDB_SUM)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n    0.0     0.0     0.0   560.8     0.0  8324.0 \n\n\n\n\n\n\nCount number of Retails in Hexagon Grid\n\nhex_grid$`retail_COUNT`<- lengths(st_intersects(hex_grid, retail_sf))\n\n\n\nSummary Statistics\n\nsummary(hex_grid$retail_COUNT)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    0.00   19.35    6.00 1427.00 \n\n\n\n\n\n\nCount number of School in Hexagon Grid\n\nhex_grid$`school_COUNT`<- lengths(st_intersects(hex_grid, schools_sf))\n\n\n\nSummary Statistics\n\nsummary(hex_grid$school_COUNT)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.0000  0.0000  0.0000  0.1799  0.0000  5.0000"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#calculate-r-squared-1",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#calculate-r-squared-1",
    "title": "Take Home Exercise 2",
    "section": "Calculate R-squared",
    "text": "Calculate R-squared\n\nCalcRSquared(dbcSIM$data$TRIPS, dbcSIM$fitted.values)\n\n[1] 0.5737163"
  }
]